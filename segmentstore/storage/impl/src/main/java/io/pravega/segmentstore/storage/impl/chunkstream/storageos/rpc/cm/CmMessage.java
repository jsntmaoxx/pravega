// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chunk.proto

package io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm;

public final class CmMessage {
  private CmMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registry.add(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest.ingestSystemUnderTransformationRepoChunkRequest);
  }
  /**
   * Protobuf enum {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BlockStatus}
   *
   * <pre>
   * status reported by SSM
   * </pre>
   */
  public enum BlockStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>HEALTHY = 0;</code>
     *
     * <pre>
     * the block is accessible and good
     * </pre>
     */
    HEALTHY(0, 0),
    /**
     * <code>SUSPICIOUS = 1;</code>
     *
     * <pre>
     * the block is on a suspicious node or disk
     * </pre>
     */
    SUSPICIOUS(1, 1),
    /**
     * <code>MAINTENANCE = 2;</code>
     *
     * <pre>
     * the block is on a maintenance node or disk
     * </pre>
     */
    MAINTENANCE(2, 2),
    /**
     * <code>BAD = 3;</code>
     *
     * <pre>
     * the block is not accessible
     * </pre>
     */
    BAD(3, 3),
    ;

    /**
     * <code>HEALTHY = 0;</code>
     *
     * <pre>
     * the block is accessible and good
     * </pre>
     */
    public static final int HEALTHY_VALUE = 0;
    /**
     * <code>SUSPICIOUS = 1;</code>
     *
     * <pre>
     * the block is on a suspicious node or disk
     * </pre>
     */
    public static final int SUSPICIOUS_VALUE = 1;
    /**
     * <code>MAINTENANCE = 2;</code>
     *
     * <pre>
     * the block is on a maintenance node or disk
     * </pre>
     */
    public static final int MAINTENANCE_VALUE = 2;
    /**
     * <code>BAD = 3;</code>
     *
     * <pre>
     * the block is not accessible
     * </pre>
     */
    public static final int BAD_VALUE = 3;


    public final int getNumber() { return value; }

    public static BlockStatus valueOf(int value) {
      switch (value) {
        case 0: return HEALTHY;
        case 1: return SUSPICIOUS;
        case 2: return MAINTENANCE;
        case 3: return BAD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BlockStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<BlockStatus>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BlockStatus>() {
            public BlockStatus findValueByNumber(int number) {
              return BlockStatus.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.getDescriptor().getEnumTypes().get(0);
    }

    private static final BlockStatus[] VALUES = values();

    public static BlockStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private BlockStatus(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BlockStatus)
  }

  /**
   * Protobuf enum {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.LocationRecoveryStatus}
   *
   * <pre>
   * recovery related status
   * </pre>
   */
  public enum LocationRecoveryStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RECONSTRUCTING = 0;</code>
     *
     * <pre>
     * the block is allocated by data has not copied to it yet
     * </pre>
     */
    RECONSTRUCTING(0, 0),
    /**
     * <code>RETIRING = 1;</code>
     *
     * <pre>
     * the block is ready to be freed after some delay
     * </pre>
     */
    RETIRING(1, 1),
    /**
     * <code>CORRUPTED = 2;</code>
     *
     * <pre>
     * the block has bit-rot detected,
     * will go to RETIRING status after a new one is ready to replace it
     * </pre>
     */
    CORRUPTED(2, 2),
    ;

    /**
     * <code>RECONSTRUCTING = 0;</code>
     *
     * <pre>
     * the block is allocated by data has not copied to it yet
     * </pre>
     */
    public static final int RECONSTRUCTING_VALUE = 0;
    /**
     * <code>RETIRING = 1;</code>
     *
     * <pre>
     * the block is ready to be freed after some delay
     * </pre>
     */
    public static final int RETIRING_VALUE = 1;
    /**
     * <code>CORRUPTED = 2;</code>
     *
     * <pre>
     * the block has bit-rot detected,
     * will go to RETIRING status after a new one is ready to replace it
     * </pre>
     */
    public static final int CORRUPTED_VALUE = 2;


    public final int getNumber() { return value; }

    public static LocationRecoveryStatus valueOf(int value) {
      switch (value) {
        case 0: return RECONSTRUCTING;
        case 1: return RETIRING;
        case 2: return CORRUPTED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LocationRecoveryStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<LocationRecoveryStatus>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LocationRecoveryStatus>() {
            public LocationRecoveryStatus findValueByNumber(int number) {
              return LocationRecoveryStatus.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.getDescriptor().getEnumTypes().get(1);
    }

    private static final LocationRecoveryStatus[] VALUES = values();

    public static LocationRecoveryStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private LocationRecoveryStatus(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.LocationRecoveryStatus)
  }

  /**
   * Protobuf enum {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.LocationType}
   */
  public enum LocationType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>STORAGE_SERVER = 0;</code>
     */
    STORAGE_SERVER(0, 0),
    /**
     * <code>NFS = 1;</code>
     */
    NFS(1, 1),
    /**
     * <code>OBJECT_BACKEND = 2;</code>
     */
    OBJECT_BACKEND(2, 2),
    /**
     * <code>SYSTEM_UNDER_TRANSFORMATION = 10;</code>
     */
    SYSTEM_UNDER_TRANSFORMATION(3, 10),
    ;

    /**
     * <code>STORAGE_SERVER = 0;</code>
     */
    public static final int STORAGE_SERVER_VALUE = 0;
    /**
     * <code>NFS = 1;</code>
     */
    public static final int NFS_VALUE = 1;
    /**
     * <code>OBJECT_BACKEND = 2;</code>
     */
    public static final int OBJECT_BACKEND_VALUE = 2;
    /**
     * <code>SYSTEM_UNDER_TRANSFORMATION = 10;</code>
     */
    public static final int SYSTEM_UNDER_TRANSFORMATION_VALUE = 10;


    public final int getNumber() { return value; }

    public static LocationType valueOf(int value) {
      switch (value) {
        case 0: return STORAGE_SERVER;
        case 1: return NFS;
        case 2: return OBJECT_BACKEND;
        case 10: return SYSTEM_UNDER_TRANSFORMATION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LocationType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<LocationType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LocationType>() {
            public LocationType findValueByNumber(int number) {
              return LocationType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.getDescriptor().getEnumTypes().get(2);
    }

    private static final LocationType[] VALUES = values();

    public static LocationType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private LocationType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.LocationType)
  }

  /**
   * Protobuf enum {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcStatus}
   */
  public enum EcStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NOT_STARTED = 0;</code>
     */
    NOT_STARTED(0, 0),
    /**
     * <code>COMPLETED = 1;</code>
     */
    COMPLETED(1, 1),
    /**
     * <code>ENCODING = 2;</code>
     */
    ENCODING(2, 2),
    /**
     * <code>REDUNDANT = 3;</code>
     */
    REDUNDANT(3, 3),
    ;

    /**
     * <code>NOT_STARTED = 0;</code>
     */
    public static final int NOT_STARTED_VALUE = 0;
    /**
     * <code>COMPLETED = 1;</code>
     */
    public static final int COMPLETED_VALUE = 1;
    /**
     * <code>ENCODING = 2;</code>
     */
    public static final int ENCODING_VALUE = 2;
    /**
     * <code>REDUNDANT = 3;</code>
     */
    public static final int REDUNDANT_VALUE = 3;


    public final int getNumber() { return value; }

    public static EcStatus valueOf(int value) {
      switch (value) {
        case 0: return NOT_STARTED;
        case 1: return COMPLETED;
        case 2: return ENCODING;
        case 3: return REDUNDANT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EcStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EcStatus>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EcStatus>() {
            public EcStatus findValueByNumber(int number) {
              return EcStatus.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.getDescriptor().getEnumTypes().get(3);
    }

    private static final EcStatus[] VALUES = values();

    public static EcStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EcStatus(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcStatus)
  }

  /**
   * Protobuf enum {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingStatus}
   */
  public enum ShippingStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>GEO_SHIPPING_STATUS_SUCCESS = 1;</code>
     *
     * <pre>
     * Shipping success
     * </pre>
     */
    GEO_SHIPPING_STATUS_SUCCESS(0, 1),
    /**
     * <code>GEO_SHIPPING_STATUS_FAIL_TIMEOUT = 2;</code>
     *
     * <pre>
     * Shipping failed due to timeout
     * </pre>
     */
    GEO_SHIPPING_STATUS_FAIL_TIMEOUT(1, 2),
    /**
     * <code>GEO_SHIPPING_STATUS_FAIL_REMOTE_WRITE_FAILURE = 3;</code>
     *
     * <pre>
     * Shipping failed due to remote zone write failure
     * </pre>
     */
    GEO_SHIPPING_STATUS_FAIL_REMOTE_WRITE_FAILURE(2, 3),
    /**
     * <code>GEO_SHIPPING_STATUS_COPYING = 4;</code>
     *
     * <pre>
     * underCopying
     * </pre>
     */
    GEO_SHIPPING_STATUS_COPYING(3, 4),
    /**
     * <code>GEO_SHIPPING_STATUS_UNKNOWN = 5;</code>
     *
     * <pre>
     * Shipping status due to unknown, most likely no one is shipping
     * </pre>
     */
    GEO_SHIPPING_STATUS_UNKNOWN(4, 5),
    ;

    /**
     * <code>GEO_SHIPPING_STATUS_SUCCESS = 1;</code>
     *
     * <pre>
     * Shipping success
     * </pre>
     */
    public static final int GEO_SHIPPING_STATUS_SUCCESS_VALUE = 1;
    /**
     * <code>GEO_SHIPPING_STATUS_FAIL_TIMEOUT = 2;</code>
     *
     * <pre>
     * Shipping failed due to timeout
     * </pre>
     */
    public static final int GEO_SHIPPING_STATUS_FAIL_TIMEOUT_VALUE = 2;
    /**
     * <code>GEO_SHIPPING_STATUS_FAIL_REMOTE_WRITE_FAILURE = 3;</code>
     *
     * <pre>
     * Shipping failed due to remote zone write failure
     * </pre>
     */
    public static final int GEO_SHIPPING_STATUS_FAIL_REMOTE_WRITE_FAILURE_VALUE = 3;
    /**
     * <code>GEO_SHIPPING_STATUS_COPYING = 4;</code>
     *
     * <pre>
     * underCopying
     * </pre>
     */
    public static final int GEO_SHIPPING_STATUS_COPYING_VALUE = 4;
    /**
     * <code>GEO_SHIPPING_STATUS_UNKNOWN = 5;</code>
     *
     * <pre>
     * Shipping status due to unknown, most likely no one is shipping
     * </pre>
     */
    public static final int GEO_SHIPPING_STATUS_UNKNOWN_VALUE = 5;


    public final int getNumber() { return value; }

    public static ShippingStatus valueOf(int value) {
      switch (value) {
        case 1: return GEO_SHIPPING_STATUS_SUCCESS;
        case 2: return GEO_SHIPPING_STATUS_FAIL_TIMEOUT;
        case 3: return GEO_SHIPPING_STATUS_FAIL_REMOTE_WRITE_FAILURE;
        case 4: return GEO_SHIPPING_STATUS_COPYING;
        case 5: return GEO_SHIPPING_STATUS_UNKNOWN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ShippingStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ShippingStatus>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ShippingStatus>() {
            public ShippingStatus findValueByNumber(int number) {
              return ShippingStatus.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.getDescriptor().getEnumTypes().get(4);
    }

    private static final ShippingStatus[] VALUES = values();

    public static ShippingStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ShippingStatus(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingStatus)
  }

  /**
   * Protobuf enum {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkStatus}
   *
   * <pre>
   * for chunk state machine
   * </pre>
   */
  public enum ChunkStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ACTIVE = 0;</code>
     */
    ACTIVE(0, 0),
    /**
     * <code>SEALED = 1;</code>
     */
    SEALED(1, 1),
    /**
     * <code>DELETING = 2;</code>
     */
    DELETING(2, 2),
    /**
     * <code>GEO_DELETING = 3;</code>
     */
    GEO_DELETING(3, 3),
    /**
     * <code>DELETED = 4;</code>
     */
    DELETED(4, 4),
    ;

    /**
     * <code>ACTIVE = 0;</code>
     */
    public static final int ACTIVE_VALUE = 0;
    /**
     * <code>SEALED = 1;</code>
     */
    public static final int SEALED_VALUE = 1;
    /**
     * <code>DELETING = 2;</code>
     */
    public static final int DELETING_VALUE = 2;
    /**
     * <code>GEO_DELETING = 3;</code>
     */
    public static final int GEO_DELETING_VALUE = 3;
    /**
     * <code>DELETED = 4;</code>
     */
    public static final int DELETED_VALUE = 4;


    public final int getNumber() { return value; }

    public static ChunkStatus valueOf(int value) {
      switch (value) {
        case 0: return ACTIVE;
        case 1: return SEALED;
        case 2: return DELETING;
        case 3: return GEO_DELETING;
        case 4: return DELETED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ChunkStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ChunkStatus>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ChunkStatus>() {
            public ChunkStatus findValueByNumber(int number) {
              return ChunkStatus.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.getDescriptor().getEnumTypes().get(5);
    }

    private static final ChunkStatus[] VALUES = values();

    public static ChunkStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ChunkStatus(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkStatus)
  }

  /**
   * Protobuf enum {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDataType}
   *
   * <pre>
   * which type of level-0 data this chunk holds
   * </pre>
   */
  public enum ChunkDataType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>REPO = 0;</code>
     */
    REPO(0, 0),
    /**
     * <code>JOURNAL = 1;</code>
     */
    JOURNAL(1, 1),
    /**
     * <code>BTREE = 2;</code>
     */
    BTREE(2, 2),
    ;

    /**
     * <code>REPO = 0;</code>
     */
    public static final int REPO_VALUE = 0;
    /**
     * <code>JOURNAL = 1;</code>
     */
    public static final int JOURNAL_VALUE = 1;
    /**
     * <code>BTREE = 2;</code>
     */
    public static final int BTREE_VALUE = 2;


    public final int getNumber() { return value; }

    public static ChunkDataType valueOf(int value) {
      switch (value) {
        case 0: return REPO;
        case 1: return JOURNAL;
        case 2: return BTREE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ChunkDataType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ChunkDataType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ChunkDataType>() {
            public ChunkDataType findValueByNumber(int number) {
              return ChunkDataType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.getDescriptor().getEnumTypes().get(6);
    }

    private static final ChunkDataType[] VALUES = values();

    public static ChunkDataType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ChunkDataType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDataType)
  }

  /**
   * Protobuf enum {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkType}
   *
   * <pre>
   * type for geo replication
   * </pre>
   */
  public enum ChunkType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LOCAL = 0;</code>
     */
    LOCAL(0, 0),
    /**
     * <code>REMOTE = 1;</code>
     */
    REMOTE(1, 1),
    /**
     * <code>COPY = 2;</code>
     */
    COPY(2, 2),
    /**
     * <code>ENCODED = 3;</code>
     */
    ENCODED(3, 3),
    /**
     * <code>PARITY = 4;</code>
     */
    PARITY(4, 4),
    ;

    /**
     * <code>LOCAL = 0;</code>
     */
    public static final int LOCAL_VALUE = 0;
    /**
     * <code>REMOTE = 1;</code>
     */
    public static final int REMOTE_VALUE = 1;
    /**
     * <code>COPY = 2;</code>
     */
    public static final int COPY_VALUE = 2;
    /**
     * <code>ENCODED = 3;</code>
     */
    public static final int ENCODED_VALUE = 3;
    /**
     * <code>PARITY = 4;</code>
     */
    public static final int PARITY_VALUE = 4;


    public final int getNumber() { return value; }

    public static ChunkType valueOf(int value) {
      switch (value) {
        case 0: return LOCAL;
        case 1: return REMOTE;
        case 2: return COPY;
        case 3: return ENCODED;
        case 4: return PARITY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ChunkType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ChunkType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ChunkType>() {
            public ChunkType findValueByNumber(int number) {
              return ChunkType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.getDescriptor().getEnumTypes().get(7);
    }

    private static final ChunkType[] VALUES = values();

    public static ChunkType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ChunkType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkType)
  }

  /**
   * Protobuf enum {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RepoChunkType}
   *
   * <pre>
   * to describe chunk when it is initially created
   * </pre>
   */
  public enum RepoChunkType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TYPE_I = 0;</code>
     *
     * <pre>
     * 2 normal copies + 1 EC copy, turn back to 3 normal copies if EC copy can't be allocated
     * </pre>
     */
    TYPE_I(0, 0),
    /**
     * <code>TYPE_II = 1;</code>
     *
     * <pre>
     * single EC copy
     * </pre>
     */
    TYPE_II(1, 1),
    ;

    /**
     * <code>TYPE_I = 0;</code>
     *
     * <pre>
     * 2 normal copies + 1 EC copy, turn back to 3 normal copies if EC copy can't be allocated
     * </pre>
     */
    public static final int TYPE_I_VALUE = 0;
    /**
     * <code>TYPE_II = 1;</code>
     *
     * <pre>
     * single EC copy
     * </pre>
     */
    public static final int TYPE_II_VALUE = 1;


    public final int getNumber() { return value; }

    public static RepoChunkType valueOf(int value) {
      switch (value) {
        case 0: return TYPE_I;
        case 1: return TYPE_II;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RepoChunkType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<RepoChunkType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RepoChunkType>() {
            public RepoChunkType findValueByNumber(int number) {
              return RepoChunkType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.getDescriptor().getEnumTypes().get(8);
    }

    private static final RepoChunkType[] VALUES = values();

    public static RepoChunkType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private RepoChunkType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RepoChunkType)
  }

  /**
   * Protobuf enum {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BTreeChunkDataType}
   *
   * <pre>
   * to describe the data type stored in btree chunk
   * </pre>
   */
  public enum BTreeChunkDataType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>GENERAL = 0;</code>
     */
    GENERAL(0, 0),
    /**
     * <code>LEAF_PAGE = 1;</code>
     *
     * <pre>
     * btree leaf page
     * </pre>
     */
    LEAF_PAGE(1, 1),
    /**
     * <code>INDEX_PAGE = 2;</code>
     *
     * <pre>
     * index page, ct progress, occupancy, bloomfilter
     * </pre>
     */
    INDEX_PAGE(2, 2),
    ;

    /**
     * <code>GENERAL = 0;</code>
     */
    public static final int GENERAL_VALUE = 0;
    /**
     * <code>LEAF_PAGE = 1;</code>
     *
     * <pre>
     * btree leaf page
     * </pre>
     */
    public static final int LEAF_PAGE_VALUE = 1;
    /**
     * <code>INDEX_PAGE = 2;</code>
     *
     * <pre>
     * index page, ct progress, occupancy, bloomfilter
     * </pre>
     */
    public static final int INDEX_PAGE_VALUE = 2;


    public final int getNumber() { return value; }

    public static BTreeChunkDataType valueOf(int value) {
      switch (value) {
        case 0: return GENERAL;
        case 1: return LEAF_PAGE;
        case 2: return INDEX_PAGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BTreeChunkDataType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<BTreeChunkDataType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BTreeChunkDataType>() {
            public BTreeChunkDataType findValueByNumber(int number) {
              return BTreeChunkDataType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.getDescriptor().getEnumTypes().get(9);
    }

    private static final BTreeChunkDataType[] VALUES = values();

    public static BTreeChunkDataType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private BTreeChunkDataType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BTreeChunkDataType)
  }

  /**
   * Protobuf enum {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCustomState}
   */
  public enum ChunkCustomState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PARTIALGC_COPYFROM = 0;</code>
     */
    PARTIALGC_COPYFROM(0, 0),
    /**
     * <code>PARTIALGC_COPYTO = 1;</code>
     */
    PARTIALGC_COPYTO(1, 1),
    /**
     * <code>PARTIALGC_NO_CANDIDATE = 2;</code>
     */
    PARTIALGC_NO_CANDIDATE(2, 2),
    ;

    /**
     * <code>PARTIALGC_COPYFROM = 0;</code>
     */
    public static final int PARTIALGC_COPYFROM_VALUE = 0;
    /**
     * <code>PARTIALGC_COPYTO = 1;</code>
     */
    public static final int PARTIALGC_COPYTO_VALUE = 1;
    /**
     * <code>PARTIALGC_NO_CANDIDATE = 2;</code>
     */
    public static final int PARTIALGC_NO_CANDIDATE_VALUE = 2;


    public final int getNumber() { return value; }

    public static ChunkCustomState valueOf(int value) {
      switch (value) {
        case 0: return PARTIALGC_COPYFROM;
        case 1: return PARTIALGC_COPYTO;
        case 2: return PARTIALGC_NO_CANDIDATE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ChunkCustomState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ChunkCustomState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ChunkCustomState>() {
            public ChunkCustomState findValueByNumber(int number) {
              return ChunkCustomState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.getDescriptor().getEnumTypes().get(10);
    }

    private static final ChunkCustomState[] VALUES = values();

    public static ChunkCustomState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ChunkCustomState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCustomState)
  }

  /**
   * Protobuf enum {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.PlacementSafeCheckLevel}
   *
   * <pre>
   *use by CM to check whether a chunk has safe segments placement
   * </pre>
   */
  public enum PlacementSafeCheckLevel
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FD = 0;</code>
     */
    FD(0, 0),
    /**
     * <code>NODE = 1;</code>
     */
    NODE(1, 1),
    ;

    /**
     * <code>FD = 0;</code>
     */
    public static final int FD_VALUE = 0;
    /**
     * <code>NODE = 1;</code>
     */
    public static final int NODE_VALUE = 1;


    public final int getNumber() { return value; }

    public static PlacementSafeCheckLevel valueOf(int value) {
      switch (value) {
        case 0: return FD;
        case 1: return NODE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PlacementSafeCheckLevel>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PlacementSafeCheckLevel>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PlacementSafeCheckLevel>() {
            public PlacementSafeCheckLevel findValueByNumber(int number) {
              return PlacementSafeCheckLevel.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.getDescriptor().getEnumTypes().get(11);
    }

    private static final PlacementSafeCheckLevel[] VALUES = values();

    public static PlacementSafeCheckLevel valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private PlacementSafeCheckLevel(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.PlacementSafeCheckLevel)
  }

  /**
   * Protobuf enum {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Source}
   */
  public enum Source
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>USER_INJECTED = 0;</code>
     */
    USER_INJECTED(0, 0),
    /**
     * <code>REPLICATED = 1;</code>
     */
    REPLICATED(1, 1),
    ;

    /**
     * <code>USER_INJECTED = 0;</code>
     */
    public static final int USER_INJECTED_VALUE = 0;
    /**
     * <code>REPLICATED = 1;</code>
     */
    public static final int REPLICATED_VALUE = 1;


    public final int getNumber() { return value; }

    public static Source valueOf(int value) {
      switch (value) {
        case 0: return USER_INJECTED;
        case 1: return REPLICATED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Source>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Source>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Source>() {
            public Source findValueByNumber(int number) {
              return Source.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.getDescriptor().getEnumTypes().get(12);
    }

    private static final Source[] VALUES = values();

    public static Source valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Source(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Source)
  }

  /**
   * Protobuf enum {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus}
   */
  public enum ChunkOperationStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SUCCESS = 0;</code>
     *
     * <pre>
     * the common status
     * </pre>
     */
    SUCCESS(0, 0),
    /**
     * <code>ERROR_INTERNAL = 1;</code>
     */
    ERROR_INTERNAL(1, 1),
    /**
     * <code>ERROR_INVALID_ARGUMENT = 2;</code>
     */
    ERROR_INVALID_ARGUMENT(2, 2),
    /**
     * <code>ERROR_NO_SPACE = 3;</code>
     */
    ERROR_NO_SPACE(3, 3),
    /**
     * <code>ERROR_NO_SUCH_CHUNK = 4;</code>
     */
    ERROR_NO_SUCH_CHUNK(4, 4),
    /**
     * <code>ERROR_SHOULD_SEAL = 5;</code>
     *
     * <pre>
     * operation error due to chunk should be sealed, e.g.,
     * extend lease op for timeout/auto seal failed as cm detects upgrade/recovery is needed for the chunk
     * </pre>
     */
    ERROR_SHOULD_SEAL(5, 5),
    /**
     * <code>ERROR_NO_STORAGE_DEVICE_FOUND = 6;</code>
     */
    ERROR_NO_STORAGE_DEVICE_FOUND(6, 6),
    /**
     * <code>ERROR_NO_ZONE_FOUND = 7;</code>
     */
    ERROR_NO_ZONE_FOUND(7, 7),
    /**
     * <code>ERROR_ALREADY_SEALED = 8;</code>
     */
    ERROR_ALREADY_SEALED(8, 8),
    /**
     * <code>ERROR_ALREADY_GEO_REPLICATED = 9;</code>
     */
    ERROR_ALREADY_GEO_REPLICATED(9, 9),
    /**
     * <code>ERROR_RG_NOT_FOUND = 10;</code>
     */
    ERROR_RG_NOT_FOUND(10, 10),
    /**
     * <code>ERROR_ALLOCATE_BLOCK_FAILED = 11;</code>
     */
    ERROR_ALLOCATE_BLOCK_FAILED(11, 11),
    /**
     * <code>ERROR_UNSEALED_TOO_MUCH_COPIES_FAILED = 12;</code>
     */
    ERROR_UNSEALED_TOO_MUCH_COPIES_FAILED(12, 12),
    /**
     * <code>IN_PROGRESS = 13;</code>
     */
    IN_PROGRESS(13, 13),
    /**
     * <code>ERROR_ALREADY_DELETING = 14;</code>
     */
    ERROR_ALREADY_DELETING(14, 14),
    /**
     * <code>ERROR_INVALID_EC_SCHEME = 15;</code>
     */
    ERROR_INVALID_EC_SCHEME(15, 15),
    /**
     * <code>ERROR_ALREADY_GC_READY = 16;</code>
     */
    ERROR_ALREADY_GC_READY(16, 16),
    /**
     * <code>ERROR_ALREADY_SEALING = 17;</code>
     */
    ERROR_ALREADY_SEALING(17, 17),
    /**
     * <code>ERROR_NOT_CANDIDATE = 18;</code>
     */
    ERROR_NOT_CANDIDATE(18, 18),
    /**
     * <code>CHUNK_NOT_EXIST = 19;</code>
     */
    CHUNK_NOT_EXIST(19, 19),
    ;

    /**
     * <code>SUCCESS = 0;</code>
     *
     * <pre>
     * the common status
     * </pre>
     */
    public static final int SUCCESS_VALUE = 0;
    /**
     * <code>ERROR_INTERNAL = 1;</code>
     */
    public static final int ERROR_INTERNAL_VALUE = 1;
    /**
     * <code>ERROR_INVALID_ARGUMENT = 2;</code>
     */
    public static final int ERROR_INVALID_ARGUMENT_VALUE = 2;
    /**
     * <code>ERROR_NO_SPACE = 3;</code>
     */
    public static final int ERROR_NO_SPACE_VALUE = 3;
    /**
     * <code>ERROR_NO_SUCH_CHUNK = 4;</code>
     */
    public static final int ERROR_NO_SUCH_CHUNK_VALUE = 4;
    /**
     * <code>ERROR_SHOULD_SEAL = 5;</code>
     *
     * <pre>
     * operation error due to chunk should be sealed, e.g.,
     * extend lease op for timeout/auto seal failed as cm detects upgrade/recovery is needed for the chunk
     * </pre>
     */
    public static final int ERROR_SHOULD_SEAL_VALUE = 5;
    /**
     * <code>ERROR_NO_STORAGE_DEVICE_FOUND = 6;</code>
     */
    public static final int ERROR_NO_STORAGE_DEVICE_FOUND_VALUE = 6;
    /**
     * <code>ERROR_NO_ZONE_FOUND = 7;</code>
     */
    public static final int ERROR_NO_ZONE_FOUND_VALUE = 7;
    /**
     * <code>ERROR_ALREADY_SEALED = 8;</code>
     */
    public static final int ERROR_ALREADY_SEALED_VALUE = 8;
    /**
     * <code>ERROR_ALREADY_GEO_REPLICATED = 9;</code>
     */
    public static final int ERROR_ALREADY_GEO_REPLICATED_VALUE = 9;
    /**
     * <code>ERROR_RG_NOT_FOUND = 10;</code>
     */
    public static final int ERROR_RG_NOT_FOUND_VALUE = 10;
    /**
     * <code>ERROR_ALLOCATE_BLOCK_FAILED = 11;</code>
     */
    public static final int ERROR_ALLOCATE_BLOCK_FAILED_VALUE = 11;
    /**
     * <code>ERROR_UNSEALED_TOO_MUCH_COPIES_FAILED = 12;</code>
     */
    public static final int ERROR_UNSEALED_TOO_MUCH_COPIES_FAILED_VALUE = 12;
    /**
     * <code>IN_PROGRESS = 13;</code>
     */
    public static final int IN_PROGRESS_VALUE = 13;
    /**
     * <code>ERROR_ALREADY_DELETING = 14;</code>
     */
    public static final int ERROR_ALREADY_DELETING_VALUE = 14;
    /**
     * <code>ERROR_INVALID_EC_SCHEME = 15;</code>
     */
    public static final int ERROR_INVALID_EC_SCHEME_VALUE = 15;
    /**
     * <code>ERROR_ALREADY_GC_READY = 16;</code>
     */
    public static final int ERROR_ALREADY_GC_READY_VALUE = 16;
    /**
     * <code>ERROR_ALREADY_SEALING = 17;</code>
     */
    public static final int ERROR_ALREADY_SEALING_VALUE = 17;
    /**
     * <code>ERROR_NOT_CANDIDATE = 18;</code>
     */
    public static final int ERROR_NOT_CANDIDATE_VALUE = 18;
    /**
     * <code>CHUNK_NOT_EXIST = 19;</code>
     */
    public static final int CHUNK_NOT_EXIST_VALUE = 19;


    public final int getNumber() { return value; }

    public static ChunkOperationStatus valueOf(int value) {
      switch (value) {
        case 0: return SUCCESS;
        case 1: return ERROR_INTERNAL;
        case 2: return ERROR_INVALID_ARGUMENT;
        case 3: return ERROR_NO_SPACE;
        case 4: return ERROR_NO_SUCH_CHUNK;
        case 5: return ERROR_SHOULD_SEAL;
        case 6: return ERROR_NO_STORAGE_DEVICE_FOUND;
        case 7: return ERROR_NO_ZONE_FOUND;
        case 8: return ERROR_ALREADY_SEALED;
        case 9: return ERROR_ALREADY_GEO_REPLICATED;
        case 10: return ERROR_RG_NOT_FOUND;
        case 11: return ERROR_ALLOCATE_BLOCK_FAILED;
        case 12: return ERROR_UNSEALED_TOO_MUCH_COPIES_FAILED;
        case 13: return IN_PROGRESS;
        case 14: return ERROR_ALREADY_DELETING;
        case 15: return ERROR_INVALID_EC_SCHEME;
        case 16: return ERROR_ALREADY_GC_READY;
        case 17: return ERROR_ALREADY_SEALING;
        case 18: return ERROR_NOT_CANDIDATE;
        case 19: return CHUNK_NOT_EXIST;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ChunkOperationStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ChunkOperationStatus>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ChunkOperationStatus>() {
            public ChunkOperationStatus findValueByNumber(int number) {
              return ChunkOperationStatus.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.getDescriptor().getEnumTypes().get(13);
    }

    private static final ChunkOperationStatus[] VALUES = values();

    public static ChunkOperationStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ChunkOperationStatus(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus)
  }

  public interface UuidOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed64 highBytes = 1;</code>
     */
    boolean hasHighBytes();
    /**
     * <code>optional fixed64 highBytes = 1;</code>
     */
    long getHighBytes();

    /**
     * <code>optional fixed64 lowBytes = 2;</code>
     */
    boolean hasLowBytes();
    /**
     * <code>optional fixed64 lowBytes = 2;</code>
     */
    long getLowBytes();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid}
   *
   * <pre>
   * Compact structure for chunkId / zone / replicationGroup
   * </pre>
   */
  public static final class Uuid extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid)
      UuidOrBuilder {
    // Use Uuid.newBuilder() to construct.
    private Uuid(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Uuid(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Uuid defaultInstance;
    public static Uuid getDefaultInstance() {
      return defaultInstance;
    }

    public Uuid getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Uuid(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              highBytes_ = input.readFixed64();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              lowBytes_ = input.readFixed64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_Uuid_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_Uuid_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder.class);
    }

    public static com.google.protobuf.Parser<Uuid> PARSER =
        new com.google.protobuf.AbstractParser<Uuid>() {
      public Uuid parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Uuid(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Uuid> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int HIGHBYTES_FIELD_NUMBER = 1;
    private long highBytes_;
    /**
     * <code>optional fixed64 highBytes = 1;</code>
     */
    public boolean hasHighBytes() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional fixed64 highBytes = 1;</code>
     */
    public long getHighBytes() {
      return highBytes_;
    }

    public static final int LOWBYTES_FIELD_NUMBER = 2;
    private long lowBytes_;
    /**
     * <code>optional fixed64 lowBytes = 2;</code>
     */
    public boolean hasLowBytes() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional fixed64 lowBytes = 2;</code>
     */
    public long getLowBytes() {
      return lowBytes_;
    }

    private void initFields() {
      highBytes_ = 0L;
      lowBytes_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed64(1, highBytes_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed64(2, lowBytes_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, highBytes_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, lowBytes_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid}
     *
     * <pre>
     * Compact structure for chunkId / zone / replicationGroup
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_Uuid_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_Uuid_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        highBytes_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        lowBytes_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_Uuid_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.highBytes_ = highBytes_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.lowBytes_ = lowBytes_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance()) return this;
        if (other.hasHighBytes()) {
          setHighBytes(other.getHighBytes());
        }
        if (other.hasLowBytes()) {
          setLowBytes(other.getLowBytes());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long highBytes_ ;
      /**
       * <code>optional fixed64 highBytes = 1;</code>
       */
      public boolean hasHighBytes() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed64 highBytes = 1;</code>
       */
      public long getHighBytes() {
        return highBytes_;
      }
      /**
       * <code>optional fixed64 highBytes = 1;</code>
       */
      public Builder setHighBytes(long value) {
        bitField0_ |= 0x00000001;
        highBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 highBytes = 1;</code>
       */
      public Builder clearHighBytes() {
        bitField0_ = (bitField0_ & ~0x00000001);
        highBytes_ = 0L;
        onChanged();
        return this;
      }

      private long lowBytes_ ;
      /**
       * <code>optional fixed64 lowBytes = 2;</code>
       */
      public boolean hasLowBytes() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional fixed64 lowBytes = 2;</code>
       */
      public long getLowBytes() {
        return lowBytes_;
      }
      /**
       * <code>optional fixed64 lowBytes = 2;</code>
       */
      public Builder setLowBytes(long value) {
        bitField0_ |= 0x00000002;
        lowBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 lowBytes = 2;</code>
       */
      public Builder clearLowBytes() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lowBytes_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid)
    }

    static {
      defaultInstance = new Uuid(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid)
  }

  public interface SecondaryPairOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string secondary = 1;</code>
     */
    boolean hasSecondary();
    /**
     * <code>optional string secondary = 1;</code>
     */
    java.lang.String getSecondary();
    /**
     * <code>optional string secondary = 1;</code>
     */
    com.google.protobuf.ByteString
        getSecondaryBytes();

    /**
     * <code>required bool replicated = 2;</code>
     */
    boolean hasReplicated();
    /**
     * <code>required bool replicated = 2;</code>
     */
    boolean getReplicated();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid secondaryUuid = 3;</code>
     */
    boolean hasSecondaryUuid();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid secondaryUuid = 3;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid getSecondaryUuid();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid secondaryUuid = 3;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder getSecondaryUuidOrBuilder();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair}
   *
   * <pre>
   * geo secondary zone replication status
   * </pre>
   */
  public static final class SecondaryPair extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair)
      SecondaryPairOrBuilder {
    // Use SecondaryPair.newBuilder() to construct.
    private SecondaryPair(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SecondaryPair(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SecondaryPair defaultInstance;
    public static SecondaryPair getDefaultInstance() {
      return defaultInstance;
    }

    public SecondaryPair getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SecondaryPair(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              secondary_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              replicated_ = input.readBool();
              break;
            }
            case 26: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = secondaryUuid_.toBuilder();
              }
              secondaryUuid_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(secondaryUuid_);
                secondaryUuid_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SecondaryPair_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SecondaryPair_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair.Builder.class);
    }

    public static com.google.protobuf.Parser<SecondaryPair> PARSER =
        new com.google.protobuf.AbstractParser<SecondaryPair>() {
      public SecondaryPair parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SecondaryPair(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SecondaryPair> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SECONDARY_FIELD_NUMBER = 1;
    private java.lang.Object secondary_;
    /**
     * <code>optional string secondary = 1;</code>
     */
    public boolean hasSecondary() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string secondary = 1;</code>
     */
    public java.lang.String getSecondary() {
      java.lang.Object ref = secondary_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          secondary_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string secondary = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSecondaryBytes() {
      java.lang.Object ref = secondary_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        secondary_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REPLICATED_FIELD_NUMBER = 2;
    private boolean replicated_;
    /**
     * <code>required bool replicated = 2;</code>
     */
    public boolean hasReplicated() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool replicated = 2;</code>
     */
    public boolean getReplicated() {
      return replicated_;
    }

    public static final int SECONDARYUUID_FIELD_NUMBER = 3;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid secondaryUuid_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid secondaryUuid = 3;</code>
     */
    public boolean hasSecondaryUuid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid secondaryUuid = 3;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid getSecondaryUuid() {
      return secondaryUuid_;
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid secondaryUuid = 3;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder getSecondaryUuidOrBuilder() {
      return secondaryUuid_;
    }

    private void initFields() {
      secondary_ = "";
      replicated_ = false;
      secondaryUuid_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasReplicated()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSecondaryBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, replicated_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, secondaryUuid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSecondaryBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, replicated_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, secondaryUuid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair}
     *
     * <pre>
     * geo secondary zone replication status
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPairOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SecondaryPair_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SecondaryPair_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSecondaryUuidFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        secondary_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        replicated_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (secondaryUuidBuilder_ == null) {
          secondaryUuid_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance();
        } else {
          secondaryUuidBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SecondaryPair_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.secondary_ = secondary_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.replicated_ = replicated_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (secondaryUuidBuilder_ == null) {
          result.secondaryUuid_ = secondaryUuid_;
        } else {
          result.secondaryUuid_ = secondaryUuidBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair.getDefaultInstance()) return this;
        if (other.hasSecondary()) {
          bitField0_ |= 0x00000001;
          secondary_ = other.secondary_;
          onChanged();
        }
        if (other.hasReplicated()) {
          setReplicated(other.getReplicated());
        }
        if (other.hasSecondaryUuid()) {
          mergeSecondaryUuid(other.getSecondaryUuid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasReplicated()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object secondary_ = "";
      /**
       * <code>optional string secondary = 1;</code>
       */
      public boolean hasSecondary() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string secondary = 1;</code>
       */
      public java.lang.String getSecondary() {
        java.lang.Object ref = secondary_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            secondary_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string secondary = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSecondaryBytes() {
        java.lang.Object ref = secondary_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          secondary_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string secondary = 1;</code>
       */
      public Builder setSecondary(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        secondary_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string secondary = 1;</code>
       */
      public Builder clearSecondary() {
        bitField0_ = (bitField0_ & ~0x00000001);
        secondary_ = getDefaultInstance().getSecondary();
        onChanged();
        return this;
      }
      /**
       * <code>optional string secondary = 1;</code>
       */
      public Builder setSecondaryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        secondary_ = value;
        onChanged();
        return this;
      }

      private boolean replicated_ ;
      /**
       * <code>required bool replicated = 2;</code>
       */
      public boolean hasReplicated() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool replicated = 2;</code>
       */
      public boolean getReplicated() {
        return replicated_;
      }
      /**
       * <code>required bool replicated = 2;</code>
       */
      public Builder setReplicated(boolean value) {
        bitField0_ |= 0x00000002;
        replicated_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool replicated = 2;</code>
       */
      public Builder clearReplicated() {
        bitField0_ = (bitField0_ & ~0x00000002);
        replicated_ = false;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid secondaryUuid_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder> secondaryUuidBuilder_;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid secondaryUuid = 3;</code>
       */
      public boolean hasSecondaryUuid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid secondaryUuid = 3;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid getSecondaryUuid() {
        if (secondaryUuidBuilder_ == null) {
          return secondaryUuid_;
        } else {
          return secondaryUuidBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid secondaryUuid = 3;</code>
       */
      public Builder setSecondaryUuid(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid value) {
        if (secondaryUuidBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          secondaryUuid_ = value;
          onChanged();
        } else {
          secondaryUuidBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid secondaryUuid = 3;</code>
       */
      public Builder setSecondaryUuid(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder builderForValue) {
        if (secondaryUuidBuilder_ == null) {
          secondaryUuid_ = builderForValue.build();
          onChanged();
        } else {
          secondaryUuidBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid secondaryUuid = 3;</code>
       */
      public Builder mergeSecondaryUuid(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid value) {
        if (secondaryUuidBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              secondaryUuid_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance()) {
            secondaryUuid_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.newBuilder(secondaryUuid_).mergeFrom(value).buildPartial();
          } else {
            secondaryUuid_ = value;
          }
          onChanged();
        } else {
          secondaryUuidBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid secondaryUuid = 3;</code>
       */
      public Builder clearSecondaryUuid() {
        if (secondaryUuidBuilder_ == null) {
          secondaryUuid_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance();
          onChanged();
        } else {
          secondaryUuidBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid secondaryUuid = 3;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder getSecondaryUuidBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getSecondaryUuidFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid secondaryUuid = 3;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder getSecondaryUuidOrBuilder() {
        if (secondaryUuidBuilder_ != null) {
          return secondaryUuidBuilder_.getMessageOrBuilder();
        } else {
          return secondaryUuid_;
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid secondaryUuid = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder> 
          getSecondaryUuidFieldBuilder() {
        if (secondaryUuidBuilder_ == null) {
          secondaryUuidBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder>(
                  getSecondaryUuid(),
                  getParentForChildren(),
                  isClean());
          secondaryUuid_ = null;
        }
        return secondaryUuidBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair)
    }

    static {
      defaultInstance = new SecondaryPair(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair)
  }

  public interface EcCodeSchemeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 numberOfDataBlocks = 1;</code>
     */
    boolean hasNumberOfDataBlocks();
    /**
     * <code>required int32 numberOfDataBlocks = 1;</code>
     */
    int getNumberOfDataBlocks();

    /**
     * <code>required int32 numberOfCodeBlocks = 2;</code>
     */
    boolean hasNumberOfCodeBlocks();
    /**
     * <code>required int32 numberOfCodeBlocks = 2;</code>
     */
    int getNumberOfCodeBlocks();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme}
   */
  public static final class EcCodeScheme extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme)
      EcCodeSchemeOrBuilder {
    // Use EcCodeScheme.newBuilder() to construct.
    private EcCodeScheme(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EcCodeScheme(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EcCodeScheme defaultInstance;
    public static EcCodeScheme getDefaultInstance() {
      return defaultInstance;
    }

    public EcCodeScheme getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EcCodeScheme(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              numberOfDataBlocks_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              numberOfCodeBlocks_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_EcCodeScheme_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_EcCodeScheme_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.Builder.class);
    }

    public static com.google.protobuf.Parser<EcCodeScheme> PARSER =
        new com.google.protobuf.AbstractParser<EcCodeScheme>() {
      public EcCodeScheme parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EcCodeScheme(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EcCodeScheme> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NUMBEROFDATABLOCKS_FIELD_NUMBER = 1;
    private int numberOfDataBlocks_;
    /**
     * <code>required int32 numberOfDataBlocks = 1;</code>
     */
    public boolean hasNumberOfDataBlocks() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 numberOfDataBlocks = 1;</code>
     */
    public int getNumberOfDataBlocks() {
      return numberOfDataBlocks_;
    }

    public static final int NUMBEROFCODEBLOCKS_FIELD_NUMBER = 2;
    private int numberOfCodeBlocks_;
    /**
     * <code>required int32 numberOfCodeBlocks = 2;</code>
     */
    public boolean hasNumberOfCodeBlocks() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 numberOfCodeBlocks = 2;</code>
     */
    public int getNumberOfCodeBlocks() {
      return numberOfCodeBlocks_;
    }

    private void initFields() {
      numberOfDataBlocks_ = 0;
      numberOfCodeBlocks_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasNumberOfDataBlocks()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNumberOfCodeBlocks()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, numberOfDataBlocks_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, numberOfCodeBlocks_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, numberOfDataBlocks_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, numberOfCodeBlocks_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeSchemeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_EcCodeScheme_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_EcCodeScheme_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        numberOfDataBlocks_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        numberOfCodeBlocks_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_EcCodeScheme_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.numberOfDataBlocks_ = numberOfDataBlocks_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.numberOfCodeBlocks_ = numberOfCodeBlocks_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.getDefaultInstance()) return this;
        if (other.hasNumberOfDataBlocks()) {
          setNumberOfDataBlocks(other.getNumberOfDataBlocks());
        }
        if (other.hasNumberOfCodeBlocks()) {
          setNumberOfCodeBlocks(other.getNumberOfCodeBlocks());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasNumberOfDataBlocks()) {
          
          return false;
        }
        if (!hasNumberOfCodeBlocks()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int numberOfDataBlocks_ ;
      /**
       * <code>required int32 numberOfDataBlocks = 1;</code>
       */
      public boolean hasNumberOfDataBlocks() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 numberOfDataBlocks = 1;</code>
       */
      public int getNumberOfDataBlocks() {
        return numberOfDataBlocks_;
      }
      /**
       * <code>required int32 numberOfDataBlocks = 1;</code>
       */
      public Builder setNumberOfDataBlocks(int value) {
        bitField0_ |= 0x00000001;
        numberOfDataBlocks_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 numberOfDataBlocks = 1;</code>
       */
      public Builder clearNumberOfDataBlocks() {
        bitField0_ = (bitField0_ & ~0x00000001);
        numberOfDataBlocks_ = 0;
        onChanged();
        return this;
      }

      private int numberOfCodeBlocks_ ;
      /**
       * <code>required int32 numberOfCodeBlocks = 2;</code>
       */
      public boolean hasNumberOfCodeBlocks() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 numberOfCodeBlocks = 2;</code>
       */
      public int getNumberOfCodeBlocks() {
        return numberOfCodeBlocks_;
      }
      /**
       * <code>required int32 numberOfCodeBlocks = 2;</code>
       */
      public Builder setNumberOfCodeBlocks(int value) {
        bitField0_ |= 0x00000002;
        numberOfCodeBlocks_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 numberOfCodeBlocks = 2;</code>
       */
      public Builder clearNumberOfCodeBlocks() {
        bitField0_ = (bitField0_ & ~0x00000002);
        numberOfCodeBlocks_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme)
    }

    static {
      defaultInstance = new EcCodeScheme(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme)
  }

  public interface RangeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 chunkOffset = 1;</code>
     *
     * <pre>
     * offset in chunk
     * </pre>
     */
    boolean hasChunkOffset();
    /**
     * <code>required int32 chunkOffset = 1;</code>
     *
     * <pre>
     * offset in chunk
     * </pre>
     */
    int getChunkOffset();

    /**
     * <code>required int32 chunkEndOffset = 2;</code>
     *
     * <pre>
     * end offset in chunk
     * </pre>
     */
    boolean hasChunkEndOffset();
    /**
     * <code>required int32 chunkEndOffset = 2;</code>
     *
     * <pre>
     * end offset in chunk
     * </pre>
     */
    int getChunkEndOffset();

    /**
     * <code>required string filename = 3;</code>
     *
     * <pre>
     * block bin
     * </pre>
     */
    boolean hasFilename();
    /**
     * <code>required string filename = 3;</code>
     *
     * <pre>
     * block bin
     * </pre>
     */
    java.lang.String getFilename();
    /**
     * <code>required string filename = 3;</code>
     *
     * <pre>
     * block bin
     * </pre>
     */
    com.google.protobuf.ByteString
        getFilenameBytes();

    /**
     * <code>required int64 offset = 4;</code>
     *
     * <pre>
     * offset on block bin
     * </pre>
     */
    boolean hasOffset();
    /**
     * <code>required int64 offset = 4;</code>
     *
     * <pre>
     * offset on block bin
     * </pre>
     */
    long getOffset();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo}
   *
   * <pre>
   * there should be no overlapping ranges in ss location
   * each chunk offset has at most one range info
   * </pre>
   */
  public static final class RangeInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo)
      RangeInfoOrBuilder {
    // Use RangeInfo.newBuilder() to construct.
    private RangeInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RangeInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RangeInfo defaultInstance;
    public static RangeInfo getDefaultInstance() {
      return defaultInstance;
    }

    public RangeInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RangeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              chunkOffset_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              chunkEndOffset_ = input.readInt32();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              filename_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              offset_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<RangeInfo> PARSER =
        new com.google.protobuf.AbstractParser<RangeInfo>() {
      public RangeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RangeInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RangeInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CHUNKOFFSET_FIELD_NUMBER = 1;
    private int chunkOffset_;
    /**
     * <code>required int32 chunkOffset = 1;</code>
     *
     * <pre>
     * offset in chunk
     * </pre>
     */
    public boolean hasChunkOffset() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 chunkOffset = 1;</code>
     *
     * <pre>
     * offset in chunk
     * </pre>
     */
    public int getChunkOffset() {
      return chunkOffset_;
    }

    public static final int CHUNKENDOFFSET_FIELD_NUMBER = 2;
    private int chunkEndOffset_;
    /**
     * <code>required int32 chunkEndOffset = 2;</code>
     *
     * <pre>
     * end offset in chunk
     * </pre>
     */
    public boolean hasChunkEndOffset() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 chunkEndOffset = 2;</code>
     *
     * <pre>
     * end offset in chunk
     * </pre>
     */
    public int getChunkEndOffset() {
      return chunkEndOffset_;
    }

    public static final int FILENAME_FIELD_NUMBER = 3;
    private java.lang.Object filename_;
    /**
     * <code>required string filename = 3;</code>
     *
     * <pre>
     * block bin
     * </pre>
     */
    public boolean hasFilename() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string filename = 3;</code>
     *
     * <pre>
     * block bin
     * </pre>
     */
    public java.lang.String getFilename() {
      java.lang.Object ref = filename_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          filename_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string filename = 3;</code>
     *
     * <pre>
     * block bin
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFilenameBytes() {
      java.lang.Object ref = filename_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filename_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OFFSET_FIELD_NUMBER = 4;
    private long offset_;
    /**
     * <code>required int64 offset = 4;</code>
     *
     * <pre>
     * offset on block bin
     * </pre>
     */
    public boolean hasOffset() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int64 offset = 4;</code>
     *
     * <pre>
     * offset on block bin
     * </pre>
     */
    public long getOffset() {
      return offset_;
    }

    private void initFields() {
      chunkOffset_ = 0;
      chunkEndOffset_ = 0;
      filename_ = "";
      offset_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasChunkOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChunkEndOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFilename()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, chunkOffset_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, chunkEndOffset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getFilenameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, offset_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, chunkOffset_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, chunkEndOffset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getFilenameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, offset_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo}
     *
     * <pre>
     * there should be no overlapping ranges in ss location
     * each chunk offset has at most one range info
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        chunkOffset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        chunkEndOffset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        filename_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        offset_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeInfo_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.chunkOffset_ = chunkOffset_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.chunkEndOffset_ = chunkEndOffset_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.filename_ = filename_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.offset_ = offset_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo.getDefaultInstance()) return this;
        if (other.hasChunkOffset()) {
          setChunkOffset(other.getChunkOffset());
        }
        if (other.hasChunkEndOffset()) {
          setChunkEndOffset(other.getChunkEndOffset());
        }
        if (other.hasFilename()) {
          bitField0_ |= 0x00000004;
          filename_ = other.filename_;
          onChanged();
        }
        if (other.hasOffset()) {
          setOffset(other.getOffset());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasChunkOffset()) {
          
          return false;
        }
        if (!hasChunkEndOffset()) {
          
          return false;
        }
        if (!hasFilename()) {
          
          return false;
        }
        if (!hasOffset()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int chunkOffset_ ;
      /**
       * <code>required int32 chunkOffset = 1;</code>
       *
       * <pre>
       * offset in chunk
       * </pre>
       */
      public boolean hasChunkOffset() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 chunkOffset = 1;</code>
       *
       * <pre>
       * offset in chunk
       * </pre>
       */
      public int getChunkOffset() {
        return chunkOffset_;
      }
      /**
       * <code>required int32 chunkOffset = 1;</code>
       *
       * <pre>
       * offset in chunk
       * </pre>
       */
      public Builder setChunkOffset(int value) {
        bitField0_ |= 0x00000001;
        chunkOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 chunkOffset = 1;</code>
       *
       * <pre>
       * offset in chunk
       * </pre>
       */
      public Builder clearChunkOffset() {
        bitField0_ = (bitField0_ & ~0x00000001);
        chunkOffset_ = 0;
        onChanged();
        return this;
      }

      private int chunkEndOffset_ ;
      /**
       * <code>required int32 chunkEndOffset = 2;</code>
       *
       * <pre>
       * end offset in chunk
       * </pre>
       */
      public boolean hasChunkEndOffset() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 chunkEndOffset = 2;</code>
       *
       * <pre>
       * end offset in chunk
       * </pre>
       */
      public int getChunkEndOffset() {
        return chunkEndOffset_;
      }
      /**
       * <code>required int32 chunkEndOffset = 2;</code>
       *
       * <pre>
       * end offset in chunk
       * </pre>
       */
      public Builder setChunkEndOffset(int value) {
        bitField0_ |= 0x00000002;
        chunkEndOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 chunkEndOffset = 2;</code>
       *
       * <pre>
       * end offset in chunk
       * </pre>
       */
      public Builder clearChunkEndOffset() {
        bitField0_ = (bitField0_ & ~0x00000002);
        chunkEndOffset_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object filename_ = "";
      /**
       * <code>required string filename = 3;</code>
       *
       * <pre>
       * block bin
       * </pre>
       */
      public boolean hasFilename() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string filename = 3;</code>
       *
       * <pre>
       * block bin
       * </pre>
       */
      public java.lang.String getFilename() {
        java.lang.Object ref = filename_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            filename_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string filename = 3;</code>
       *
       * <pre>
       * block bin
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFilenameBytes() {
        java.lang.Object ref = filename_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string filename = 3;</code>
       *
       * <pre>
       * block bin
       * </pre>
       */
      public Builder setFilename(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        filename_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string filename = 3;</code>
       *
       * <pre>
       * block bin
       * </pre>
       */
      public Builder clearFilename() {
        bitField0_ = (bitField0_ & ~0x00000004);
        filename_ = getDefaultInstance().getFilename();
        onChanged();
        return this;
      }
      /**
       * <code>required string filename = 3;</code>
       *
       * <pre>
       * block bin
       * </pre>
       */
      public Builder setFilenameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        filename_ = value;
        onChanged();
        return this;
      }

      private long offset_ ;
      /**
       * <code>required int64 offset = 4;</code>
       *
       * <pre>
       * offset on block bin
       * </pre>
       */
      public boolean hasOffset() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int64 offset = 4;</code>
       *
       * <pre>
       * offset on block bin
       * </pre>
       */
      public long getOffset() {
        return offset_;
      }
      /**
       * <code>required int64 offset = 4;</code>
       *
       * <pre>
       * offset on block bin
       * </pre>
       */
      public Builder setOffset(long value) {
        bitField0_ |= 0x00000008;
        offset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 offset = 4;</code>
       *
       * <pre>
       * offset on block bin
       * </pre>
       */
      public Builder clearOffset() {
        bitField0_ = (bitField0_ & ~0x00000008);
        offset_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo)
    }

    static {
      defaultInstance = new RangeInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo)
  }

  public interface SSLocationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string ssId = 1;</code>
     */
    boolean hasSsId();
    /**
     * <code>optional string ssId = 1;</code>
     */
    java.lang.String getSsId();
    /**
     * <code>optional string ssId = 1;</code>
     */
    com.google.protobuf.ByteString
        getSsIdBytes();

    /**
     * <code>optional string partitionId = 2;</code>
     */
    boolean hasPartitionId();
    /**
     * <code>optional string partitionId = 2;</code>
     */
    java.lang.String getPartitionId();
    /**
     * <code>optional string partitionId = 2;</code>
     */
    com.google.protobuf.ByteString
        getPartitionIdBytes();

    /**
     * <code>optional string filename = 3;</code>
     */
    boolean hasFilename();
    /**
     * <code>optional string filename = 3;</code>
     */
    java.lang.String getFilename();
    /**
     * <code>optional string filename = 3;</code>
     */
    com.google.protobuf.ByteString
        getFilenameBytes();

    /**
     * <code>optional int64 offset = 4;</code>
     */
    boolean hasOffset();
    /**
     * <code>optional int64 offset = 4;</code>
     */
    long getOffset();

    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BlockStatus status = 5;</code>
     */
    boolean hasStatus();
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BlockStatus status = 5;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BlockStatus getStatus();

    /**
     * <code>required int64 statusSn = 6;</code>
     *
     * <pre>
     * sequence number of status reported by SSM
     * </pre>
     */
    boolean hasStatusSn();
    /**
     * <code>required int64 statusSn = 6;</code>
     *
     * <pre>
     * sequence number of status reported by SSM
     * </pre>
     */
    long getStatusSn();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.LocationRecoveryStatus recoveryStatus = 7;</code>
     */
    boolean hasRecoveryStatus();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.LocationRecoveryStatus recoveryStatus = 7;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.LocationRecoveryStatus getRecoveryStatus();

    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
     */
    java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo> 
        getRangesList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo getRanges(int index);
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
     */
    int getRangesCount();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
     */
    java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfoOrBuilder> 
        getRangesOrBuilderList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfoOrBuilder getRangesOrBuilder(
        int index);

    /**
     * <code>optional int64 tag = 9;</code>
     */
    boolean hasTag();
    /**
     * <code>optional int64 tag = 9;</code>
     */
    long getTag();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid ssIdUuid = 10;</code>
     */
    boolean hasSsIdUuid();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid ssIdUuid = 10;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid getSsIdUuid();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid ssIdUuid = 10;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder getSsIdUuidOrBuilder();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid partitionIdUuid = 11;</code>
     */
    boolean hasPartitionIdUuid();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid partitionIdUuid = 11;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid getPartitionIdUuid();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid partitionIdUuid = 11;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder getPartitionIdUuidOrBuilder();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation}
   */
  public static final class SSLocation extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation)
      SSLocationOrBuilder {
    // Use SSLocation.newBuilder() to construct.
    private SSLocation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SSLocation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SSLocation defaultInstance;
    public static SSLocation getDefaultInstance() {
      return defaultInstance;
    }

    public SSLocation getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SSLocation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              ssId_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              partitionId_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              filename_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              offset_ = input.readInt64();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BlockStatus value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BlockStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                status_ = value;
              }
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              statusSn_ = input.readInt64();
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.LocationRecoveryStatus value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.LocationRecoveryStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(7, rawValue);
              } else {
                bitField0_ |= 0x00000040;
                recoveryStatus_ = value;
              }
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                ranges_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo>();
                mutable_bitField0_ |= 0x00000080;
              }
              ranges_.add(input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo.PARSER, extensionRegistry));
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              tag_ = input.readInt64();
              break;
            }
            case 82: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = ssIdUuid_.toBuilder();
              }
              ssIdUuid_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ssIdUuid_);
                ssIdUuid_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 90: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = partitionIdUuid_.toBuilder();
              }
              partitionIdUuid_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(partitionIdUuid_);
                partitionIdUuid_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          ranges_ = java.util.Collections.unmodifiableList(ranges_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SSLocation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SSLocation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder.class);
    }

    public static com.google.protobuf.Parser<SSLocation> PARSER =
        new com.google.protobuf.AbstractParser<SSLocation>() {
      public SSLocation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SSLocation(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SSLocation> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SSID_FIELD_NUMBER = 1;
    private java.lang.Object ssId_;
    /**
     * <code>optional string ssId = 1;</code>
     */
    public boolean hasSsId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string ssId = 1;</code>
     */
    public java.lang.String getSsId() {
      java.lang.Object ref = ssId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ssId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ssId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSsIdBytes() {
      java.lang.Object ref = ssId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ssId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARTITIONID_FIELD_NUMBER = 2;
    private java.lang.Object partitionId_;
    /**
     * <code>optional string partitionId = 2;</code>
     */
    public boolean hasPartitionId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string partitionId = 2;</code>
     */
    public java.lang.String getPartitionId() {
      java.lang.Object ref = partitionId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          partitionId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string partitionId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPartitionIdBytes() {
      java.lang.Object ref = partitionId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        partitionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILENAME_FIELD_NUMBER = 3;
    private java.lang.Object filename_;
    /**
     * <code>optional string filename = 3;</code>
     */
    public boolean hasFilename() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string filename = 3;</code>
     */
    public java.lang.String getFilename() {
      java.lang.Object ref = filename_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          filename_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string filename = 3;</code>
     */
    public com.google.protobuf.ByteString
        getFilenameBytes() {
      java.lang.Object ref = filename_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filename_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OFFSET_FIELD_NUMBER = 4;
    private long offset_;
    /**
     * <code>optional int64 offset = 4;</code>
     */
    public boolean hasOffset() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 offset = 4;</code>
     */
    public long getOffset() {
      return offset_;
    }

    public static final int STATUS_FIELD_NUMBER = 5;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BlockStatus status_;
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BlockStatus status = 5;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BlockStatus status = 5;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BlockStatus getStatus() {
      return status_;
    }

    public static final int STATUSSN_FIELD_NUMBER = 6;
    private long statusSn_;
    /**
     * <code>required int64 statusSn = 6;</code>
     *
     * <pre>
     * sequence number of status reported by SSM
     * </pre>
     */
    public boolean hasStatusSn() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int64 statusSn = 6;</code>
     *
     * <pre>
     * sequence number of status reported by SSM
     * </pre>
     */
    public long getStatusSn() {
      return statusSn_;
    }

    public static final int RECOVERYSTATUS_FIELD_NUMBER = 7;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.LocationRecoveryStatus recoveryStatus_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.LocationRecoveryStatus recoveryStatus = 7;</code>
     */
    public boolean hasRecoveryStatus() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.LocationRecoveryStatus recoveryStatus = 7;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.LocationRecoveryStatus getRecoveryStatus() {
      return recoveryStatus_;
    }

    public static final int RANGES_FIELD_NUMBER = 8;
    private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo> ranges_;
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
     */
    public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo> getRangesList() {
      return ranges_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
     */
    public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfoOrBuilder> 
        getRangesOrBuilderList() {
      return ranges_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
     */
    public int getRangesCount() {
      return ranges_.size();
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo getRanges(int index) {
      return ranges_.get(index);
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfoOrBuilder getRangesOrBuilder(
        int index) {
      return ranges_.get(index);
    }

    public static final int TAG_FIELD_NUMBER = 9;
    private long tag_;
    /**
     * <code>optional int64 tag = 9;</code>
     */
    public boolean hasTag() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int64 tag = 9;</code>
     */
    public long getTag() {
      return tag_;
    }

    public static final int SSIDUUID_FIELD_NUMBER = 10;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid ssIdUuid_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid ssIdUuid = 10;</code>
     */
    public boolean hasSsIdUuid() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid ssIdUuid = 10;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid getSsIdUuid() {
      return ssIdUuid_;
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid ssIdUuid = 10;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder getSsIdUuidOrBuilder() {
      return ssIdUuid_;
    }

    public static final int PARTITIONIDUUID_FIELD_NUMBER = 11;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid partitionIdUuid_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid partitionIdUuid = 11;</code>
     */
    public boolean hasPartitionIdUuid() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid partitionIdUuid = 11;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid getPartitionIdUuid() {
      return partitionIdUuid_;
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid partitionIdUuid = 11;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder getPartitionIdUuidOrBuilder() {
      return partitionIdUuid_;
    }

    private void initFields() {
      ssId_ = "";
      partitionId_ = "";
      filename_ = "";
      offset_ = 0L;
      status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BlockStatus.HEALTHY;
      statusSn_ = 0L;
      recoveryStatus_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.LocationRecoveryStatus.RECONSTRUCTING;
      ranges_ = java.util.Collections.emptyList();
      tag_ = 0L;
      ssIdUuid_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance();
      partitionIdUuid_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatusSn()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getRangesCount(); i++) {
        if (!getRanges(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSsIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getPartitionIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getFilenameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, offset_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, status_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(6, statusSn_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(7, recoveryStatus_.getNumber());
      }
      for (int i = 0; i < ranges_.size(); i++) {
        output.writeMessage(8, ranges_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(9, tag_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(10, ssIdUuid_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(11, partitionIdUuid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSsIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getPartitionIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getFilenameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, offset_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, status_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, statusSn_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, recoveryStatus_.getNumber());
      }
      for (int i = 0; i < ranges_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, ranges_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, tag_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, ssIdUuid_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, partitionIdUuid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SSLocation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SSLocation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRangesFieldBuilder();
          getSsIdUuidFieldBuilder();
          getPartitionIdUuidFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ssId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        partitionId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        filename_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        offset_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BlockStatus.HEALTHY;
        bitField0_ = (bitField0_ & ~0x00000010);
        statusSn_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        recoveryStatus_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.LocationRecoveryStatus.RECONSTRUCTING;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (rangesBuilder_ == null) {
          ranges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          rangesBuilder_.clear();
        }
        tag_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        if (ssIdUuidBuilder_ == null) {
          ssIdUuid_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance();
        } else {
          ssIdUuidBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (partitionIdUuidBuilder_ == null) {
          partitionIdUuid_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance();
        } else {
          partitionIdUuidBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SSLocation_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ssId_ = ssId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.partitionId_ = partitionId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.filename_ = filename_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.offset_ = offset_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.statusSn_ = statusSn_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.recoveryStatus_ = recoveryStatus_;
        if (rangesBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            ranges_ = java.util.Collections.unmodifiableList(ranges_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.ranges_ = ranges_;
        } else {
          result.ranges_ = rangesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.tag_ = tag_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        if (ssIdUuidBuilder_ == null) {
          result.ssIdUuid_ = ssIdUuid_;
        } else {
          result.ssIdUuid_ = ssIdUuidBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        if (partitionIdUuidBuilder_ == null) {
          result.partitionIdUuid_ = partitionIdUuid_;
        } else {
          result.partitionIdUuid_ = partitionIdUuidBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.getDefaultInstance()) return this;
        if (other.hasSsId()) {
          bitField0_ |= 0x00000001;
          ssId_ = other.ssId_;
          onChanged();
        }
        if (other.hasPartitionId()) {
          bitField0_ |= 0x00000002;
          partitionId_ = other.partitionId_;
          onChanged();
        }
        if (other.hasFilename()) {
          bitField0_ |= 0x00000004;
          filename_ = other.filename_;
          onChanged();
        }
        if (other.hasOffset()) {
          setOffset(other.getOffset());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasStatusSn()) {
          setStatusSn(other.getStatusSn());
        }
        if (other.hasRecoveryStatus()) {
          setRecoveryStatus(other.getRecoveryStatus());
        }
        if (rangesBuilder_ == null) {
          if (!other.ranges_.isEmpty()) {
            if (ranges_.isEmpty()) {
              ranges_ = other.ranges_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureRangesIsMutable();
              ranges_.addAll(other.ranges_);
            }
            onChanged();
          }
        } else {
          if (!other.ranges_.isEmpty()) {
            if (rangesBuilder_.isEmpty()) {
              rangesBuilder_.dispose();
              rangesBuilder_ = null;
              ranges_ = other.ranges_;
              bitField0_ = (bitField0_ & ~0x00000080);
              rangesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRangesFieldBuilder() : null;
            } else {
              rangesBuilder_.addAllMessages(other.ranges_);
            }
          }
        }
        if (other.hasTag()) {
          setTag(other.getTag());
        }
        if (other.hasSsIdUuid()) {
          mergeSsIdUuid(other.getSsIdUuid());
        }
        if (other.hasPartitionIdUuid()) {
          mergePartitionIdUuid(other.getPartitionIdUuid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStatus()) {
          
          return false;
        }
        if (!hasStatusSn()) {
          
          return false;
        }
        for (int i = 0; i < getRangesCount(); i++) {
          if (!getRanges(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object ssId_ = "";
      /**
       * <code>optional string ssId = 1;</code>
       */
      public boolean hasSsId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string ssId = 1;</code>
       */
      public java.lang.String getSsId() {
        java.lang.Object ref = ssId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ssId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ssId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSsIdBytes() {
        java.lang.Object ref = ssId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ssId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ssId = 1;</code>
       */
      public Builder setSsId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ssId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ssId = 1;</code>
       */
      public Builder clearSsId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ssId_ = getDefaultInstance().getSsId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ssId = 1;</code>
       */
      public Builder setSsIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ssId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object partitionId_ = "";
      /**
       * <code>optional string partitionId = 2;</code>
       */
      public boolean hasPartitionId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string partitionId = 2;</code>
       */
      public java.lang.String getPartitionId() {
        java.lang.Object ref = partitionId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            partitionId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string partitionId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPartitionIdBytes() {
        java.lang.Object ref = partitionId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          partitionId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string partitionId = 2;</code>
       */
      public Builder setPartitionId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        partitionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string partitionId = 2;</code>
       */
      public Builder clearPartitionId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        partitionId_ = getDefaultInstance().getPartitionId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string partitionId = 2;</code>
       */
      public Builder setPartitionIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        partitionId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object filename_ = "";
      /**
       * <code>optional string filename = 3;</code>
       */
      public boolean hasFilename() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string filename = 3;</code>
       */
      public java.lang.String getFilename() {
        java.lang.Object ref = filename_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            filename_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string filename = 3;</code>
       */
      public com.google.protobuf.ByteString
          getFilenameBytes() {
        java.lang.Object ref = filename_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string filename = 3;</code>
       */
      public Builder setFilename(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        filename_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string filename = 3;</code>
       */
      public Builder clearFilename() {
        bitField0_ = (bitField0_ & ~0x00000004);
        filename_ = getDefaultInstance().getFilename();
        onChanged();
        return this;
      }
      /**
       * <code>optional string filename = 3;</code>
       */
      public Builder setFilenameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        filename_ = value;
        onChanged();
        return this;
      }

      private long offset_ ;
      /**
       * <code>optional int64 offset = 4;</code>
       */
      public boolean hasOffset() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 offset = 4;</code>
       */
      public long getOffset() {
        return offset_;
      }
      /**
       * <code>optional int64 offset = 4;</code>
       */
      public Builder setOffset(long value) {
        bitField0_ |= 0x00000008;
        offset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 offset = 4;</code>
       */
      public Builder clearOffset() {
        bitField0_ = (bitField0_ & ~0x00000008);
        offset_ = 0L;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BlockStatus status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BlockStatus.HEALTHY;
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BlockStatus status = 5;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BlockStatus status = 5;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BlockStatus getStatus() {
        return status_;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BlockStatus status = 5;</code>
       */
      public Builder setStatus(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BlockStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BlockStatus status = 5;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BlockStatus.HEALTHY;
        onChanged();
        return this;
      }

      private long statusSn_ ;
      /**
       * <code>required int64 statusSn = 6;</code>
       *
       * <pre>
       * sequence number of status reported by SSM
       * </pre>
       */
      public boolean hasStatusSn() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int64 statusSn = 6;</code>
       *
       * <pre>
       * sequence number of status reported by SSM
       * </pre>
       */
      public long getStatusSn() {
        return statusSn_;
      }
      /**
       * <code>required int64 statusSn = 6;</code>
       *
       * <pre>
       * sequence number of status reported by SSM
       * </pre>
       */
      public Builder setStatusSn(long value) {
        bitField0_ |= 0x00000020;
        statusSn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 statusSn = 6;</code>
       *
       * <pre>
       * sequence number of status reported by SSM
       * </pre>
       */
      public Builder clearStatusSn() {
        bitField0_ = (bitField0_ & ~0x00000020);
        statusSn_ = 0L;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.LocationRecoveryStatus recoveryStatus_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.LocationRecoveryStatus.RECONSTRUCTING;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.LocationRecoveryStatus recoveryStatus = 7;</code>
       */
      public boolean hasRecoveryStatus() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.LocationRecoveryStatus recoveryStatus = 7;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.LocationRecoveryStatus getRecoveryStatus() {
        return recoveryStatus_;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.LocationRecoveryStatus recoveryStatus = 7;</code>
       */
      public Builder setRecoveryStatus(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.LocationRecoveryStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        recoveryStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.LocationRecoveryStatus recoveryStatus = 7;</code>
       */
      public Builder clearRecoveryStatus() {
        bitField0_ = (bitField0_ & ~0x00000040);
        recoveryStatus_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.LocationRecoveryStatus.RECONSTRUCTING;
        onChanged();
        return this;
      }

      private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo> ranges_ =
        java.util.Collections.emptyList();
      private void ensureRangesIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          ranges_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo>(ranges_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfoOrBuilder> rangesBuilder_;

      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo> getRangesList() {
        if (rangesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ranges_);
        } else {
          return rangesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
       */
      public int getRangesCount() {
        if (rangesBuilder_ == null) {
          return ranges_.size();
        } else {
          return rangesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo getRanges(int index) {
        if (rangesBuilder_ == null) {
          return ranges_.get(index);
        } else {
          return rangesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
       */
      public Builder setRanges(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo value) {
        if (rangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRangesIsMutable();
          ranges_.set(index, value);
          onChanged();
        } else {
          rangesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
       */
      public Builder setRanges(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo.Builder builderForValue) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          ranges_.set(index, builderForValue.build());
          onChanged();
        } else {
          rangesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
       */
      public Builder addRanges(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo value) {
        if (rangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRangesIsMutable();
          ranges_.add(value);
          onChanged();
        } else {
          rangesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
       */
      public Builder addRanges(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo value) {
        if (rangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRangesIsMutable();
          ranges_.add(index, value);
          onChanged();
        } else {
          rangesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
       */
      public Builder addRanges(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo.Builder builderForValue) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          ranges_.add(builderForValue.build());
          onChanged();
        } else {
          rangesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
       */
      public Builder addRanges(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo.Builder builderForValue) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          ranges_.add(index, builderForValue.build());
          onChanged();
        } else {
          rangesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
       */
      public Builder addAllRanges(
          java.lang.Iterable<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo> values) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, ranges_);
          onChanged();
        } else {
          rangesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
       */
      public Builder clearRanges() {
        if (rangesBuilder_ == null) {
          ranges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          rangesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
       */
      public Builder removeRanges(int index) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          ranges_.remove(index);
          onChanged();
        } else {
          rangesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo.Builder getRangesBuilder(
          int index) {
        return getRangesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfoOrBuilder getRangesOrBuilder(
          int index) {
        if (rangesBuilder_ == null) {
          return ranges_.get(index);  } else {
          return rangesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
       */
      public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfoOrBuilder> 
           getRangesOrBuilderList() {
        if (rangesBuilder_ != null) {
          return rangesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ranges_);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo.Builder addRangesBuilder() {
        return getRangesFieldBuilder().addBuilder(
            io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo.Builder addRangesBuilder(
          int index) {
        return getRangesFieldBuilder().addBuilder(
            index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeInfo ranges = 8;</code>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo.Builder> 
           getRangesBuilderList() {
        return getRangesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfoOrBuilder> 
          getRangesFieldBuilder() {
        if (rangesBuilder_ == null) {
          rangesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeInfoOrBuilder>(
                  ranges_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          ranges_ = null;
        }
        return rangesBuilder_;
      }

      private long tag_ ;
      /**
       * <code>optional int64 tag = 9;</code>
       */
      public boolean hasTag() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int64 tag = 9;</code>
       */
      public long getTag() {
        return tag_;
      }
      /**
       * <code>optional int64 tag = 9;</code>
       */
      public Builder setTag(long value) {
        bitField0_ |= 0x00000100;
        tag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 tag = 9;</code>
       */
      public Builder clearTag() {
        bitField0_ = (bitField0_ & ~0x00000100);
        tag_ = 0L;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid ssIdUuid_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder> ssIdUuidBuilder_;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid ssIdUuid = 10;</code>
       */
      public boolean hasSsIdUuid() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid ssIdUuid = 10;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid getSsIdUuid() {
        if (ssIdUuidBuilder_ == null) {
          return ssIdUuid_;
        } else {
          return ssIdUuidBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid ssIdUuid = 10;</code>
       */
      public Builder setSsIdUuid(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid value) {
        if (ssIdUuidBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ssIdUuid_ = value;
          onChanged();
        } else {
          ssIdUuidBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid ssIdUuid = 10;</code>
       */
      public Builder setSsIdUuid(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder builderForValue) {
        if (ssIdUuidBuilder_ == null) {
          ssIdUuid_ = builderForValue.build();
          onChanged();
        } else {
          ssIdUuidBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid ssIdUuid = 10;</code>
       */
      public Builder mergeSsIdUuid(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid value) {
        if (ssIdUuidBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              ssIdUuid_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance()) {
            ssIdUuid_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.newBuilder(ssIdUuid_).mergeFrom(value).buildPartial();
          } else {
            ssIdUuid_ = value;
          }
          onChanged();
        } else {
          ssIdUuidBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid ssIdUuid = 10;</code>
       */
      public Builder clearSsIdUuid() {
        if (ssIdUuidBuilder_ == null) {
          ssIdUuid_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance();
          onChanged();
        } else {
          ssIdUuidBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid ssIdUuid = 10;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder getSsIdUuidBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getSsIdUuidFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid ssIdUuid = 10;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder getSsIdUuidOrBuilder() {
        if (ssIdUuidBuilder_ != null) {
          return ssIdUuidBuilder_.getMessageOrBuilder();
        } else {
          return ssIdUuid_;
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid ssIdUuid = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder> 
          getSsIdUuidFieldBuilder() {
        if (ssIdUuidBuilder_ == null) {
          ssIdUuidBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder>(
                  getSsIdUuid(),
                  getParentForChildren(),
                  isClean());
          ssIdUuid_ = null;
        }
        return ssIdUuidBuilder_;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid partitionIdUuid_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder> partitionIdUuidBuilder_;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid partitionIdUuid = 11;</code>
       */
      public boolean hasPartitionIdUuid() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid partitionIdUuid = 11;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid getPartitionIdUuid() {
        if (partitionIdUuidBuilder_ == null) {
          return partitionIdUuid_;
        } else {
          return partitionIdUuidBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid partitionIdUuid = 11;</code>
       */
      public Builder setPartitionIdUuid(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid value) {
        if (partitionIdUuidBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          partitionIdUuid_ = value;
          onChanged();
        } else {
          partitionIdUuidBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid partitionIdUuid = 11;</code>
       */
      public Builder setPartitionIdUuid(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder builderForValue) {
        if (partitionIdUuidBuilder_ == null) {
          partitionIdUuid_ = builderForValue.build();
          onChanged();
        } else {
          partitionIdUuidBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid partitionIdUuid = 11;</code>
       */
      public Builder mergePartitionIdUuid(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid value) {
        if (partitionIdUuidBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              partitionIdUuid_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance()) {
            partitionIdUuid_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.newBuilder(partitionIdUuid_).mergeFrom(value).buildPartial();
          } else {
            partitionIdUuid_ = value;
          }
          onChanged();
        } else {
          partitionIdUuidBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid partitionIdUuid = 11;</code>
       */
      public Builder clearPartitionIdUuid() {
        if (partitionIdUuidBuilder_ == null) {
          partitionIdUuid_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance();
          onChanged();
        } else {
          partitionIdUuidBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid partitionIdUuid = 11;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder getPartitionIdUuidBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getPartitionIdUuidFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid partitionIdUuid = 11;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder getPartitionIdUuidOrBuilder() {
        if (partitionIdUuidBuilder_ != null) {
          return partitionIdUuidBuilder_.getMessageOrBuilder();
        } else {
          return partitionIdUuid_;
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid partitionIdUuid = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder> 
          getPartitionIdUuidFieldBuilder() {
        if (partitionIdUuidBuilder_ == null) {
          partitionIdUuidBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder>(
                  getPartitionIdUuid(),
                  getParentForChildren(),
                  isClean());
          partitionIdUuid_ = null;
        }
        return partitionIdUuidBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation)
    }

    static {
      defaultInstance = new SSLocation(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation)
  }

  public interface NFSLocationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.NFSLocation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string deviceId = 1;</code>
     */
    boolean hasDeviceId();
    /**
     * <code>required string deviceId = 1;</code>
     */
    java.lang.String getDeviceId();
    /**
     * <code>required string deviceId = 1;</code>
     */
    com.google.protobuf.ByteString
        getDeviceIdBytes();

    /**
     * <code>required string filename = 2;</code>
     */
    boolean hasFilename();
    /**
     * <code>required string filename = 2;</code>
     */
    java.lang.String getFilename();
    /**
     * <code>required string filename = 2;</code>
     */
    com.google.protobuf.ByteString
        getFilenameBytes();

    /**
     * <code>required int64 offset = 3;</code>
     */
    boolean hasOffset();
    /**
     * <code>required int64 offset = 3;</code>
     */
    long getOffset();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.NFSLocation}
   */
  public static final class NFSLocation extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.NFSLocation)
      NFSLocationOrBuilder {
    // Use NFSLocation.newBuilder() to construct.
    private NFSLocation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private NFSLocation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final NFSLocation defaultInstance;
    public static NFSLocation getDefaultInstance() {
      return defaultInstance;
    }

    public NFSLocation getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private NFSLocation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              deviceId_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              filename_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              offset_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_NFSLocation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_NFSLocation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation.Builder.class);
    }

    public static com.google.protobuf.Parser<NFSLocation> PARSER =
        new com.google.protobuf.AbstractParser<NFSLocation>() {
      public NFSLocation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NFSLocation(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<NFSLocation> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int DEVICEID_FIELD_NUMBER = 1;
    private java.lang.Object deviceId_;
    /**
     * <code>required string deviceId = 1;</code>
     */
    public boolean hasDeviceId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string deviceId = 1;</code>
     */
    public java.lang.String getDeviceId() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          deviceId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string deviceId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceIdBytes() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILENAME_FIELD_NUMBER = 2;
    private java.lang.Object filename_;
    /**
     * <code>required string filename = 2;</code>
     */
    public boolean hasFilename() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string filename = 2;</code>
     */
    public java.lang.String getFilename() {
      java.lang.Object ref = filename_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          filename_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string filename = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFilenameBytes() {
      java.lang.Object ref = filename_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filename_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OFFSET_FIELD_NUMBER = 3;
    private long offset_;
    /**
     * <code>required int64 offset = 3;</code>
     */
    public boolean hasOffset() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 offset = 3;</code>
     */
    public long getOffset() {
      return offset_;
    }

    private void initFields() {
      deviceId_ = "";
      filename_ = "";
      offset_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDeviceId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFilename()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDeviceIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getFilenameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, offset_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDeviceIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getFilenameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, offset_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.NFSLocation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.NFSLocation)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_NFSLocation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_NFSLocation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        deviceId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        filename_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        offset_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_NFSLocation_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.deviceId_ = deviceId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.filename_ = filename_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.offset_ = offset_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation.getDefaultInstance()) return this;
        if (other.hasDeviceId()) {
          bitField0_ |= 0x00000001;
          deviceId_ = other.deviceId_;
          onChanged();
        }
        if (other.hasFilename()) {
          bitField0_ |= 0x00000002;
          filename_ = other.filename_;
          onChanged();
        }
        if (other.hasOffset()) {
          setOffset(other.getOffset());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDeviceId()) {
          
          return false;
        }
        if (!hasFilename()) {
          
          return false;
        }
        if (!hasOffset()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object deviceId_ = "";
      /**
       * <code>required string deviceId = 1;</code>
       */
      public boolean hasDeviceId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string deviceId = 1;</code>
       */
      public java.lang.String getDeviceId() {
        java.lang.Object ref = deviceId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            deviceId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string deviceId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceIdBytes() {
        java.lang.Object ref = deviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string deviceId = 1;</code>
       */
      public Builder setDeviceId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        deviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string deviceId = 1;</code>
       */
      public Builder clearDeviceId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        deviceId_ = getDefaultInstance().getDeviceId();
        onChanged();
        return this;
      }
      /**
       * <code>required string deviceId = 1;</code>
       */
      public Builder setDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        deviceId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object filename_ = "";
      /**
       * <code>required string filename = 2;</code>
       */
      public boolean hasFilename() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string filename = 2;</code>
       */
      public java.lang.String getFilename() {
        java.lang.Object ref = filename_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            filename_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string filename = 2;</code>
       */
      public com.google.protobuf.ByteString
          getFilenameBytes() {
        java.lang.Object ref = filename_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string filename = 2;</code>
       */
      public Builder setFilename(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        filename_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string filename = 2;</code>
       */
      public Builder clearFilename() {
        bitField0_ = (bitField0_ & ~0x00000002);
        filename_ = getDefaultInstance().getFilename();
        onChanged();
        return this;
      }
      /**
       * <code>required string filename = 2;</code>
       */
      public Builder setFilenameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        filename_ = value;
        onChanged();
        return this;
      }

      private long offset_ ;
      /**
       * <code>required int64 offset = 3;</code>
       */
      public boolean hasOffset() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int64 offset = 3;</code>
       */
      public long getOffset() {
        return offset_;
      }
      /**
       * <code>required int64 offset = 3;</code>
       */
      public Builder setOffset(long value) {
        bitField0_ |= 0x00000004;
        offset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 offset = 3;</code>
       */
      public Builder clearOffset() {
        bitField0_ = (bitField0_ & ~0x00000004);
        offset_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.NFSLocation)
    }

    static {
      defaultInstance = new NFSLocation(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.NFSLocation)
  }

  public interface OBLocationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.OBLocation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string deviceId = 1;</code>
     */
    boolean hasDeviceId();
    /**
     * <code>required string deviceId = 1;</code>
     */
    java.lang.String getDeviceId();
    /**
     * <code>required string deviceId = 1;</code>
     */
    com.google.protobuf.ByteString
        getDeviceIdBytes();

    /**
     * <code>required string objectId = 2;</code>
     */
    boolean hasObjectId();
    /**
     * <code>required string objectId = 2;</code>
     */
    java.lang.String getObjectId();
    /**
     * <code>required string objectId = 2;</code>
     */
    com.google.protobuf.ByteString
        getObjectIdBytes();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.OBLocation}
   *
   * <pre>
   * location for object based device
   * </pre>
   */
  public static final class OBLocation extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.OBLocation)
      OBLocationOrBuilder {
    // Use OBLocation.newBuilder() to construct.
    private OBLocation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OBLocation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OBLocation defaultInstance;
    public static OBLocation getDefaultInstance() {
      return defaultInstance;
    }

    public OBLocation getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OBLocation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              deviceId_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              objectId_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_OBLocation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_OBLocation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation.Builder.class);
    }

    public static com.google.protobuf.Parser<OBLocation> PARSER =
        new com.google.protobuf.AbstractParser<OBLocation>() {
      public OBLocation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OBLocation(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OBLocation> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int DEVICEID_FIELD_NUMBER = 1;
    private java.lang.Object deviceId_;
    /**
     * <code>required string deviceId = 1;</code>
     */
    public boolean hasDeviceId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string deviceId = 1;</code>
     */
    public java.lang.String getDeviceId() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          deviceId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string deviceId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceIdBytes() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OBJECTID_FIELD_NUMBER = 2;
    private java.lang.Object objectId_;
    /**
     * <code>required string objectId = 2;</code>
     */
    public boolean hasObjectId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string objectId = 2;</code>
     */
    public java.lang.String getObjectId() {
      java.lang.Object ref = objectId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          objectId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string objectId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getObjectIdBytes() {
      java.lang.Object ref = objectId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        objectId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      deviceId_ = "";
      objectId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDeviceId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasObjectId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDeviceIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getObjectIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDeviceIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getObjectIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.OBLocation}
     *
     * <pre>
     * location for object based device
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.OBLocation)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_OBLocation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_OBLocation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        deviceId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        objectId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_OBLocation_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.deviceId_ = deviceId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.objectId_ = objectId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation.getDefaultInstance()) return this;
        if (other.hasDeviceId()) {
          bitField0_ |= 0x00000001;
          deviceId_ = other.deviceId_;
          onChanged();
        }
        if (other.hasObjectId()) {
          bitField0_ |= 0x00000002;
          objectId_ = other.objectId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDeviceId()) {
          
          return false;
        }
        if (!hasObjectId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object deviceId_ = "";
      /**
       * <code>required string deviceId = 1;</code>
       */
      public boolean hasDeviceId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string deviceId = 1;</code>
       */
      public java.lang.String getDeviceId() {
        java.lang.Object ref = deviceId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            deviceId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string deviceId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceIdBytes() {
        java.lang.Object ref = deviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string deviceId = 1;</code>
       */
      public Builder setDeviceId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        deviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string deviceId = 1;</code>
       */
      public Builder clearDeviceId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        deviceId_ = getDefaultInstance().getDeviceId();
        onChanged();
        return this;
      }
      /**
       * <code>required string deviceId = 1;</code>
       */
      public Builder setDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        deviceId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object objectId_ = "";
      /**
       * <code>required string objectId = 2;</code>
       */
      public boolean hasObjectId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string objectId = 2;</code>
       */
      public java.lang.String getObjectId() {
        java.lang.Object ref = objectId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            objectId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string objectId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getObjectIdBytes() {
        java.lang.Object ref = objectId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          objectId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string objectId = 2;</code>
       */
      public Builder setObjectId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        objectId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string objectId = 2;</code>
       */
      public Builder clearObjectId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        objectId_ = getDefaultInstance().getObjectId();
        onChanged();
        return this;
      }
      /**
       * <code>required string objectId = 2;</code>
       */
      public Builder setObjectIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        objectId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.OBLocation)
    }

    static {
      defaultInstance = new OBLocation(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.OBLocation)
  }

  public interface SystemUnderTransformationLocationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SystemUnderTransformationLocation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string transformationId = 1;</code>
     */
    boolean hasTransformationId();
    /**
     * <code>required string transformationId = 1;</code>
     */
    java.lang.String getTransformationId();
    /**
     * <code>required string transformationId = 1;</code>
     */
    com.google.protobuf.ByteString
        getTransformationIdBytes();

    /**
     * <code>required string chunkId = 2;</code>
     */
    boolean hasChunkId();
    /**
     * <code>required string chunkId = 2;</code>
     */
    java.lang.String getChunkId();
    /**
     * <code>required string chunkId = 2;</code>
     */
    com.google.protobuf.ByteString
        getChunkIdBytes();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SystemUnderTransformationLocation}
   */
  public static final class SystemUnderTransformationLocation extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SystemUnderTransformationLocation)
      SystemUnderTransformationLocationOrBuilder {
    // Use SystemUnderTransformationLocation.newBuilder() to construct.
    private SystemUnderTransformationLocation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SystemUnderTransformationLocation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SystemUnderTransformationLocation defaultInstance;
    public static SystemUnderTransformationLocation getDefaultInstance() {
      return defaultInstance;
    }

    public SystemUnderTransformationLocation getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SystemUnderTransformationLocation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              transformationId_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              chunkId_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SystemUnderTransformationLocation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SystemUnderTransformationLocation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation.Builder.class);
    }

    public static com.google.protobuf.Parser<SystemUnderTransformationLocation> PARSER =
        new com.google.protobuf.AbstractParser<SystemUnderTransformationLocation>() {
      public SystemUnderTransformationLocation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SystemUnderTransformationLocation(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SystemUnderTransformationLocation> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TRANSFORMATIONID_FIELD_NUMBER = 1;
    private java.lang.Object transformationId_;
    /**
     * <code>required string transformationId = 1;</code>
     */
    public boolean hasTransformationId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string transformationId = 1;</code>
     */
    public java.lang.String getTransformationId() {
      java.lang.Object ref = transformationId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          transformationId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string transformationId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTransformationIdBytes() {
      java.lang.Object ref = transformationId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        transformationId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHUNKID_FIELD_NUMBER = 2;
    private java.lang.Object chunkId_;
    /**
     * <code>required string chunkId = 2;</code>
     */
    public boolean hasChunkId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string chunkId = 2;</code>
     */
    public java.lang.String getChunkId() {
      java.lang.Object ref = chunkId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          chunkId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string chunkId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getChunkIdBytes() {
      java.lang.Object ref = chunkId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        chunkId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      transformationId_ = "";
      chunkId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTransformationId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChunkId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTransformationIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getChunkIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTransformationIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getChunkIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SystemUnderTransformationLocation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SystemUnderTransformationLocation)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SystemUnderTransformationLocation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SystemUnderTransformationLocation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        transformationId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        chunkId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SystemUnderTransformationLocation_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.transformationId_ = transformationId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.chunkId_ = chunkId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation.getDefaultInstance()) return this;
        if (other.hasTransformationId()) {
          bitField0_ |= 0x00000001;
          transformationId_ = other.transformationId_;
          onChanged();
        }
        if (other.hasChunkId()) {
          bitField0_ |= 0x00000002;
          chunkId_ = other.chunkId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTransformationId()) {
          
          return false;
        }
        if (!hasChunkId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object transformationId_ = "";
      /**
       * <code>required string transformationId = 1;</code>
       */
      public boolean hasTransformationId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string transformationId = 1;</code>
       */
      public java.lang.String getTransformationId() {
        java.lang.Object ref = transformationId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            transformationId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string transformationId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTransformationIdBytes() {
        java.lang.Object ref = transformationId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          transformationId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string transformationId = 1;</code>
       */
      public Builder setTransformationId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        transformationId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string transformationId = 1;</code>
       */
      public Builder clearTransformationId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        transformationId_ = getDefaultInstance().getTransformationId();
        onChanged();
        return this;
      }
      /**
       * <code>required string transformationId = 1;</code>
       */
      public Builder setTransformationIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        transformationId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object chunkId_ = "";
      /**
       * <code>required string chunkId = 2;</code>
       */
      public boolean hasChunkId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string chunkId = 2;</code>
       */
      public java.lang.String getChunkId() {
        java.lang.Object ref = chunkId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            chunkId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string chunkId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getChunkIdBytes() {
        java.lang.Object ref = chunkId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          chunkId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string chunkId = 2;</code>
       */
      public Builder setChunkId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        chunkId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string chunkId = 2;</code>
       */
      public Builder clearChunkId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        chunkId_ = getDefaultInstance().getChunkId();
        onChanged();
        return this;
      }
      /**
       * <code>required string chunkId = 2;</code>
       */
      public Builder setChunkIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        chunkId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SystemUnderTransformationLocation)
    }

    static {
      defaultInstance = new SystemUnderTransformationLocation(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SystemUnderTransformationLocation)
  }

  public interface SegmentInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.LocationType locationType = 1;</code>
     */
    boolean hasLocationType();
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.LocationType locationType = 1;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.LocationType getLocationType();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation ssLocation = 2;</code>
     */
    boolean hasSsLocation();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation ssLocation = 2;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation getSsLocation();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation ssLocation = 2;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder getSsLocationOrBuilder();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.NFSLocation nfsLocation = 3;</code>
     */
    boolean hasNfsLocation();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.NFSLocation nfsLocation = 3;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation getNfsLocation();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.NFSLocation nfsLocation = 3;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocationOrBuilder getNfsLocationOrBuilder();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.OBLocation obLocation = 4;</code>
     */
    boolean hasObLocation();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.OBLocation obLocation = 4;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation getObLocation();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.OBLocation obLocation = 4;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocationOrBuilder getObLocationOrBuilder();

    /**
     * <code>optional string checksum = 5;</code>
     */
    boolean hasChecksum();
    /**
     * <code>optional string checksum = 5;</code>
     */
    java.lang.String getChecksum();
    /**
     * <code>optional string checksum = 5;</code>
     */
    com.google.protobuf.ByteString
        getChecksumBytes();

    /**
     * <code>optional int32 offset = 6;</code>
     *
     * <pre>
     *chunk offset
     * </pre>
     */
    boolean hasOffset();
    /**
     * <code>optional int32 offset = 6;</code>
     *
     * <pre>
     *chunk offset
     * </pre>
     */
    int getOffset();

    /**
     * <code>optional int32 endOffset = 7;</code>
     *
     * <pre>
     *chunk end offset
     * </pre>
     */
    boolean hasEndOffset();
    /**
     * <code>optional int32 endOffset = 7;</code>
     *
     * <pre>
     *chunk end offset
     * </pre>
     */
    int getEndOffset();

    /**
     * <code>optional int32 sequence = 8;</code>
     *
     * <pre>
     * ec fragment sequence num
     * </pre>
     */
    boolean hasSequence();
    /**
     * <code>optional int32 sequence = 8;</code>
     *
     * <pre>
     * ec fragment sequence num
     * </pre>
     */
    int getSequence();

    /**
     * <code>optional int32 virtualOffset = 9;</code>
     *
     * <pre>
     * virtual range offset
     * </pre>
     */
    boolean hasVirtualOffset();
    /**
     * <code>optional int32 virtualOffset = 9;</code>
     *
     * <pre>
     * virtual range offset
     * </pre>
     */
    int getVirtualOffset();

    /**
     * <code>optional int32 virtualEndOffset = 10;</code>
     *
     * <pre>
     * virtual range endOffset
     * </pre>
     */
    boolean hasVirtualEndOffset();
    /**
     * <code>optional int32 virtualEndOffset = 10;</code>
     *
     * <pre>
     * virtual range endOffset
     * </pre>
     */
    int getVirtualEndOffset();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation migratingSsLocation = 11;</code>
     *
     * <pre>
     * migrate target ss location marked only by migrate source segment
     * </pre>
     */
    boolean hasMigratingSsLocation();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation migratingSsLocation = 11;</code>
     *
     * <pre>
     * migrate target ss location marked only by migrate source segment
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation getMigratingSsLocation();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation migratingSsLocation = 11;</code>
     *
     * <pre>
     * migrate target ss location marked only by migrate source segment
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder getMigratingSsLocationOrBuilder();

    /**
     * <code>optional string migrateSourceSsId = 12;</code>
     *
     * <pre>
     * migrate source ssId marked only by migrate target segment
     * </pre>
     */
    boolean hasMigrateSourceSsId();
    /**
     * <code>optional string migrateSourceSsId = 12;</code>
     *
     * <pre>
     * migrate source ssId marked only by migrate target segment
     * </pre>
     */
    java.lang.String getMigrateSourceSsId();
    /**
     * <code>optional string migrateSourceSsId = 12;</code>
     *
     * <pre>
     * migrate source ssId marked only by migrate target segment
     * </pre>
     */
    com.google.protobuf.ByteString
        getMigrateSourceSsIdBytes();

    /**
     * <code>optional int64 migrateSequence = 13;</code>
     *
     * <pre>
     * migrate sequence marked by both migrate source and target segments
     * </pre>
     */
    boolean hasMigrateSequence();
    /**
     * <code>optional int64 migrateSequence = 13;</code>
     *
     * <pre>
     * migrate sequence marked by both migrate source and target segments
     * </pre>
     */
    long getMigrateSequence();

    /**
     * <code>optional int64 migrationBlockSafeFreeTime = 14;</code>
     *
     * <pre>
     * time for freeing migrated target segment safely
     * </pre>
     */
    boolean hasMigrationBlockSafeFreeTime();
    /**
     * <code>optional int64 migrationBlockSafeFreeTime = 14;</code>
     *
     * <pre>
     * time for freeing migrated target segment safely
     * </pre>
     */
    long getMigrationBlockSafeFreeTime();

    /**
     * <code>optional string migrationChecksum = 15;</code>
     */
    boolean hasMigrationChecksum();
    /**
     * <code>optional string migrationChecksum = 15;</code>
     */
    java.lang.String getMigrationChecksum();
    /**
     * <code>optional string migrationChecksum = 15;</code>
     */
    com.google.protobuf.ByteString
        getMigrationChecksumBytes();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SystemUnderTransformationLocation systemUnderTransformationLocation = 100;</code>
     */
    boolean hasSystemUnderTransformationLocation();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SystemUnderTransformationLocation systemUnderTransformationLocation = 100;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation getSystemUnderTransformationLocation();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SystemUnderTransformationLocation systemUnderTransformationLocation = 100;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocationOrBuilder getSystemUnderTransformationLocationOrBuilder();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo}
   */
  public static final class SegmentInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo)
      SegmentInfoOrBuilder {
    // Use SegmentInfo.newBuilder() to construct.
    private SegmentInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SegmentInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SegmentInfo defaultInstance;
    public static SegmentInfo getDefaultInstance() {
      return defaultInstance;
    }

    public SegmentInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SegmentInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.LocationType value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.LocationType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                locationType_ = value;
              }
              break;
            }
            case 18: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = ssLocation_.toBuilder();
              }
              ssLocation_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ssLocation_);
                ssLocation_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = nfsLocation_.toBuilder();
              }
              nfsLocation_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nfsLocation_);
                nfsLocation_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = obLocation_.toBuilder();
              }
              obLocation_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(obLocation_);
                obLocation_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              checksum_ = bs;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              offset_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              endOffset_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              sequence_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              virtualOffset_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              virtualEndOffset_ = input.readInt32();
              break;
            }
            case 90: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = migratingSsLocation_.toBuilder();
              }
              migratingSsLocation_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(migratingSsLocation_);
                migratingSsLocation_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 98: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000800;
              migrateSourceSsId_ = bs;
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              migrateSequence_ = input.readInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              migrationBlockSafeFreeTime_ = input.readInt64();
              break;
            }
            case 122: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00004000;
              migrationChecksum_ = bs;
              break;
            }
            case 802: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation.Builder subBuilder = null;
              if (((bitField0_ & 0x00008000) == 0x00008000)) {
                subBuilder = systemUnderTransformationLocation_.toBuilder();
              }
              systemUnderTransformationLocation_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(systemUnderTransformationLocation_);
                systemUnderTransformationLocation_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00008000;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SegmentInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SegmentInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<SegmentInfo> PARSER =
        new com.google.protobuf.AbstractParser<SegmentInfo>() {
      public SegmentInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SegmentInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SegmentInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int LOCATIONTYPE_FIELD_NUMBER = 1;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.LocationType locationType_;
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.LocationType locationType = 1;</code>
     */
    public boolean hasLocationType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.LocationType locationType = 1;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.LocationType getLocationType() {
      return locationType_;
    }

    public static final int SSLOCATION_FIELD_NUMBER = 2;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation ssLocation_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation ssLocation = 2;</code>
     */
    public boolean hasSsLocation() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation ssLocation = 2;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation getSsLocation() {
      return ssLocation_;
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation ssLocation = 2;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder getSsLocationOrBuilder() {
      return ssLocation_;
    }

    public static final int NFSLOCATION_FIELD_NUMBER = 3;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation nfsLocation_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.NFSLocation nfsLocation = 3;</code>
     */
    public boolean hasNfsLocation() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.NFSLocation nfsLocation = 3;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation getNfsLocation() {
      return nfsLocation_;
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.NFSLocation nfsLocation = 3;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocationOrBuilder getNfsLocationOrBuilder() {
      return nfsLocation_;
    }

    public static final int OBLOCATION_FIELD_NUMBER = 4;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation obLocation_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.OBLocation obLocation = 4;</code>
     */
    public boolean hasObLocation() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.OBLocation obLocation = 4;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation getObLocation() {
      return obLocation_;
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.OBLocation obLocation = 4;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocationOrBuilder getObLocationOrBuilder() {
      return obLocation_;
    }

    public static final int CHECKSUM_FIELD_NUMBER = 5;
    private java.lang.Object checksum_;
    /**
     * <code>optional string checksum = 5;</code>
     */
    public boolean hasChecksum() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string checksum = 5;</code>
     */
    public java.lang.String getChecksum() {
      java.lang.Object ref = checksum_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          checksum_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string checksum = 5;</code>
     */
    public com.google.protobuf.ByteString
        getChecksumBytes() {
      java.lang.Object ref = checksum_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        checksum_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OFFSET_FIELD_NUMBER = 6;
    private int offset_;
    /**
     * <code>optional int32 offset = 6;</code>
     *
     * <pre>
     *chunk offset
     * </pre>
     */
    public boolean hasOffset() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 offset = 6;</code>
     *
     * <pre>
     *chunk offset
     * </pre>
     */
    public int getOffset() {
      return offset_;
    }

    public static final int ENDOFFSET_FIELD_NUMBER = 7;
    private int endOffset_;
    /**
     * <code>optional int32 endOffset = 7;</code>
     *
     * <pre>
     *chunk end offset
     * </pre>
     */
    public boolean hasEndOffset() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 endOffset = 7;</code>
     *
     * <pre>
     *chunk end offset
     * </pre>
     */
    public int getEndOffset() {
      return endOffset_;
    }

    public static final int SEQUENCE_FIELD_NUMBER = 8;
    private int sequence_;
    /**
     * <code>optional int32 sequence = 8;</code>
     *
     * <pre>
     * ec fragment sequence num
     * </pre>
     */
    public boolean hasSequence() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 sequence = 8;</code>
     *
     * <pre>
     * ec fragment sequence num
     * </pre>
     */
    public int getSequence() {
      return sequence_;
    }

    public static final int VIRTUALOFFSET_FIELD_NUMBER = 9;
    private int virtualOffset_;
    /**
     * <code>optional int32 virtualOffset = 9;</code>
     *
     * <pre>
     * virtual range offset
     * </pre>
     */
    public boolean hasVirtualOffset() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 virtualOffset = 9;</code>
     *
     * <pre>
     * virtual range offset
     * </pre>
     */
    public int getVirtualOffset() {
      return virtualOffset_;
    }

    public static final int VIRTUALENDOFFSET_FIELD_NUMBER = 10;
    private int virtualEndOffset_;
    /**
     * <code>optional int32 virtualEndOffset = 10;</code>
     *
     * <pre>
     * virtual range endOffset
     * </pre>
     */
    public boolean hasVirtualEndOffset() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 virtualEndOffset = 10;</code>
     *
     * <pre>
     * virtual range endOffset
     * </pre>
     */
    public int getVirtualEndOffset() {
      return virtualEndOffset_;
    }

    public static final int MIGRATINGSSLOCATION_FIELD_NUMBER = 11;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation migratingSsLocation_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation migratingSsLocation = 11;</code>
     *
     * <pre>
     * migrate target ss location marked only by migrate source segment
     * </pre>
     */
    public boolean hasMigratingSsLocation() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation migratingSsLocation = 11;</code>
     *
     * <pre>
     * migrate target ss location marked only by migrate source segment
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation getMigratingSsLocation() {
      return migratingSsLocation_;
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation migratingSsLocation = 11;</code>
     *
     * <pre>
     * migrate target ss location marked only by migrate source segment
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder getMigratingSsLocationOrBuilder() {
      return migratingSsLocation_;
    }

    public static final int MIGRATESOURCESSID_FIELD_NUMBER = 12;
    private java.lang.Object migrateSourceSsId_;
    /**
     * <code>optional string migrateSourceSsId = 12;</code>
     *
     * <pre>
     * migrate source ssId marked only by migrate target segment
     * </pre>
     */
    public boolean hasMigrateSourceSsId() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string migrateSourceSsId = 12;</code>
     *
     * <pre>
     * migrate source ssId marked only by migrate target segment
     * </pre>
     */
    public java.lang.String getMigrateSourceSsId() {
      java.lang.Object ref = migrateSourceSsId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          migrateSourceSsId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string migrateSourceSsId = 12;</code>
     *
     * <pre>
     * migrate source ssId marked only by migrate target segment
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMigrateSourceSsIdBytes() {
      java.lang.Object ref = migrateSourceSsId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        migrateSourceSsId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MIGRATESEQUENCE_FIELD_NUMBER = 13;
    private long migrateSequence_;
    /**
     * <code>optional int64 migrateSequence = 13;</code>
     *
     * <pre>
     * migrate sequence marked by both migrate source and target segments
     * </pre>
     */
    public boolean hasMigrateSequence() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 migrateSequence = 13;</code>
     *
     * <pre>
     * migrate sequence marked by both migrate source and target segments
     * </pre>
     */
    public long getMigrateSequence() {
      return migrateSequence_;
    }

    public static final int MIGRATIONBLOCKSAFEFREETIME_FIELD_NUMBER = 14;
    private long migrationBlockSafeFreeTime_;
    /**
     * <code>optional int64 migrationBlockSafeFreeTime = 14;</code>
     *
     * <pre>
     * time for freeing migrated target segment safely
     * </pre>
     */
    public boolean hasMigrationBlockSafeFreeTime() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 migrationBlockSafeFreeTime = 14;</code>
     *
     * <pre>
     * time for freeing migrated target segment safely
     * </pre>
     */
    public long getMigrationBlockSafeFreeTime() {
      return migrationBlockSafeFreeTime_;
    }

    public static final int MIGRATIONCHECKSUM_FIELD_NUMBER = 15;
    private java.lang.Object migrationChecksum_;
    /**
     * <code>optional string migrationChecksum = 15;</code>
     */
    public boolean hasMigrationChecksum() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional string migrationChecksum = 15;</code>
     */
    public java.lang.String getMigrationChecksum() {
      java.lang.Object ref = migrationChecksum_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          migrationChecksum_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string migrationChecksum = 15;</code>
     */
    public com.google.protobuf.ByteString
        getMigrationChecksumBytes() {
      java.lang.Object ref = migrationChecksum_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        migrationChecksum_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SYSTEMUNDERTRANSFORMATIONLOCATION_FIELD_NUMBER = 100;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation systemUnderTransformationLocation_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SystemUnderTransformationLocation systemUnderTransformationLocation = 100;</code>
     */
    public boolean hasSystemUnderTransformationLocation() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SystemUnderTransformationLocation systemUnderTransformationLocation = 100;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation getSystemUnderTransformationLocation() {
      return systemUnderTransformationLocation_;
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SystemUnderTransformationLocation systemUnderTransformationLocation = 100;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocationOrBuilder getSystemUnderTransformationLocationOrBuilder() {
      return systemUnderTransformationLocation_;
    }

    private void initFields() {
      locationType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.LocationType.STORAGE_SERVER;
      ssLocation_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.getDefaultInstance();
      nfsLocation_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation.getDefaultInstance();
      obLocation_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation.getDefaultInstance();
      checksum_ = "";
      offset_ = 0;
      endOffset_ = 0;
      sequence_ = 0;
      virtualOffset_ = 0;
      virtualEndOffset_ = 0;
      migratingSsLocation_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.getDefaultInstance();
      migrateSourceSsId_ = "";
      migrateSequence_ = 0L;
      migrationBlockSafeFreeTime_ = 0L;
      migrationChecksum_ = "";
      systemUnderTransformationLocation_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasLocationType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasSsLocation()) {
        if (!getSsLocation().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasNfsLocation()) {
        if (!getNfsLocation().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasObLocation()) {
        if (!getObLocation().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasMigratingSsLocation()) {
        if (!getMigratingSsLocation().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSystemUnderTransformationLocation()) {
        if (!getSystemUnderTransformationLocation().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, locationType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, ssLocation_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, nfsLocation_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, obLocation_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getChecksumBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, offset_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, endOffset_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, sequence_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, virtualOffset_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, virtualEndOffset_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(11, migratingSsLocation_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(12, getMigrateSourceSsIdBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(13, migrateSequence_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(14, migrationBlockSafeFreeTime_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(15, getMigrationChecksumBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(100, systemUnderTransformationLocation_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, locationType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, ssLocation_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, nfsLocation_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, obLocation_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getChecksumBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, offset_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, endOffset_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, sequence_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, virtualOffset_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, virtualEndOffset_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, migratingSsLocation_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getMigrateSourceSsIdBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, migrateSequence_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, migrationBlockSafeFreeTime_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getMigrationChecksumBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(100, systemUnderTransformationLocation_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SegmentInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SegmentInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSsLocationFieldBuilder();
          getNfsLocationFieldBuilder();
          getObLocationFieldBuilder();
          getMigratingSsLocationFieldBuilder();
          getSystemUnderTransformationLocationFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        locationType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.LocationType.STORAGE_SERVER;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (ssLocationBuilder_ == null) {
          ssLocation_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.getDefaultInstance();
        } else {
          ssLocationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (nfsLocationBuilder_ == null) {
          nfsLocation_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation.getDefaultInstance();
        } else {
          nfsLocationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (obLocationBuilder_ == null) {
          obLocation_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation.getDefaultInstance();
        } else {
          obLocationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        checksum_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        offset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        endOffset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        sequence_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        virtualOffset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        virtualEndOffset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        if (migratingSsLocationBuilder_ == null) {
          migratingSsLocation_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.getDefaultInstance();
        } else {
          migratingSsLocationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        migrateSourceSsId_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        migrateSequence_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        migrationBlockSafeFreeTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00002000);
        migrationChecksum_ = "";
        bitField0_ = (bitField0_ & ~0x00004000);
        if (systemUnderTransformationLocationBuilder_ == null) {
          systemUnderTransformationLocation_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation.getDefaultInstance();
        } else {
          systemUnderTransformationLocationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SegmentInfo_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.locationType_ = locationType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (ssLocationBuilder_ == null) {
          result.ssLocation_ = ssLocation_;
        } else {
          result.ssLocation_ = ssLocationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (nfsLocationBuilder_ == null) {
          result.nfsLocation_ = nfsLocation_;
        } else {
          result.nfsLocation_ = nfsLocationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (obLocationBuilder_ == null) {
          result.obLocation_ = obLocation_;
        } else {
          result.obLocation_ = obLocationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.checksum_ = checksum_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.offset_ = offset_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.endOffset_ = endOffset_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.sequence_ = sequence_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.virtualOffset_ = virtualOffset_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.virtualEndOffset_ = virtualEndOffset_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (migratingSsLocationBuilder_ == null) {
          result.migratingSsLocation_ = migratingSsLocation_;
        } else {
          result.migratingSsLocation_ = migratingSsLocationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.migrateSourceSsId_ = migrateSourceSsId_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.migrateSequence_ = migrateSequence_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.migrationBlockSafeFreeTime_ = migrationBlockSafeFreeTime_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.migrationChecksum_ = migrationChecksum_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        if (systemUnderTransformationLocationBuilder_ == null) {
          result.systemUnderTransformationLocation_ = systemUnderTransformationLocation_;
        } else {
          result.systemUnderTransformationLocation_ = systemUnderTransformationLocationBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.getDefaultInstance()) return this;
        if (other.hasLocationType()) {
          setLocationType(other.getLocationType());
        }
        if (other.hasSsLocation()) {
          mergeSsLocation(other.getSsLocation());
        }
        if (other.hasNfsLocation()) {
          mergeNfsLocation(other.getNfsLocation());
        }
        if (other.hasObLocation()) {
          mergeObLocation(other.getObLocation());
        }
        if (other.hasChecksum()) {
          bitField0_ |= 0x00000010;
          checksum_ = other.checksum_;
          onChanged();
        }
        if (other.hasOffset()) {
          setOffset(other.getOffset());
        }
        if (other.hasEndOffset()) {
          setEndOffset(other.getEndOffset());
        }
        if (other.hasSequence()) {
          setSequence(other.getSequence());
        }
        if (other.hasVirtualOffset()) {
          setVirtualOffset(other.getVirtualOffset());
        }
        if (other.hasVirtualEndOffset()) {
          setVirtualEndOffset(other.getVirtualEndOffset());
        }
        if (other.hasMigratingSsLocation()) {
          mergeMigratingSsLocation(other.getMigratingSsLocation());
        }
        if (other.hasMigrateSourceSsId()) {
          bitField0_ |= 0x00000800;
          migrateSourceSsId_ = other.migrateSourceSsId_;
          onChanged();
        }
        if (other.hasMigrateSequence()) {
          setMigrateSequence(other.getMigrateSequence());
        }
        if (other.hasMigrationBlockSafeFreeTime()) {
          setMigrationBlockSafeFreeTime(other.getMigrationBlockSafeFreeTime());
        }
        if (other.hasMigrationChecksum()) {
          bitField0_ |= 0x00004000;
          migrationChecksum_ = other.migrationChecksum_;
          onChanged();
        }
        if (other.hasSystemUnderTransformationLocation()) {
          mergeSystemUnderTransformationLocation(other.getSystemUnderTransformationLocation());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLocationType()) {
          
          return false;
        }
        if (hasSsLocation()) {
          if (!getSsLocation().isInitialized()) {
            
            return false;
          }
        }
        if (hasNfsLocation()) {
          if (!getNfsLocation().isInitialized()) {
            
            return false;
          }
        }
        if (hasObLocation()) {
          if (!getObLocation().isInitialized()) {
            
            return false;
          }
        }
        if (hasMigratingSsLocation()) {
          if (!getMigratingSsLocation().isInitialized()) {
            
            return false;
          }
        }
        if (hasSystemUnderTransformationLocation()) {
          if (!getSystemUnderTransformationLocation().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.LocationType locationType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.LocationType.STORAGE_SERVER;
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.LocationType locationType = 1;</code>
       */
      public boolean hasLocationType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.LocationType locationType = 1;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.LocationType getLocationType() {
        return locationType_;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.LocationType locationType = 1;</code>
       */
      public Builder setLocationType(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.LocationType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        locationType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.LocationType locationType = 1;</code>
       */
      public Builder clearLocationType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        locationType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.LocationType.STORAGE_SERVER;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation ssLocation_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder> ssLocationBuilder_;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation ssLocation = 2;</code>
       */
      public boolean hasSsLocation() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation ssLocation = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation getSsLocation() {
        if (ssLocationBuilder_ == null) {
          return ssLocation_;
        } else {
          return ssLocationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation ssLocation = 2;</code>
       */
      public Builder setSsLocation(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation value) {
        if (ssLocationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ssLocation_ = value;
          onChanged();
        } else {
          ssLocationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation ssLocation = 2;</code>
       */
      public Builder setSsLocation(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder builderForValue) {
        if (ssLocationBuilder_ == null) {
          ssLocation_ = builderForValue.build();
          onChanged();
        } else {
          ssLocationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation ssLocation = 2;</code>
       */
      public Builder mergeSsLocation(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation value) {
        if (ssLocationBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              ssLocation_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.getDefaultInstance()) {
            ssLocation_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.newBuilder(ssLocation_).mergeFrom(value).buildPartial();
          } else {
            ssLocation_ = value;
          }
          onChanged();
        } else {
          ssLocationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation ssLocation = 2;</code>
       */
      public Builder clearSsLocation() {
        if (ssLocationBuilder_ == null) {
          ssLocation_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.getDefaultInstance();
          onChanged();
        } else {
          ssLocationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation ssLocation = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder getSsLocationBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSsLocationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation ssLocation = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder getSsLocationOrBuilder() {
        if (ssLocationBuilder_ != null) {
          return ssLocationBuilder_.getMessageOrBuilder();
        } else {
          return ssLocation_;
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation ssLocation = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder> 
          getSsLocationFieldBuilder() {
        if (ssLocationBuilder_ == null) {
          ssLocationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder>(
                  getSsLocation(),
                  getParentForChildren(),
                  isClean());
          ssLocation_ = null;
        }
        return ssLocationBuilder_;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation nfsLocation_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocationOrBuilder> nfsLocationBuilder_;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.NFSLocation nfsLocation = 3;</code>
       */
      public boolean hasNfsLocation() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.NFSLocation nfsLocation = 3;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation getNfsLocation() {
        if (nfsLocationBuilder_ == null) {
          return nfsLocation_;
        } else {
          return nfsLocationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.NFSLocation nfsLocation = 3;</code>
       */
      public Builder setNfsLocation(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation value) {
        if (nfsLocationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nfsLocation_ = value;
          onChanged();
        } else {
          nfsLocationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.NFSLocation nfsLocation = 3;</code>
       */
      public Builder setNfsLocation(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation.Builder builderForValue) {
        if (nfsLocationBuilder_ == null) {
          nfsLocation_ = builderForValue.build();
          onChanged();
        } else {
          nfsLocationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.NFSLocation nfsLocation = 3;</code>
       */
      public Builder mergeNfsLocation(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation value) {
        if (nfsLocationBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              nfsLocation_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation.getDefaultInstance()) {
            nfsLocation_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation.newBuilder(nfsLocation_).mergeFrom(value).buildPartial();
          } else {
            nfsLocation_ = value;
          }
          onChanged();
        } else {
          nfsLocationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.NFSLocation nfsLocation = 3;</code>
       */
      public Builder clearNfsLocation() {
        if (nfsLocationBuilder_ == null) {
          nfsLocation_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation.getDefaultInstance();
          onChanged();
        } else {
          nfsLocationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.NFSLocation nfsLocation = 3;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation.Builder getNfsLocationBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getNfsLocationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.NFSLocation nfsLocation = 3;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocationOrBuilder getNfsLocationOrBuilder() {
        if (nfsLocationBuilder_ != null) {
          return nfsLocationBuilder_.getMessageOrBuilder();
        } else {
          return nfsLocation_;
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.NFSLocation nfsLocation = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocationOrBuilder> 
          getNfsLocationFieldBuilder() {
        if (nfsLocationBuilder_ == null) {
          nfsLocationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocation.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.NFSLocationOrBuilder>(
                  getNfsLocation(),
                  getParentForChildren(),
                  isClean());
          nfsLocation_ = null;
        }
        return nfsLocationBuilder_;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation obLocation_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocationOrBuilder> obLocationBuilder_;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.OBLocation obLocation = 4;</code>
       */
      public boolean hasObLocation() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.OBLocation obLocation = 4;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation getObLocation() {
        if (obLocationBuilder_ == null) {
          return obLocation_;
        } else {
          return obLocationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.OBLocation obLocation = 4;</code>
       */
      public Builder setObLocation(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation value) {
        if (obLocationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          obLocation_ = value;
          onChanged();
        } else {
          obLocationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.OBLocation obLocation = 4;</code>
       */
      public Builder setObLocation(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation.Builder builderForValue) {
        if (obLocationBuilder_ == null) {
          obLocation_ = builderForValue.build();
          onChanged();
        } else {
          obLocationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.OBLocation obLocation = 4;</code>
       */
      public Builder mergeObLocation(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation value) {
        if (obLocationBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              obLocation_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation.getDefaultInstance()) {
            obLocation_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation.newBuilder(obLocation_).mergeFrom(value).buildPartial();
          } else {
            obLocation_ = value;
          }
          onChanged();
        } else {
          obLocationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.OBLocation obLocation = 4;</code>
       */
      public Builder clearObLocation() {
        if (obLocationBuilder_ == null) {
          obLocation_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation.getDefaultInstance();
          onChanged();
        } else {
          obLocationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.OBLocation obLocation = 4;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation.Builder getObLocationBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getObLocationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.OBLocation obLocation = 4;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocationOrBuilder getObLocationOrBuilder() {
        if (obLocationBuilder_ != null) {
          return obLocationBuilder_.getMessageOrBuilder();
        } else {
          return obLocation_;
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.OBLocation obLocation = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocationOrBuilder> 
          getObLocationFieldBuilder() {
        if (obLocationBuilder_ == null) {
          obLocationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocation.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.OBLocationOrBuilder>(
                  getObLocation(),
                  getParentForChildren(),
                  isClean());
          obLocation_ = null;
        }
        return obLocationBuilder_;
      }

      private java.lang.Object checksum_ = "";
      /**
       * <code>optional string checksum = 5;</code>
       */
      public boolean hasChecksum() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string checksum = 5;</code>
       */
      public java.lang.String getChecksum() {
        java.lang.Object ref = checksum_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            checksum_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string checksum = 5;</code>
       */
      public com.google.protobuf.ByteString
          getChecksumBytes() {
        java.lang.Object ref = checksum_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          checksum_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string checksum = 5;</code>
       */
      public Builder setChecksum(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        checksum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string checksum = 5;</code>
       */
      public Builder clearChecksum() {
        bitField0_ = (bitField0_ & ~0x00000010);
        checksum_ = getDefaultInstance().getChecksum();
        onChanged();
        return this;
      }
      /**
       * <code>optional string checksum = 5;</code>
       */
      public Builder setChecksumBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        checksum_ = value;
        onChanged();
        return this;
      }

      private int offset_ ;
      /**
       * <code>optional int32 offset = 6;</code>
       *
       * <pre>
       *chunk offset
       * </pre>
       */
      public boolean hasOffset() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 offset = 6;</code>
       *
       * <pre>
       *chunk offset
       * </pre>
       */
      public int getOffset() {
        return offset_;
      }
      /**
       * <code>optional int32 offset = 6;</code>
       *
       * <pre>
       *chunk offset
       * </pre>
       */
      public Builder setOffset(int value) {
        bitField0_ |= 0x00000020;
        offset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 offset = 6;</code>
       *
       * <pre>
       *chunk offset
       * </pre>
       */
      public Builder clearOffset() {
        bitField0_ = (bitField0_ & ~0x00000020);
        offset_ = 0;
        onChanged();
        return this;
      }

      private int endOffset_ ;
      /**
       * <code>optional int32 endOffset = 7;</code>
       *
       * <pre>
       *chunk end offset
       * </pre>
       */
      public boolean hasEndOffset() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 endOffset = 7;</code>
       *
       * <pre>
       *chunk end offset
       * </pre>
       */
      public int getEndOffset() {
        return endOffset_;
      }
      /**
       * <code>optional int32 endOffset = 7;</code>
       *
       * <pre>
       *chunk end offset
       * </pre>
       */
      public Builder setEndOffset(int value) {
        bitField0_ |= 0x00000040;
        endOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 endOffset = 7;</code>
       *
       * <pre>
       *chunk end offset
       * </pre>
       */
      public Builder clearEndOffset() {
        bitField0_ = (bitField0_ & ~0x00000040);
        endOffset_ = 0;
        onChanged();
        return this;
      }

      private int sequence_ ;
      /**
       * <code>optional int32 sequence = 8;</code>
       *
       * <pre>
       * ec fragment sequence num
       * </pre>
       */
      public boolean hasSequence() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 sequence = 8;</code>
       *
       * <pre>
       * ec fragment sequence num
       * </pre>
       */
      public int getSequence() {
        return sequence_;
      }
      /**
       * <code>optional int32 sequence = 8;</code>
       *
       * <pre>
       * ec fragment sequence num
       * </pre>
       */
      public Builder setSequence(int value) {
        bitField0_ |= 0x00000080;
        sequence_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sequence = 8;</code>
       *
       * <pre>
       * ec fragment sequence num
       * </pre>
       */
      public Builder clearSequence() {
        bitField0_ = (bitField0_ & ~0x00000080);
        sequence_ = 0;
        onChanged();
        return this;
      }

      private int virtualOffset_ ;
      /**
       * <code>optional int32 virtualOffset = 9;</code>
       *
       * <pre>
       * virtual range offset
       * </pre>
       */
      public boolean hasVirtualOffset() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 virtualOffset = 9;</code>
       *
       * <pre>
       * virtual range offset
       * </pre>
       */
      public int getVirtualOffset() {
        return virtualOffset_;
      }
      /**
       * <code>optional int32 virtualOffset = 9;</code>
       *
       * <pre>
       * virtual range offset
       * </pre>
       */
      public Builder setVirtualOffset(int value) {
        bitField0_ |= 0x00000100;
        virtualOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 virtualOffset = 9;</code>
       *
       * <pre>
       * virtual range offset
       * </pre>
       */
      public Builder clearVirtualOffset() {
        bitField0_ = (bitField0_ & ~0x00000100);
        virtualOffset_ = 0;
        onChanged();
        return this;
      }

      private int virtualEndOffset_ ;
      /**
       * <code>optional int32 virtualEndOffset = 10;</code>
       *
       * <pre>
       * virtual range endOffset
       * </pre>
       */
      public boolean hasVirtualEndOffset() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 virtualEndOffset = 10;</code>
       *
       * <pre>
       * virtual range endOffset
       * </pre>
       */
      public int getVirtualEndOffset() {
        return virtualEndOffset_;
      }
      /**
       * <code>optional int32 virtualEndOffset = 10;</code>
       *
       * <pre>
       * virtual range endOffset
       * </pre>
       */
      public Builder setVirtualEndOffset(int value) {
        bitField0_ |= 0x00000200;
        virtualEndOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 virtualEndOffset = 10;</code>
       *
       * <pre>
       * virtual range endOffset
       * </pre>
       */
      public Builder clearVirtualEndOffset() {
        bitField0_ = (bitField0_ & ~0x00000200);
        virtualEndOffset_ = 0;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation migratingSsLocation_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder> migratingSsLocationBuilder_;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation migratingSsLocation = 11;</code>
       *
       * <pre>
       * migrate target ss location marked only by migrate source segment
       * </pre>
       */
      public boolean hasMigratingSsLocation() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation migratingSsLocation = 11;</code>
       *
       * <pre>
       * migrate target ss location marked only by migrate source segment
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation getMigratingSsLocation() {
        if (migratingSsLocationBuilder_ == null) {
          return migratingSsLocation_;
        } else {
          return migratingSsLocationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation migratingSsLocation = 11;</code>
       *
       * <pre>
       * migrate target ss location marked only by migrate source segment
       * </pre>
       */
      public Builder setMigratingSsLocation(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation value) {
        if (migratingSsLocationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          migratingSsLocation_ = value;
          onChanged();
        } else {
          migratingSsLocationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation migratingSsLocation = 11;</code>
       *
       * <pre>
       * migrate target ss location marked only by migrate source segment
       * </pre>
       */
      public Builder setMigratingSsLocation(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder builderForValue) {
        if (migratingSsLocationBuilder_ == null) {
          migratingSsLocation_ = builderForValue.build();
          onChanged();
        } else {
          migratingSsLocationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation migratingSsLocation = 11;</code>
       *
       * <pre>
       * migrate target ss location marked only by migrate source segment
       * </pre>
       */
      public Builder mergeMigratingSsLocation(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation value) {
        if (migratingSsLocationBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              migratingSsLocation_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.getDefaultInstance()) {
            migratingSsLocation_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.newBuilder(migratingSsLocation_).mergeFrom(value).buildPartial();
          } else {
            migratingSsLocation_ = value;
          }
          onChanged();
        } else {
          migratingSsLocationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation migratingSsLocation = 11;</code>
       *
       * <pre>
       * migrate target ss location marked only by migrate source segment
       * </pre>
       */
      public Builder clearMigratingSsLocation() {
        if (migratingSsLocationBuilder_ == null) {
          migratingSsLocation_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.getDefaultInstance();
          onChanged();
        } else {
          migratingSsLocationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation migratingSsLocation = 11;</code>
       *
       * <pre>
       * migrate target ss location marked only by migrate source segment
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder getMigratingSsLocationBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getMigratingSsLocationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation migratingSsLocation = 11;</code>
       *
       * <pre>
       * migrate target ss location marked only by migrate source segment
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder getMigratingSsLocationOrBuilder() {
        if (migratingSsLocationBuilder_ != null) {
          return migratingSsLocationBuilder_.getMessageOrBuilder();
        } else {
          return migratingSsLocation_;
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation migratingSsLocation = 11;</code>
       *
       * <pre>
       * migrate target ss location marked only by migrate source segment
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder> 
          getMigratingSsLocationFieldBuilder() {
        if (migratingSsLocationBuilder_ == null) {
          migratingSsLocationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder>(
                  getMigratingSsLocation(),
                  getParentForChildren(),
                  isClean());
          migratingSsLocation_ = null;
        }
        return migratingSsLocationBuilder_;
      }

      private java.lang.Object migrateSourceSsId_ = "";
      /**
       * <code>optional string migrateSourceSsId = 12;</code>
       *
       * <pre>
       * migrate source ssId marked only by migrate target segment
       * </pre>
       */
      public boolean hasMigrateSourceSsId() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string migrateSourceSsId = 12;</code>
       *
       * <pre>
       * migrate source ssId marked only by migrate target segment
       * </pre>
       */
      public java.lang.String getMigrateSourceSsId() {
        java.lang.Object ref = migrateSourceSsId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            migrateSourceSsId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string migrateSourceSsId = 12;</code>
       *
       * <pre>
       * migrate source ssId marked only by migrate target segment
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMigrateSourceSsIdBytes() {
        java.lang.Object ref = migrateSourceSsId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          migrateSourceSsId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string migrateSourceSsId = 12;</code>
       *
       * <pre>
       * migrate source ssId marked only by migrate target segment
       * </pre>
       */
      public Builder setMigrateSourceSsId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        migrateSourceSsId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string migrateSourceSsId = 12;</code>
       *
       * <pre>
       * migrate source ssId marked only by migrate target segment
       * </pre>
       */
      public Builder clearMigrateSourceSsId() {
        bitField0_ = (bitField0_ & ~0x00000800);
        migrateSourceSsId_ = getDefaultInstance().getMigrateSourceSsId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string migrateSourceSsId = 12;</code>
       *
       * <pre>
       * migrate source ssId marked only by migrate target segment
       * </pre>
       */
      public Builder setMigrateSourceSsIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        migrateSourceSsId_ = value;
        onChanged();
        return this;
      }

      private long migrateSequence_ ;
      /**
       * <code>optional int64 migrateSequence = 13;</code>
       *
       * <pre>
       * migrate sequence marked by both migrate source and target segments
       * </pre>
       */
      public boolean hasMigrateSequence() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 migrateSequence = 13;</code>
       *
       * <pre>
       * migrate sequence marked by both migrate source and target segments
       * </pre>
       */
      public long getMigrateSequence() {
        return migrateSequence_;
      }
      /**
       * <code>optional int64 migrateSequence = 13;</code>
       *
       * <pre>
       * migrate sequence marked by both migrate source and target segments
       * </pre>
       */
      public Builder setMigrateSequence(long value) {
        bitField0_ |= 0x00001000;
        migrateSequence_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 migrateSequence = 13;</code>
       *
       * <pre>
       * migrate sequence marked by both migrate source and target segments
       * </pre>
       */
      public Builder clearMigrateSequence() {
        bitField0_ = (bitField0_ & ~0x00001000);
        migrateSequence_ = 0L;
        onChanged();
        return this;
      }

      private long migrationBlockSafeFreeTime_ ;
      /**
       * <code>optional int64 migrationBlockSafeFreeTime = 14;</code>
       *
       * <pre>
       * time for freeing migrated target segment safely
       * </pre>
       */
      public boolean hasMigrationBlockSafeFreeTime() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 migrationBlockSafeFreeTime = 14;</code>
       *
       * <pre>
       * time for freeing migrated target segment safely
       * </pre>
       */
      public long getMigrationBlockSafeFreeTime() {
        return migrationBlockSafeFreeTime_;
      }
      /**
       * <code>optional int64 migrationBlockSafeFreeTime = 14;</code>
       *
       * <pre>
       * time for freeing migrated target segment safely
       * </pre>
       */
      public Builder setMigrationBlockSafeFreeTime(long value) {
        bitField0_ |= 0x00002000;
        migrationBlockSafeFreeTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 migrationBlockSafeFreeTime = 14;</code>
       *
       * <pre>
       * time for freeing migrated target segment safely
       * </pre>
       */
      public Builder clearMigrationBlockSafeFreeTime() {
        bitField0_ = (bitField0_ & ~0x00002000);
        migrationBlockSafeFreeTime_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object migrationChecksum_ = "";
      /**
       * <code>optional string migrationChecksum = 15;</code>
       */
      public boolean hasMigrationChecksum() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional string migrationChecksum = 15;</code>
       */
      public java.lang.String getMigrationChecksum() {
        java.lang.Object ref = migrationChecksum_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            migrationChecksum_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string migrationChecksum = 15;</code>
       */
      public com.google.protobuf.ByteString
          getMigrationChecksumBytes() {
        java.lang.Object ref = migrationChecksum_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          migrationChecksum_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string migrationChecksum = 15;</code>
       */
      public Builder setMigrationChecksum(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        migrationChecksum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string migrationChecksum = 15;</code>
       */
      public Builder clearMigrationChecksum() {
        bitField0_ = (bitField0_ & ~0x00004000);
        migrationChecksum_ = getDefaultInstance().getMigrationChecksum();
        onChanged();
        return this;
      }
      /**
       * <code>optional string migrationChecksum = 15;</code>
       */
      public Builder setMigrationChecksumBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        migrationChecksum_ = value;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation systemUnderTransformationLocation_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocationOrBuilder> systemUnderTransformationLocationBuilder_;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SystemUnderTransformationLocation systemUnderTransformationLocation = 100;</code>
       */
      public boolean hasSystemUnderTransformationLocation() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SystemUnderTransformationLocation systemUnderTransformationLocation = 100;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation getSystemUnderTransformationLocation() {
        if (systemUnderTransformationLocationBuilder_ == null) {
          return systemUnderTransformationLocation_;
        } else {
          return systemUnderTransformationLocationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SystemUnderTransformationLocation systemUnderTransformationLocation = 100;</code>
       */
      public Builder setSystemUnderTransformationLocation(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation value) {
        if (systemUnderTransformationLocationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          systemUnderTransformationLocation_ = value;
          onChanged();
        } else {
          systemUnderTransformationLocationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SystemUnderTransformationLocation systemUnderTransformationLocation = 100;</code>
       */
      public Builder setSystemUnderTransformationLocation(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation.Builder builderForValue) {
        if (systemUnderTransformationLocationBuilder_ == null) {
          systemUnderTransformationLocation_ = builderForValue.build();
          onChanged();
        } else {
          systemUnderTransformationLocationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SystemUnderTransformationLocation systemUnderTransformationLocation = 100;</code>
       */
      public Builder mergeSystemUnderTransformationLocation(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation value) {
        if (systemUnderTransformationLocationBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000) &&
              systemUnderTransformationLocation_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation.getDefaultInstance()) {
            systemUnderTransformationLocation_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation.newBuilder(systemUnderTransformationLocation_).mergeFrom(value).buildPartial();
          } else {
            systemUnderTransformationLocation_ = value;
          }
          onChanged();
        } else {
          systemUnderTransformationLocationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SystemUnderTransformationLocation systemUnderTransformationLocation = 100;</code>
       */
      public Builder clearSystemUnderTransformationLocation() {
        if (systemUnderTransformationLocationBuilder_ == null) {
          systemUnderTransformationLocation_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation.getDefaultInstance();
          onChanged();
        } else {
          systemUnderTransformationLocationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SystemUnderTransformationLocation systemUnderTransformationLocation = 100;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation.Builder getSystemUnderTransformationLocationBuilder() {
        bitField0_ |= 0x00008000;
        onChanged();
        return getSystemUnderTransformationLocationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SystemUnderTransformationLocation systemUnderTransformationLocation = 100;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocationOrBuilder getSystemUnderTransformationLocationOrBuilder() {
        if (systemUnderTransformationLocationBuilder_ != null) {
          return systemUnderTransformationLocationBuilder_.getMessageOrBuilder();
        } else {
          return systemUnderTransformationLocation_;
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SystemUnderTransformationLocation systemUnderTransformationLocation = 100;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocationOrBuilder> 
          getSystemUnderTransformationLocationFieldBuilder() {
        if (systemUnderTransformationLocationBuilder_ == null) {
          systemUnderTransformationLocationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocation.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SystemUnderTransformationLocationOrBuilder>(
                  getSystemUnderTransformationLocation(),
                  getParentForChildren(),
                  isClean());
          systemUnderTransformationLocation_ = null;
        }
        return systemUnderTransformationLocationBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo)
    }

    static {
      defaultInstance = new SegmentInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo)
  }

  public interface RangeMapWithPairChunkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 startOffset = 1;</code>
     *
     * <pre>
     * range info in current chunk
     * </pre>
     */
    boolean hasStartOffset();
    /**
     * <code>required int64 startOffset = 1;</code>
     *
     * <pre>
     * range info in current chunk
     * </pre>
     */
    long getStartOffset();

    /**
     * <code>required int64 endOffset = 2;</code>
     */
    boolean hasEndOffset();
    /**
     * <code>required int64 endOffset = 2;</code>
     */
    long getEndOffset();

    /**
     * <code>required string pairChunkId = 3;</code>
     *
     * <pre>
     * XOR geo shipping pair chunk id
     * </pre>
     */
    boolean hasPairChunkId();
    /**
     * <code>required string pairChunkId = 3;</code>
     *
     * <pre>
     * XOR geo shipping pair chunk id
     * </pre>
     */
    java.lang.String getPairChunkId();
    /**
     * <code>required string pairChunkId = 3;</code>
     *
     * <pre>
     * XOR geo shipping pair chunk id
     * </pre>
     */
    com.google.protobuf.ByteString
        getPairChunkIdBytes();

    /**
     * <code>required int64 pairStartOffset = 4;</code>
     *
     * <pre>
     * XOR geo shipping range in pair chunk
     * </pre>
     */
    boolean hasPairStartOffset();
    /**
     * <code>required int64 pairStartOffset = 4;</code>
     *
     * <pre>
     * XOR geo shipping range in pair chunk
     * </pre>
     */
    long getPairStartOffset();

    /**
     * <code>required int64 pairEndOffset = 5;</code>
     */
    boolean hasPairEndOffset();
    /**
     * <code>required int64 pairEndOffset = 5;</code>
     */
    long getPairEndOffset();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk}
   */
  public static final class RangeMapWithPairChunk extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk)
      RangeMapWithPairChunkOrBuilder {
    // Use RangeMapWithPairChunk.newBuilder() to construct.
    private RangeMapWithPairChunk(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RangeMapWithPairChunk(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RangeMapWithPairChunk defaultInstance;
    public static RangeMapWithPairChunk getDefaultInstance() {
      return defaultInstance;
    }

    public RangeMapWithPairChunk getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RangeMapWithPairChunk(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              startOffset_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              endOffset_ = input.readInt64();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              pairChunkId_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              pairStartOffset_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              pairEndOffset_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeMapWithPairChunk_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeMapWithPairChunk_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk.Builder.class);
    }

    public static com.google.protobuf.Parser<RangeMapWithPairChunk> PARSER =
        new com.google.protobuf.AbstractParser<RangeMapWithPairChunk>() {
      public RangeMapWithPairChunk parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RangeMapWithPairChunk(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RangeMapWithPairChunk> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STARTOFFSET_FIELD_NUMBER = 1;
    private long startOffset_;
    /**
     * <code>required int64 startOffset = 1;</code>
     *
     * <pre>
     * range info in current chunk
     * </pre>
     */
    public boolean hasStartOffset() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 startOffset = 1;</code>
     *
     * <pre>
     * range info in current chunk
     * </pre>
     */
    public long getStartOffset() {
      return startOffset_;
    }

    public static final int ENDOFFSET_FIELD_NUMBER = 2;
    private long endOffset_;
    /**
     * <code>required int64 endOffset = 2;</code>
     */
    public boolean hasEndOffset() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 endOffset = 2;</code>
     */
    public long getEndOffset() {
      return endOffset_;
    }

    public static final int PAIRCHUNKID_FIELD_NUMBER = 3;
    private java.lang.Object pairChunkId_;
    /**
     * <code>required string pairChunkId = 3;</code>
     *
     * <pre>
     * XOR geo shipping pair chunk id
     * </pre>
     */
    public boolean hasPairChunkId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string pairChunkId = 3;</code>
     *
     * <pre>
     * XOR geo shipping pair chunk id
     * </pre>
     */
    public java.lang.String getPairChunkId() {
      java.lang.Object ref = pairChunkId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pairChunkId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string pairChunkId = 3;</code>
     *
     * <pre>
     * XOR geo shipping pair chunk id
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPairChunkIdBytes() {
      java.lang.Object ref = pairChunkId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pairChunkId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PAIRSTARTOFFSET_FIELD_NUMBER = 4;
    private long pairStartOffset_;
    /**
     * <code>required int64 pairStartOffset = 4;</code>
     *
     * <pre>
     * XOR geo shipping range in pair chunk
     * </pre>
     */
    public boolean hasPairStartOffset() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int64 pairStartOffset = 4;</code>
     *
     * <pre>
     * XOR geo shipping range in pair chunk
     * </pre>
     */
    public long getPairStartOffset() {
      return pairStartOffset_;
    }

    public static final int PAIRENDOFFSET_FIELD_NUMBER = 5;
    private long pairEndOffset_;
    /**
     * <code>required int64 pairEndOffset = 5;</code>
     */
    public boolean hasPairEndOffset() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int64 pairEndOffset = 5;</code>
     */
    public long getPairEndOffset() {
      return pairEndOffset_;
    }

    private void initFields() {
      startOffset_ = 0L;
      endOffset_ = 0L;
      pairChunkId_ = "";
      pairStartOffset_ = 0L;
      pairEndOffset_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStartOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEndOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPairChunkId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPairStartOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPairEndOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, startOffset_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, endOffset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getPairChunkIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, pairStartOffset_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, pairEndOffset_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, startOffset_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, endOffset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getPairChunkIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, pairStartOffset_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, pairEndOffset_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeMapWithPairChunk_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeMapWithPairChunk_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        startOffset_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        endOffset_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        pairChunkId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        pairStartOffset_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        pairEndOffset_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeMapWithPairChunk_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.startOffset_ = startOffset_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.endOffset_ = endOffset_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pairChunkId_ = pairChunkId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.pairStartOffset_ = pairStartOffset_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.pairEndOffset_ = pairEndOffset_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk.getDefaultInstance()) return this;
        if (other.hasStartOffset()) {
          setStartOffset(other.getStartOffset());
        }
        if (other.hasEndOffset()) {
          setEndOffset(other.getEndOffset());
        }
        if (other.hasPairChunkId()) {
          bitField0_ |= 0x00000004;
          pairChunkId_ = other.pairChunkId_;
          onChanged();
        }
        if (other.hasPairStartOffset()) {
          setPairStartOffset(other.getPairStartOffset());
        }
        if (other.hasPairEndOffset()) {
          setPairEndOffset(other.getPairEndOffset());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStartOffset()) {
          
          return false;
        }
        if (!hasEndOffset()) {
          
          return false;
        }
        if (!hasPairChunkId()) {
          
          return false;
        }
        if (!hasPairStartOffset()) {
          
          return false;
        }
        if (!hasPairEndOffset()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long startOffset_ ;
      /**
       * <code>required int64 startOffset = 1;</code>
       *
       * <pre>
       * range info in current chunk
       * </pre>
       */
      public boolean hasStartOffset() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 startOffset = 1;</code>
       *
       * <pre>
       * range info in current chunk
       * </pre>
       */
      public long getStartOffset() {
        return startOffset_;
      }
      /**
       * <code>required int64 startOffset = 1;</code>
       *
       * <pre>
       * range info in current chunk
       * </pre>
       */
      public Builder setStartOffset(long value) {
        bitField0_ |= 0x00000001;
        startOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 startOffset = 1;</code>
       *
       * <pre>
       * range info in current chunk
       * </pre>
       */
      public Builder clearStartOffset() {
        bitField0_ = (bitField0_ & ~0x00000001);
        startOffset_ = 0L;
        onChanged();
        return this;
      }

      private long endOffset_ ;
      /**
       * <code>required int64 endOffset = 2;</code>
       */
      public boolean hasEndOffset() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 endOffset = 2;</code>
       */
      public long getEndOffset() {
        return endOffset_;
      }
      /**
       * <code>required int64 endOffset = 2;</code>
       */
      public Builder setEndOffset(long value) {
        bitField0_ |= 0x00000002;
        endOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 endOffset = 2;</code>
       */
      public Builder clearEndOffset() {
        bitField0_ = (bitField0_ & ~0x00000002);
        endOffset_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object pairChunkId_ = "";
      /**
       * <code>required string pairChunkId = 3;</code>
       *
       * <pre>
       * XOR geo shipping pair chunk id
       * </pre>
       */
      public boolean hasPairChunkId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string pairChunkId = 3;</code>
       *
       * <pre>
       * XOR geo shipping pair chunk id
       * </pre>
       */
      public java.lang.String getPairChunkId() {
        java.lang.Object ref = pairChunkId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            pairChunkId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string pairChunkId = 3;</code>
       *
       * <pre>
       * XOR geo shipping pair chunk id
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPairChunkIdBytes() {
        java.lang.Object ref = pairChunkId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pairChunkId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string pairChunkId = 3;</code>
       *
       * <pre>
       * XOR geo shipping pair chunk id
       * </pre>
       */
      public Builder setPairChunkId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        pairChunkId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string pairChunkId = 3;</code>
       *
       * <pre>
       * XOR geo shipping pair chunk id
       * </pre>
       */
      public Builder clearPairChunkId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pairChunkId_ = getDefaultInstance().getPairChunkId();
        onChanged();
        return this;
      }
      /**
       * <code>required string pairChunkId = 3;</code>
       *
       * <pre>
       * XOR geo shipping pair chunk id
       * </pre>
       */
      public Builder setPairChunkIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        pairChunkId_ = value;
        onChanged();
        return this;
      }

      private long pairStartOffset_ ;
      /**
       * <code>required int64 pairStartOffset = 4;</code>
       *
       * <pre>
       * XOR geo shipping range in pair chunk
       * </pre>
       */
      public boolean hasPairStartOffset() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int64 pairStartOffset = 4;</code>
       *
       * <pre>
       * XOR geo shipping range in pair chunk
       * </pre>
       */
      public long getPairStartOffset() {
        return pairStartOffset_;
      }
      /**
       * <code>required int64 pairStartOffset = 4;</code>
       *
       * <pre>
       * XOR geo shipping range in pair chunk
       * </pre>
       */
      public Builder setPairStartOffset(long value) {
        bitField0_ |= 0x00000008;
        pairStartOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 pairStartOffset = 4;</code>
       *
       * <pre>
       * XOR geo shipping range in pair chunk
       * </pre>
       */
      public Builder clearPairStartOffset() {
        bitField0_ = (bitField0_ & ~0x00000008);
        pairStartOffset_ = 0L;
        onChanged();
        return this;
      }

      private long pairEndOffset_ ;
      /**
       * <code>required int64 pairEndOffset = 5;</code>
       */
      public boolean hasPairEndOffset() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int64 pairEndOffset = 5;</code>
       */
      public long getPairEndOffset() {
        return pairEndOffset_;
      }
      /**
       * <code>required int64 pairEndOffset = 5;</code>
       */
      public Builder setPairEndOffset(long value) {
        bitField0_ |= 0x00000010;
        pairEndOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 pairEndOffset = 5;</code>
       */
      public Builder clearPairEndOffset() {
        bitField0_ = (bitField0_ & ~0x00000010);
        pairEndOffset_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk)
    }

    static {
      defaultInstance = new RangeMapWithPairChunk(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk)
  }

  public interface ShippingRangeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 startOffset = 1;</code>
     */
    boolean hasStartOffset();
    /**
     * <code>required int64 startOffset = 1;</code>
     */
    long getStartOffset();

    /**
     * <code>required int64 endOffset = 2;</code>
     */
    boolean hasEndOffset();
    /**
     * <code>required int64 endOffset = 2;</code>
     */
    long getEndOffset();

    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingStatus status = 3;</code>
     */
    boolean hasStatus();
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingStatus status = 3;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingStatus getStatus();

    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
     *
     * <pre>
     * for XOR pair geo shipping
     * </pre>
     */
    java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk> 
        getRangePairsList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
     *
     * <pre>
     * for XOR pair geo shipping
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk getRangePairs(int index);
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
     *
     * <pre>
     * for XOR pair geo shipping
     * </pre>
     */
    int getRangePairsCount();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
     *
     * <pre>
     * for XOR pair geo shipping
     * </pre>
     */
    java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunkOrBuilder> 
        getRangePairsOrBuilderList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
     *
     * <pre>
     * for XOR pair geo shipping
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunkOrBuilder getRangePairsOrBuilder(
        int index);

    /**
     * <code>optional int32 checksum = 5;</code>
     *
     * <pre>
     * checksum for this range data
     * this field exists in remote zone if ShippingStatus is SUCCESS
     * </pre>
     */
    boolean hasChecksum();
    /**
     * <code>optional int32 checksum = 5;</code>
     *
     * <pre>
     * checksum for this range data
     * this field exists in remote zone if ShippingStatus is SUCCESS
     * </pre>
     */
    int getChecksum();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange}
   */
  public static final class ShippingRange extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange)
      ShippingRangeOrBuilder {
    // Use ShippingRange.newBuilder() to construct.
    private ShippingRange(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ShippingRange(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ShippingRange defaultInstance;
    public static ShippingRange getDefaultInstance() {
      return defaultInstance;
    }

    public ShippingRange getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ShippingRange(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              startOffset_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              endOffset_ = input.readInt64();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingStatus value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                status_ = value;
              }
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                rangePairs_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk>();
                mutable_bitField0_ |= 0x00000008;
              }
              rangePairs_.add(input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk.PARSER, extensionRegistry));
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              checksum_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          rangePairs_ = java.util.Collections.unmodifiableList(rangePairs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ShippingRange_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ShippingRange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange.Builder.class);
    }

    public static com.google.protobuf.Parser<ShippingRange> PARSER =
        new com.google.protobuf.AbstractParser<ShippingRange>() {
      public ShippingRange parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ShippingRange(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ShippingRange> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STARTOFFSET_FIELD_NUMBER = 1;
    private long startOffset_;
    /**
     * <code>required int64 startOffset = 1;</code>
     */
    public boolean hasStartOffset() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 startOffset = 1;</code>
     */
    public long getStartOffset() {
      return startOffset_;
    }

    public static final int ENDOFFSET_FIELD_NUMBER = 2;
    private long endOffset_;
    /**
     * <code>required int64 endOffset = 2;</code>
     */
    public boolean hasEndOffset() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 endOffset = 2;</code>
     */
    public long getEndOffset() {
      return endOffset_;
    }

    public static final int STATUS_FIELD_NUMBER = 3;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingStatus status_;
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingStatus status = 3;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingStatus status = 3;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingStatus getStatus() {
      return status_;
    }

    public static final int RANGEPAIRS_FIELD_NUMBER = 4;
    private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk> rangePairs_;
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
     *
     * <pre>
     * for XOR pair geo shipping
     * </pre>
     */
    public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk> getRangePairsList() {
      return rangePairs_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
     *
     * <pre>
     * for XOR pair geo shipping
     * </pre>
     */
    public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunkOrBuilder> 
        getRangePairsOrBuilderList() {
      return rangePairs_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
     *
     * <pre>
     * for XOR pair geo shipping
     * </pre>
     */
    public int getRangePairsCount() {
      return rangePairs_.size();
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
     *
     * <pre>
     * for XOR pair geo shipping
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk getRangePairs(int index) {
      return rangePairs_.get(index);
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
     *
     * <pre>
     * for XOR pair geo shipping
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunkOrBuilder getRangePairsOrBuilder(
        int index) {
      return rangePairs_.get(index);
    }

    public static final int CHECKSUM_FIELD_NUMBER = 5;
    private int checksum_;
    /**
     * <code>optional int32 checksum = 5;</code>
     *
     * <pre>
     * checksum for this range data
     * this field exists in remote zone if ShippingStatus is SUCCESS
     * </pre>
     */
    public boolean hasChecksum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 checksum = 5;</code>
     *
     * <pre>
     * checksum for this range data
     * this field exists in remote zone if ShippingStatus is SUCCESS
     * </pre>
     */
    public int getChecksum() {
      return checksum_;
    }

    private void initFields() {
      startOffset_ = 0L;
      endOffset_ = 0L;
      status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingStatus.GEO_SHIPPING_STATUS_SUCCESS;
      rangePairs_ = java.util.Collections.emptyList();
      checksum_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStartOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEndOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getRangePairsCount(); i++) {
        if (!getRangePairs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, startOffset_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, endOffset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, status_.getNumber());
      }
      for (int i = 0; i < rangePairs_.size(); i++) {
        output.writeMessage(4, rangePairs_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, checksum_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, startOffset_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, endOffset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, status_.getNumber());
      }
      for (int i = 0; i < rangePairs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, rangePairs_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, checksum_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ShippingRange_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ShippingRange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRangePairsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        startOffset_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        endOffset_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingStatus.GEO_SHIPPING_STATUS_SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (rangePairsBuilder_ == null) {
          rangePairs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          rangePairsBuilder_.clear();
        }
        checksum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ShippingRange_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.startOffset_ = startOffset_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.endOffset_ = endOffset_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.status_ = status_;
        if (rangePairsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            rangePairs_ = java.util.Collections.unmodifiableList(rangePairs_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.rangePairs_ = rangePairs_;
        } else {
          result.rangePairs_ = rangePairsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.checksum_ = checksum_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange.getDefaultInstance()) return this;
        if (other.hasStartOffset()) {
          setStartOffset(other.getStartOffset());
        }
        if (other.hasEndOffset()) {
          setEndOffset(other.getEndOffset());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (rangePairsBuilder_ == null) {
          if (!other.rangePairs_.isEmpty()) {
            if (rangePairs_.isEmpty()) {
              rangePairs_ = other.rangePairs_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureRangePairsIsMutable();
              rangePairs_.addAll(other.rangePairs_);
            }
            onChanged();
          }
        } else {
          if (!other.rangePairs_.isEmpty()) {
            if (rangePairsBuilder_.isEmpty()) {
              rangePairsBuilder_.dispose();
              rangePairsBuilder_ = null;
              rangePairs_ = other.rangePairs_;
              bitField0_ = (bitField0_ & ~0x00000008);
              rangePairsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRangePairsFieldBuilder() : null;
            } else {
              rangePairsBuilder_.addAllMessages(other.rangePairs_);
            }
          }
        }
        if (other.hasChecksum()) {
          setChecksum(other.getChecksum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStartOffset()) {
          
          return false;
        }
        if (!hasEndOffset()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        for (int i = 0; i < getRangePairsCount(); i++) {
          if (!getRangePairs(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long startOffset_ ;
      /**
       * <code>required int64 startOffset = 1;</code>
       */
      public boolean hasStartOffset() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 startOffset = 1;</code>
       */
      public long getStartOffset() {
        return startOffset_;
      }
      /**
       * <code>required int64 startOffset = 1;</code>
       */
      public Builder setStartOffset(long value) {
        bitField0_ |= 0x00000001;
        startOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 startOffset = 1;</code>
       */
      public Builder clearStartOffset() {
        bitField0_ = (bitField0_ & ~0x00000001);
        startOffset_ = 0L;
        onChanged();
        return this;
      }

      private long endOffset_ ;
      /**
       * <code>required int64 endOffset = 2;</code>
       */
      public boolean hasEndOffset() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 endOffset = 2;</code>
       */
      public long getEndOffset() {
        return endOffset_;
      }
      /**
       * <code>required int64 endOffset = 2;</code>
       */
      public Builder setEndOffset(long value) {
        bitField0_ |= 0x00000002;
        endOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 endOffset = 2;</code>
       */
      public Builder clearEndOffset() {
        bitField0_ = (bitField0_ & ~0x00000002);
        endOffset_ = 0L;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingStatus status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingStatus.GEO_SHIPPING_STATUS_SUCCESS;
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingStatus status = 3;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingStatus status = 3;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingStatus getStatus() {
        return status_;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingStatus status = 3;</code>
       */
      public Builder setStatus(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingStatus status = 3;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000004);
        status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingStatus.GEO_SHIPPING_STATUS_SUCCESS;
        onChanged();
        return this;
      }

      private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk> rangePairs_ =
        java.util.Collections.emptyList();
      private void ensureRangePairsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          rangePairs_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk>(rangePairs_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunkOrBuilder> rangePairsBuilder_;

      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
       *
       * <pre>
       * for XOR pair geo shipping
       * </pre>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk> getRangePairsList() {
        if (rangePairsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rangePairs_);
        } else {
          return rangePairsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
       *
       * <pre>
       * for XOR pair geo shipping
       * </pre>
       */
      public int getRangePairsCount() {
        if (rangePairsBuilder_ == null) {
          return rangePairs_.size();
        } else {
          return rangePairsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
       *
       * <pre>
       * for XOR pair geo shipping
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk getRangePairs(int index) {
        if (rangePairsBuilder_ == null) {
          return rangePairs_.get(index);
        } else {
          return rangePairsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
       *
       * <pre>
       * for XOR pair geo shipping
       * </pre>
       */
      public Builder setRangePairs(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk value) {
        if (rangePairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRangePairsIsMutable();
          rangePairs_.set(index, value);
          onChanged();
        } else {
          rangePairsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
       *
       * <pre>
       * for XOR pair geo shipping
       * </pre>
       */
      public Builder setRangePairs(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk.Builder builderForValue) {
        if (rangePairsBuilder_ == null) {
          ensureRangePairsIsMutable();
          rangePairs_.set(index, builderForValue.build());
          onChanged();
        } else {
          rangePairsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
       *
       * <pre>
       * for XOR pair geo shipping
       * </pre>
       */
      public Builder addRangePairs(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk value) {
        if (rangePairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRangePairsIsMutable();
          rangePairs_.add(value);
          onChanged();
        } else {
          rangePairsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
       *
       * <pre>
       * for XOR pair geo shipping
       * </pre>
       */
      public Builder addRangePairs(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk value) {
        if (rangePairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRangePairsIsMutable();
          rangePairs_.add(index, value);
          onChanged();
        } else {
          rangePairsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
       *
       * <pre>
       * for XOR pair geo shipping
       * </pre>
       */
      public Builder addRangePairs(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk.Builder builderForValue) {
        if (rangePairsBuilder_ == null) {
          ensureRangePairsIsMutable();
          rangePairs_.add(builderForValue.build());
          onChanged();
        } else {
          rangePairsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
       *
       * <pre>
       * for XOR pair geo shipping
       * </pre>
       */
      public Builder addRangePairs(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk.Builder builderForValue) {
        if (rangePairsBuilder_ == null) {
          ensureRangePairsIsMutable();
          rangePairs_.add(index, builderForValue.build());
          onChanged();
        } else {
          rangePairsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
       *
       * <pre>
       * for XOR pair geo shipping
       * </pre>
       */
      public Builder addAllRangePairs(
          java.lang.Iterable<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk> values) {
        if (rangePairsBuilder_ == null) {
          ensureRangePairsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rangePairs_);
          onChanged();
        } else {
          rangePairsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
       *
       * <pre>
       * for XOR pair geo shipping
       * </pre>
       */
      public Builder clearRangePairs() {
        if (rangePairsBuilder_ == null) {
          rangePairs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          rangePairsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
       *
       * <pre>
       * for XOR pair geo shipping
       * </pre>
       */
      public Builder removeRangePairs(int index) {
        if (rangePairsBuilder_ == null) {
          ensureRangePairsIsMutable();
          rangePairs_.remove(index);
          onChanged();
        } else {
          rangePairsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
       *
       * <pre>
       * for XOR pair geo shipping
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk.Builder getRangePairsBuilder(
          int index) {
        return getRangePairsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
       *
       * <pre>
       * for XOR pair geo shipping
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunkOrBuilder getRangePairsOrBuilder(
          int index) {
        if (rangePairsBuilder_ == null) {
          return rangePairs_.get(index);  } else {
          return rangePairsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
       *
       * <pre>
       * for XOR pair geo shipping
       * </pre>
       */
      public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunkOrBuilder> 
           getRangePairsOrBuilderList() {
        if (rangePairsBuilder_ != null) {
          return rangePairsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rangePairs_);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
       *
       * <pre>
       * for XOR pair geo shipping
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk.Builder addRangePairsBuilder() {
        return getRangePairsFieldBuilder().addBuilder(
            io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
       *
       * <pre>
       * for XOR pair geo shipping
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk.Builder addRangePairsBuilder(
          int index) {
        return getRangePairsFieldBuilder().addBuilder(
            index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeMapWithPairChunk rangePairs = 4;</code>
       *
       * <pre>
       * for XOR pair geo shipping
       * </pre>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk.Builder> 
           getRangePairsBuilderList() {
        return getRangePairsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunkOrBuilder> 
          getRangePairsFieldBuilder() {
        if (rangePairsBuilder_ == null) {
          rangePairsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunk.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeMapWithPairChunkOrBuilder>(
                  rangePairs_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          rangePairs_ = null;
        }
        return rangePairsBuilder_;
      }

      private int checksum_ ;
      /**
       * <code>optional int32 checksum = 5;</code>
       *
       * <pre>
       * checksum for this range data
       * this field exists in remote zone if ShippingStatus is SUCCESS
       * </pre>
       */
      public boolean hasChecksum() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 checksum = 5;</code>
       *
       * <pre>
       * checksum for this range data
       * this field exists in remote zone if ShippingStatus is SUCCESS
       * </pre>
       */
      public int getChecksum() {
        return checksum_;
      }
      /**
       * <code>optional int32 checksum = 5;</code>
       *
       * <pre>
       * checksum for this range data
       * this field exists in remote zone if ShippingStatus is SUCCESS
       * </pre>
       */
      public Builder setChecksum(int value) {
        bitField0_ |= 0x00000010;
        checksum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 checksum = 5;</code>
       *
       * <pre>
       * checksum for this range data
       * this field exists in remote zone if ShippingStatus is SUCCESS
       * </pre>
       */
      public Builder clearChecksum() {
        bitField0_ = (bitField0_ & ~0x00000010);
        checksum_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange)
    }

    static {
      defaultInstance = new ShippingRange(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange)
  }

  public interface ShippingProgressOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingProgress)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 version = 1;</code>
     */
    boolean hasVersion();
    /**
     * <code>required int32 version = 1;</code>
     */
    int getVersion();

    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
     */
    java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange> 
        getRangesList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange getRanges(int index);
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
     */
    int getRangesCount();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
     */
    java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRangeOrBuilder> 
        getRangesOrBuilderList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRangeOrBuilder getRangesOrBuilder(
        int index);

    /**
     * <code>repeated string pairShippedChunkIds = 3;</code>
     */
    com.google.protobuf.ProtocolStringList
        getPairShippedChunkIdsList();
    /**
     * <code>repeated string pairShippedChunkIds = 3;</code>
     */
    int getPairShippedChunkIdsCount();
    /**
     * <code>repeated string pairShippedChunkIds = 3;</code>
     */
    java.lang.String getPairShippedChunkIds(int index);
    /**
     * <code>repeated string pairShippedChunkIds = 3;</code>
     */
    com.google.protobuf.ByteString
        getPairShippedChunkIdsBytes(int index);

    /**
     * <code>repeated int64 pairShippedChunkGarbageBits = 4;</code>
     *
     * <pre>
     * for troubleshooting purpose
     * </pre>
     */
    java.util.List<java.lang.Long> getPairShippedChunkGarbageBitsList();
    /**
     * <code>repeated int64 pairShippedChunkGarbageBits = 4;</code>
     *
     * <pre>
     * for troubleshooting purpose
     * </pre>
     */
    int getPairShippedChunkGarbageBitsCount();
    /**
     * <code>repeated int64 pairShippedChunkGarbageBits = 4;</code>
     *
     * <pre>
     * for troubleshooting purpose
     * </pre>
     */
    long getPairShippedChunkGarbageBits(int index);

    /**
     * <code>repeated string pairShippingChunkIds = 5;</code>
     */
    com.google.protobuf.ProtocolStringList
        getPairShippingChunkIdsList();
    /**
     * <code>repeated string pairShippingChunkIds = 5;</code>
     */
    int getPairShippingChunkIdsCount();
    /**
     * <code>repeated string pairShippingChunkIds = 5;</code>
     */
    java.lang.String getPairShippingChunkIds(int index);
    /**
     * <code>repeated string pairShippingChunkIds = 5;</code>
     */
    com.google.protobuf.ByteString
        getPairShippingChunkIdsBytes(int index);

    /**
     * <code>repeated int64 pairShippingChunkGarbageBits = 6;</code>
     */
    java.util.List<java.lang.Long> getPairShippingChunkGarbageBitsList();
    /**
     * <code>repeated int64 pairShippingChunkGarbageBits = 6;</code>
     */
    int getPairShippingChunkGarbageBitsCount();
    /**
     * <code>repeated int64 pairShippingChunkGarbageBits = 6;</code>
     */
    long getPairShippingChunkGarbageBits(int index);

    /**
     * <code>optional string currentPairShippingChunkId = 7;</code>
     */
    boolean hasCurrentPairShippingChunkId();
    /**
     * <code>optional string currentPairShippingChunkId = 7;</code>
     */
    java.lang.String getCurrentPairShippingChunkId();
    /**
     * <code>optional string currentPairShippingChunkId = 7;</code>
     */
    com.google.protobuf.ByteString
        getCurrentPairShippingChunkIdBytes();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingProgress}
   */
  public static final class ShippingProgress extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingProgress)
      ShippingProgressOrBuilder {
    // Use ShippingProgress.newBuilder() to construct.
    private ShippingProgress(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ShippingProgress(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ShippingProgress defaultInstance;
    public static ShippingProgress getDefaultInstance() {
      return defaultInstance;
    }

    public ShippingProgress getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ShippingProgress(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              version_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                ranges_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange>();
                mutable_bitField0_ |= 0x00000002;
              }
              ranges_.add(input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                pairShippedChunkIds_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              pairShippedChunkIds_.add(bs);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                pairShippedChunkGarbageBits_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              pairShippedChunkGarbageBits_.add(input.readInt64());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                pairShippedChunkGarbageBits_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                pairShippedChunkGarbageBits_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                pairShippingChunkIds_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000010;
              }
              pairShippingChunkIds_.add(bs);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                pairShippingChunkGarbageBits_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000020;
              }
              pairShippingChunkGarbageBits_.add(input.readInt64());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                pairShippingChunkGarbageBits_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                pairShippingChunkGarbageBits_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              currentPairShippingChunkId_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          ranges_ = java.util.Collections.unmodifiableList(ranges_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          pairShippedChunkIds_ = pairShippedChunkIds_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          pairShippedChunkGarbageBits_ = java.util.Collections.unmodifiableList(pairShippedChunkGarbageBits_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          pairShippingChunkIds_ = pairShippingChunkIds_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          pairShippingChunkGarbageBits_ = java.util.Collections.unmodifiableList(pairShippingChunkGarbageBits_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ShippingProgress_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ShippingProgress_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress.Builder.class);
    }

    public static com.google.protobuf.Parser<ShippingProgress> PARSER =
        new com.google.protobuf.AbstractParser<ShippingProgress>() {
      public ShippingProgress parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ShippingProgress(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ShippingProgress> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <code>required int32 version = 1;</code>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 version = 1;</code>
     */
    public int getVersion() {
      return version_;
    }

    public static final int RANGES_FIELD_NUMBER = 2;
    private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange> ranges_;
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
     */
    public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange> getRangesList() {
      return ranges_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
     */
    public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRangeOrBuilder> 
        getRangesOrBuilderList() {
      return ranges_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
     */
    public int getRangesCount() {
      return ranges_.size();
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange getRanges(int index) {
      return ranges_.get(index);
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRangeOrBuilder getRangesOrBuilder(
        int index) {
      return ranges_.get(index);
    }

    public static final int PAIRSHIPPEDCHUNKIDS_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList pairShippedChunkIds_;
    /**
     * <code>repeated string pairShippedChunkIds = 3;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getPairShippedChunkIdsList() {
      return pairShippedChunkIds_;
    }
    /**
     * <code>repeated string pairShippedChunkIds = 3;</code>
     */
    public int getPairShippedChunkIdsCount() {
      return pairShippedChunkIds_.size();
    }
    /**
     * <code>repeated string pairShippedChunkIds = 3;</code>
     */
    public java.lang.String getPairShippedChunkIds(int index) {
      return pairShippedChunkIds_.get(index);
    }
    /**
     * <code>repeated string pairShippedChunkIds = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPairShippedChunkIdsBytes(int index) {
      return pairShippedChunkIds_.getByteString(index);
    }

    public static final int PAIRSHIPPEDCHUNKGARBAGEBITS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Long> pairShippedChunkGarbageBits_;
    /**
     * <code>repeated int64 pairShippedChunkGarbageBits = 4;</code>
     *
     * <pre>
     * for troubleshooting purpose
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getPairShippedChunkGarbageBitsList() {
      return pairShippedChunkGarbageBits_;
    }
    /**
     * <code>repeated int64 pairShippedChunkGarbageBits = 4;</code>
     *
     * <pre>
     * for troubleshooting purpose
     * </pre>
     */
    public int getPairShippedChunkGarbageBitsCount() {
      return pairShippedChunkGarbageBits_.size();
    }
    /**
     * <code>repeated int64 pairShippedChunkGarbageBits = 4;</code>
     *
     * <pre>
     * for troubleshooting purpose
     * </pre>
     */
    public long getPairShippedChunkGarbageBits(int index) {
      return pairShippedChunkGarbageBits_.get(index);
    }

    public static final int PAIRSHIPPINGCHUNKIDS_FIELD_NUMBER = 5;
    private com.google.protobuf.LazyStringList pairShippingChunkIds_;
    /**
     * <code>repeated string pairShippingChunkIds = 5;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getPairShippingChunkIdsList() {
      return pairShippingChunkIds_;
    }
    /**
     * <code>repeated string pairShippingChunkIds = 5;</code>
     */
    public int getPairShippingChunkIdsCount() {
      return pairShippingChunkIds_.size();
    }
    /**
     * <code>repeated string pairShippingChunkIds = 5;</code>
     */
    public java.lang.String getPairShippingChunkIds(int index) {
      return pairShippingChunkIds_.get(index);
    }
    /**
     * <code>repeated string pairShippingChunkIds = 5;</code>
     */
    public com.google.protobuf.ByteString
        getPairShippingChunkIdsBytes(int index) {
      return pairShippingChunkIds_.getByteString(index);
    }

    public static final int PAIRSHIPPINGCHUNKGARBAGEBITS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Long> pairShippingChunkGarbageBits_;
    /**
     * <code>repeated int64 pairShippingChunkGarbageBits = 6;</code>
     */
    public java.util.List<java.lang.Long>
        getPairShippingChunkGarbageBitsList() {
      return pairShippingChunkGarbageBits_;
    }
    /**
     * <code>repeated int64 pairShippingChunkGarbageBits = 6;</code>
     */
    public int getPairShippingChunkGarbageBitsCount() {
      return pairShippingChunkGarbageBits_.size();
    }
    /**
     * <code>repeated int64 pairShippingChunkGarbageBits = 6;</code>
     */
    public long getPairShippingChunkGarbageBits(int index) {
      return pairShippingChunkGarbageBits_.get(index);
    }

    public static final int CURRENTPAIRSHIPPINGCHUNKID_FIELD_NUMBER = 7;
    private java.lang.Object currentPairShippingChunkId_;
    /**
     * <code>optional string currentPairShippingChunkId = 7;</code>
     */
    public boolean hasCurrentPairShippingChunkId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string currentPairShippingChunkId = 7;</code>
     */
    public java.lang.String getCurrentPairShippingChunkId() {
      java.lang.Object ref = currentPairShippingChunkId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          currentPairShippingChunkId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string currentPairShippingChunkId = 7;</code>
     */
    public com.google.protobuf.ByteString
        getCurrentPairShippingChunkIdBytes() {
      java.lang.Object ref = currentPairShippingChunkId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        currentPairShippingChunkId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      version_ = 0;
      ranges_ = java.util.Collections.emptyList();
      pairShippedChunkIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      pairShippedChunkGarbageBits_ = java.util.Collections.emptyList();
      pairShippingChunkIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      pairShippingChunkGarbageBits_ = java.util.Collections.emptyList();
      currentPairShippingChunkId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getRangesCount(); i++) {
        if (!getRanges(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, version_);
      }
      for (int i = 0; i < ranges_.size(); i++) {
        output.writeMessage(2, ranges_.get(i));
      }
      for (int i = 0; i < pairShippedChunkIds_.size(); i++) {
        output.writeBytes(3, pairShippedChunkIds_.getByteString(i));
      }
      for (int i = 0; i < pairShippedChunkGarbageBits_.size(); i++) {
        output.writeInt64(4, pairShippedChunkGarbageBits_.get(i));
      }
      for (int i = 0; i < pairShippingChunkIds_.size(); i++) {
        output.writeBytes(5, pairShippingChunkIds_.getByteString(i));
      }
      for (int i = 0; i < pairShippingChunkGarbageBits_.size(); i++) {
        output.writeInt64(6, pairShippingChunkGarbageBits_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(7, getCurrentPairShippingChunkIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, version_);
      }
      for (int i = 0; i < ranges_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, ranges_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < pairShippedChunkIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(pairShippedChunkIds_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getPairShippedChunkIdsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < pairShippedChunkGarbageBits_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(pairShippedChunkGarbageBits_.get(i));
        }
        size += dataSize;
        size += 1 * getPairShippedChunkGarbageBitsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < pairShippingChunkIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(pairShippingChunkIds_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getPairShippingChunkIdsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < pairShippingChunkGarbageBits_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(pairShippingChunkGarbageBits_.get(i));
        }
        size += dataSize;
        size += 1 * getPairShippingChunkGarbageBitsList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getCurrentPairShippingChunkIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingProgress}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingProgress)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgressOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ShippingProgress_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ShippingProgress_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRangesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        version_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (rangesBuilder_ == null) {
          ranges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          rangesBuilder_.clear();
        }
        pairShippedChunkIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        pairShippedChunkGarbageBits_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        pairShippingChunkIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        pairShippingChunkGarbageBits_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        currentPairShippingChunkId_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ShippingProgress_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (rangesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            ranges_ = java.util.Collections.unmodifiableList(ranges_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.ranges_ = ranges_;
        } else {
          result.ranges_ = rangesBuilder_.build();
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          pairShippedChunkIds_ = pairShippedChunkIds_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.pairShippedChunkIds_ = pairShippedChunkIds_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          pairShippedChunkGarbageBits_ = java.util.Collections.unmodifiableList(pairShippedChunkGarbageBits_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.pairShippedChunkGarbageBits_ = pairShippedChunkGarbageBits_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          pairShippingChunkIds_ = pairShippingChunkIds_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.pairShippingChunkIds_ = pairShippingChunkIds_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          pairShippingChunkGarbageBits_ = java.util.Collections.unmodifiableList(pairShippingChunkGarbageBits_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.pairShippingChunkGarbageBits_ = pairShippingChunkGarbageBits_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000002;
        }
        result.currentPairShippingChunkId_ = currentPairShippingChunkId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (rangesBuilder_ == null) {
          if (!other.ranges_.isEmpty()) {
            if (ranges_.isEmpty()) {
              ranges_ = other.ranges_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRangesIsMutable();
              ranges_.addAll(other.ranges_);
            }
            onChanged();
          }
        } else {
          if (!other.ranges_.isEmpty()) {
            if (rangesBuilder_.isEmpty()) {
              rangesBuilder_.dispose();
              rangesBuilder_ = null;
              ranges_ = other.ranges_;
              bitField0_ = (bitField0_ & ~0x00000002);
              rangesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRangesFieldBuilder() : null;
            } else {
              rangesBuilder_.addAllMessages(other.ranges_);
            }
          }
        }
        if (!other.pairShippedChunkIds_.isEmpty()) {
          if (pairShippedChunkIds_.isEmpty()) {
            pairShippedChunkIds_ = other.pairShippedChunkIds_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensurePairShippedChunkIdsIsMutable();
            pairShippedChunkIds_.addAll(other.pairShippedChunkIds_);
          }
          onChanged();
        }
        if (!other.pairShippedChunkGarbageBits_.isEmpty()) {
          if (pairShippedChunkGarbageBits_.isEmpty()) {
            pairShippedChunkGarbageBits_ = other.pairShippedChunkGarbageBits_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensurePairShippedChunkGarbageBitsIsMutable();
            pairShippedChunkGarbageBits_.addAll(other.pairShippedChunkGarbageBits_);
          }
          onChanged();
        }
        if (!other.pairShippingChunkIds_.isEmpty()) {
          if (pairShippingChunkIds_.isEmpty()) {
            pairShippingChunkIds_ = other.pairShippingChunkIds_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensurePairShippingChunkIdsIsMutable();
            pairShippingChunkIds_.addAll(other.pairShippingChunkIds_);
          }
          onChanged();
        }
        if (!other.pairShippingChunkGarbageBits_.isEmpty()) {
          if (pairShippingChunkGarbageBits_.isEmpty()) {
            pairShippingChunkGarbageBits_ = other.pairShippingChunkGarbageBits_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensurePairShippingChunkGarbageBitsIsMutable();
            pairShippingChunkGarbageBits_.addAll(other.pairShippingChunkGarbageBits_);
          }
          onChanged();
        }
        if (other.hasCurrentPairShippingChunkId()) {
          bitField0_ |= 0x00000040;
          currentPairShippingChunkId_ = other.currentPairShippingChunkId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasVersion()) {
          
          return false;
        }
        for (int i = 0; i < getRangesCount(); i++) {
          if (!getRanges(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int version_ ;
      /**
       * <code>required int32 version = 1;</code>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 version = 1;</code>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <code>required int32 version = 1;</code>
       */
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 version = 1;</code>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange> ranges_ =
        java.util.Collections.emptyList();
      private void ensureRangesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          ranges_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange>(ranges_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRangeOrBuilder> rangesBuilder_;

      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange> getRangesList() {
        if (rangesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ranges_);
        } else {
          return rangesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
       */
      public int getRangesCount() {
        if (rangesBuilder_ == null) {
          return ranges_.size();
        } else {
          return rangesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange getRanges(int index) {
        if (rangesBuilder_ == null) {
          return ranges_.get(index);
        } else {
          return rangesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
       */
      public Builder setRanges(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange value) {
        if (rangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRangesIsMutable();
          ranges_.set(index, value);
          onChanged();
        } else {
          rangesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
       */
      public Builder setRanges(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange.Builder builderForValue) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          ranges_.set(index, builderForValue.build());
          onChanged();
        } else {
          rangesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
       */
      public Builder addRanges(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange value) {
        if (rangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRangesIsMutable();
          ranges_.add(value);
          onChanged();
        } else {
          rangesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
       */
      public Builder addRanges(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange value) {
        if (rangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRangesIsMutable();
          ranges_.add(index, value);
          onChanged();
        } else {
          rangesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
       */
      public Builder addRanges(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange.Builder builderForValue) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          ranges_.add(builderForValue.build());
          onChanged();
        } else {
          rangesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
       */
      public Builder addRanges(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange.Builder builderForValue) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          ranges_.add(index, builderForValue.build());
          onChanged();
        } else {
          rangesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
       */
      public Builder addAllRanges(
          java.lang.Iterable<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange> values) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, ranges_);
          onChanged();
        } else {
          rangesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
       */
      public Builder clearRanges() {
        if (rangesBuilder_ == null) {
          ranges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          rangesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
       */
      public Builder removeRanges(int index) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          ranges_.remove(index);
          onChanged();
        } else {
          rangesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange.Builder getRangesBuilder(
          int index) {
        return getRangesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRangeOrBuilder getRangesOrBuilder(
          int index) {
        if (rangesBuilder_ == null) {
          return ranges_.get(index);  } else {
          return rangesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
       */
      public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRangeOrBuilder> 
           getRangesOrBuilderList() {
        if (rangesBuilder_ != null) {
          return rangesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ranges_);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange.Builder addRangesBuilder() {
        return getRangesFieldBuilder().addBuilder(
            io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange.Builder addRangesBuilder(
          int index) {
        return getRangesFieldBuilder().addBuilder(
            index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingRange ranges = 2;</code>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange.Builder> 
           getRangesBuilderList() {
        return getRangesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRangeOrBuilder> 
          getRangesFieldBuilder() {
        if (rangesBuilder_ == null) {
          rangesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRange.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingRangeOrBuilder>(
                  ranges_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          ranges_ = null;
        }
        return rangesBuilder_;
      }

      private com.google.protobuf.LazyStringList pairShippedChunkIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensurePairShippedChunkIdsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          pairShippedChunkIds_ = new com.google.protobuf.LazyStringArrayList(pairShippedChunkIds_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string pairShippedChunkIds = 3;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getPairShippedChunkIdsList() {
        return pairShippedChunkIds_.getUnmodifiableView();
      }
      /**
       * <code>repeated string pairShippedChunkIds = 3;</code>
       */
      public int getPairShippedChunkIdsCount() {
        return pairShippedChunkIds_.size();
      }
      /**
       * <code>repeated string pairShippedChunkIds = 3;</code>
       */
      public java.lang.String getPairShippedChunkIds(int index) {
        return pairShippedChunkIds_.get(index);
      }
      /**
       * <code>repeated string pairShippedChunkIds = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPairShippedChunkIdsBytes(int index) {
        return pairShippedChunkIds_.getByteString(index);
      }
      /**
       * <code>repeated string pairShippedChunkIds = 3;</code>
       */
      public Builder setPairShippedChunkIds(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePairShippedChunkIdsIsMutable();
        pairShippedChunkIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string pairShippedChunkIds = 3;</code>
       */
      public Builder addPairShippedChunkIds(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePairShippedChunkIdsIsMutable();
        pairShippedChunkIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string pairShippedChunkIds = 3;</code>
       */
      public Builder addAllPairShippedChunkIds(
          java.lang.Iterable<java.lang.String> values) {
        ensurePairShippedChunkIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, pairShippedChunkIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string pairShippedChunkIds = 3;</code>
       */
      public Builder clearPairShippedChunkIds() {
        pairShippedChunkIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string pairShippedChunkIds = 3;</code>
       */
      public Builder addPairShippedChunkIdsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePairShippedChunkIdsIsMutable();
        pairShippedChunkIds_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> pairShippedChunkGarbageBits_ = java.util.Collections.emptyList();
      private void ensurePairShippedChunkGarbageBitsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          pairShippedChunkGarbageBits_ = new java.util.ArrayList<java.lang.Long>(pairShippedChunkGarbageBits_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int64 pairShippedChunkGarbageBits = 4;</code>
       *
       * <pre>
       * for troubleshooting purpose
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getPairShippedChunkGarbageBitsList() {
        return java.util.Collections.unmodifiableList(pairShippedChunkGarbageBits_);
      }
      /**
       * <code>repeated int64 pairShippedChunkGarbageBits = 4;</code>
       *
       * <pre>
       * for troubleshooting purpose
       * </pre>
       */
      public int getPairShippedChunkGarbageBitsCount() {
        return pairShippedChunkGarbageBits_.size();
      }
      /**
       * <code>repeated int64 pairShippedChunkGarbageBits = 4;</code>
       *
       * <pre>
       * for troubleshooting purpose
       * </pre>
       */
      public long getPairShippedChunkGarbageBits(int index) {
        return pairShippedChunkGarbageBits_.get(index);
      }
      /**
       * <code>repeated int64 pairShippedChunkGarbageBits = 4;</code>
       *
       * <pre>
       * for troubleshooting purpose
       * </pre>
       */
      public Builder setPairShippedChunkGarbageBits(
          int index, long value) {
        ensurePairShippedChunkGarbageBitsIsMutable();
        pairShippedChunkGarbageBits_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 pairShippedChunkGarbageBits = 4;</code>
       *
       * <pre>
       * for troubleshooting purpose
       * </pre>
       */
      public Builder addPairShippedChunkGarbageBits(long value) {
        ensurePairShippedChunkGarbageBitsIsMutable();
        pairShippedChunkGarbageBits_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 pairShippedChunkGarbageBits = 4;</code>
       *
       * <pre>
       * for troubleshooting purpose
       * </pre>
       */
      public Builder addAllPairShippedChunkGarbageBits(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensurePairShippedChunkGarbageBitsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, pairShippedChunkGarbageBits_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 pairShippedChunkGarbageBits = 4;</code>
       *
       * <pre>
       * for troubleshooting purpose
       * </pre>
       */
      public Builder clearPairShippedChunkGarbageBits() {
        pairShippedChunkGarbageBits_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList pairShippingChunkIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensurePairShippingChunkIdsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          pairShippingChunkIds_ = new com.google.protobuf.LazyStringArrayList(pairShippingChunkIds_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated string pairShippingChunkIds = 5;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getPairShippingChunkIdsList() {
        return pairShippingChunkIds_.getUnmodifiableView();
      }
      /**
       * <code>repeated string pairShippingChunkIds = 5;</code>
       */
      public int getPairShippingChunkIdsCount() {
        return pairShippingChunkIds_.size();
      }
      /**
       * <code>repeated string pairShippingChunkIds = 5;</code>
       */
      public java.lang.String getPairShippingChunkIds(int index) {
        return pairShippingChunkIds_.get(index);
      }
      /**
       * <code>repeated string pairShippingChunkIds = 5;</code>
       */
      public com.google.protobuf.ByteString
          getPairShippingChunkIdsBytes(int index) {
        return pairShippingChunkIds_.getByteString(index);
      }
      /**
       * <code>repeated string pairShippingChunkIds = 5;</code>
       */
      public Builder setPairShippingChunkIds(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePairShippingChunkIdsIsMutable();
        pairShippingChunkIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string pairShippingChunkIds = 5;</code>
       */
      public Builder addPairShippingChunkIds(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePairShippingChunkIdsIsMutable();
        pairShippingChunkIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string pairShippingChunkIds = 5;</code>
       */
      public Builder addAllPairShippingChunkIds(
          java.lang.Iterable<java.lang.String> values) {
        ensurePairShippingChunkIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, pairShippingChunkIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string pairShippingChunkIds = 5;</code>
       */
      public Builder clearPairShippingChunkIds() {
        pairShippingChunkIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string pairShippingChunkIds = 5;</code>
       */
      public Builder addPairShippingChunkIdsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePairShippingChunkIdsIsMutable();
        pairShippingChunkIds_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> pairShippingChunkGarbageBits_ = java.util.Collections.emptyList();
      private void ensurePairShippingChunkGarbageBitsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          pairShippingChunkGarbageBits_ = new java.util.ArrayList<java.lang.Long>(pairShippingChunkGarbageBits_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int64 pairShippingChunkGarbageBits = 6;</code>
       */
      public java.util.List<java.lang.Long>
          getPairShippingChunkGarbageBitsList() {
        return java.util.Collections.unmodifiableList(pairShippingChunkGarbageBits_);
      }
      /**
       * <code>repeated int64 pairShippingChunkGarbageBits = 6;</code>
       */
      public int getPairShippingChunkGarbageBitsCount() {
        return pairShippingChunkGarbageBits_.size();
      }
      /**
       * <code>repeated int64 pairShippingChunkGarbageBits = 6;</code>
       */
      public long getPairShippingChunkGarbageBits(int index) {
        return pairShippingChunkGarbageBits_.get(index);
      }
      /**
       * <code>repeated int64 pairShippingChunkGarbageBits = 6;</code>
       */
      public Builder setPairShippingChunkGarbageBits(
          int index, long value) {
        ensurePairShippingChunkGarbageBitsIsMutable();
        pairShippingChunkGarbageBits_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 pairShippingChunkGarbageBits = 6;</code>
       */
      public Builder addPairShippingChunkGarbageBits(long value) {
        ensurePairShippingChunkGarbageBitsIsMutable();
        pairShippingChunkGarbageBits_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 pairShippingChunkGarbageBits = 6;</code>
       */
      public Builder addAllPairShippingChunkGarbageBits(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensurePairShippingChunkGarbageBitsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, pairShippingChunkGarbageBits_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 pairShippingChunkGarbageBits = 6;</code>
       */
      public Builder clearPairShippingChunkGarbageBits() {
        pairShippingChunkGarbageBits_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private java.lang.Object currentPairShippingChunkId_ = "";
      /**
       * <code>optional string currentPairShippingChunkId = 7;</code>
       */
      public boolean hasCurrentPairShippingChunkId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string currentPairShippingChunkId = 7;</code>
       */
      public java.lang.String getCurrentPairShippingChunkId() {
        java.lang.Object ref = currentPairShippingChunkId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            currentPairShippingChunkId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string currentPairShippingChunkId = 7;</code>
       */
      public com.google.protobuf.ByteString
          getCurrentPairShippingChunkIdBytes() {
        java.lang.Object ref = currentPairShippingChunkId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          currentPairShippingChunkId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string currentPairShippingChunkId = 7;</code>
       */
      public Builder setCurrentPairShippingChunkId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        currentPairShippingChunkId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string currentPairShippingChunkId = 7;</code>
       */
      public Builder clearCurrentPairShippingChunkId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        currentPairShippingChunkId_ = getDefaultInstance().getCurrentPairShippingChunkId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string currentPairShippingChunkId = 7;</code>
       */
      public Builder setCurrentPairShippingChunkIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        currentPairShippingChunkId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingProgress)
    }

    static {
      defaultInstance = new ShippingProgress(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingProgress)
  }

  public interface GeoProgressOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string targetZone = 1;</code>
     */
    boolean hasTargetZone();
    /**
     * <code>required string targetZone = 1;</code>
     */
    java.lang.String getTargetZone();
    /**
     * <code>required string targetZone = 1;</code>
     */
    com.google.protobuf.ByteString
        getTargetZoneBytes();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingProgress progress = 3;</code>
     */
    boolean hasProgress();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingProgress progress = 3;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress getProgress();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingProgress progress = 3;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgressOrBuilder getProgressOrBuilder();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress}
   */
  public static final class GeoProgress extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress)
      GeoProgressOrBuilder {
    // Use GeoProgress.newBuilder() to construct.
    private GeoProgress(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GeoProgress(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GeoProgress defaultInstance;
    public static GeoProgress getDefaultInstance() {
      return defaultInstance;
    }

    public GeoProgress getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GeoProgress(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              targetZone_ = bs;
              break;
            }
            case 26: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = progress_.toBuilder();
              }
              progress_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(progress_);
                progress_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_GeoProgress_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_GeoProgress_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress.Builder.class);
    }

    public static com.google.protobuf.Parser<GeoProgress> PARSER =
        new com.google.protobuf.AbstractParser<GeoProgress>() {
      public GeoProgress parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GeoProgress(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GeoProgress> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TARGETZONE_FIELD_NUMBER = 1;
    private java.lang.Object targetZone_;
    /**
     * <code>required string targetZone = 1;</code>
     */
    public boolean hasTargetZone() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string targetZone = 1;</code>
     */
    public java.lang.String getTargetZone() {
      java.lang.Object ref = targetZone_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          targetZone_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string targetZone = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTargetZoneBytes() {
      java.lang.Object ref = targetZone_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        targetZone_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROGRESS_FIELD_NUMBER = 3;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress progress_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingProgress progress = 3;</code>
     */
    public boolean hasProgress() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingProgress progress = 3;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress getProgress() {
      return progress_;
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingProgress progress = 3;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgressOrBuilder getProgressOrBuilder() {
      return progress_;
    }

    private void initFields() {
      targetZone_ = "";
      progress_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTargetZone()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasProgress()) {
        if (!getProgress().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTargetZoneBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, progress_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTargetZoneBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, progress_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgressOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_GeoProgress_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_GeoProgress_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getProgressFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        targetZone_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (progressBuilder_ == null) {
          progress_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress.getDefaultInstance();
        } else {
          progressBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_GeoProgress_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.targetZone_ = targetZone_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (progressBuilder_ == null) {
          result.progress_ = progress_;
        } else {
          result.progress_ = progressBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress.getDefaultInstance()) return this;
        if (other.hasTargetZone()) {
          bitField0_ |= 0x00000001;
          targetZone_ = other.targetZone_;
          onChanged();
        }
        if (other.hasProgress()) {
          mergeProgress(other.getProgress());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTargetZone()) {
          
          return false;
        }
        if (hasProgress()) {
          if (!getProgress().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object targetZone_ = "";
      /**
       * <code>required string targetZone = 1;</code>
       */
      public boolean hasTargetZone() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string targetZone = 1;</code>
       */
      public java.lang.String getTargetZone() {
        java.lang.Object ref = targetZone_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            targetZone_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string targetZone = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTargetZoneBytes() {
        java.lang.Object ref = targetZone_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          targetZone_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string targetZone = 1;</code>
       */
      public Builder setTargetZone(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        targetZone_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string targetZone = 1;</code>
       */
      public Builder clearTargetZone() {
        bitField0_ = (bitField0_ & ~0x00000001);
        targetZone_ = getDefaultInstance().getTargetZone();
        onChanged();
        return this;
      }
      /**
       * <code>required string targetZone = 1;</code>
       */
      public Builder setTargetZoneBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        targetZone_ = value;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress progress_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgressOrBuilder> progressBuilder_;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingProgress progress = 3;</code>
       */
      public boolean hasProgress() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingProgress progress = 3;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress getProgress() {
        if (progressBuilder_ == null) {
          return progress_;
        } else {
          return progressBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingProgress progress = 3;</code>
       */
      public Builder setProgress(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress value) {
        if (progressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          progress_ = value;
          onChanged();
        } else {
          progressBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingProgress progress = 3;</code>
       */
      public Builder setProgress(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress.Builder builderForValue) {
        if (progressBuilder_ == null) {
          progress_ = builderForValue.build();
          onChanged();
        } else {
          progressBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingProgress progress = 3;</code>
       */
      public Builder mergeProgress(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress value) {
        if (progressBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              progress_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress.getDefaultInstance()) {
            progress_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress.newBuilder(progress_).mergeFrom(value).buildPartial();
          } else {
            progress_ = value;
          }
          onChanged();
        } else {
          progressBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingProgress progress = 3;</code>
       */
      public Builder clearProgress() {
        if (progressBuilder_ == null) {
          progress_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress.getDefaultInstance();
          onChanged();
        } else {
          progressBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingProgress progress = 3;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress.Builder getProgressBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getProgressFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingProgress progress = 3;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgressOrBuilder getProgressOrBuilder() {
        if (progressBuilder_ != null) {
          return progressBuilder_.getMessageOrBuilder();
        } else {
          return progress_;
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ShippingProgress progress = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgressOrBuilder> 
          getProgressFieldBuilder() {
        if (progressBuilder_ == null) {
          progressBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgress.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ShippingProgressOrBuilder>(
                  getProgress(),
                  getParentForChildren(),
                  isClean());
          progress_ = null;
        }
        return progressBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress)
    }

    static {
      defaultInstance = new GeoProgress(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress)
  }

  public interface CopyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bool isEc = 1;</code>
     */
    boolean hasIsEc();
    /**
     * <code>required bool isEc = 1;</code>
     */
    boolean getIsEc();

    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
     */
    java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo> 
        getSegmentsList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo getSegments(int index);
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
     */
    int getSegmentsCount();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
     */
    java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder> 
        getSegmentsOrBuilderList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder getSegmentsOrBuilder(
        int index);

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcStatus ecStatus = 3 [default = NOT_STARTED];</code>
     */
    boolean hasEcStatus();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcStatus ecStatus = 3 [default = NOT_STARTED];</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcStatus getEcStatus();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 4;</code>
     */
    boolean hasEcCodeScheme();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 4;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme getEcCodeScheme();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 4;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeSchemeOrBuilder getEcCodeSchemeOrBuilder();

    /**
     * <code>optional int32 ecRetryCount = 5;</code>
     *
     * <pre>
     * # of ec coding retries on this copy
     * </pre>
     */
    boolean hasEcRetryCount();
    /**
     * <code>optional int32 ecRetryCount = 5;</code>
     *
     * <pre>
     * # of ec coding retries on this copy
     * </pre>
     */
    int getEcRetryCount();

    /**
     * <code>optional bool ecEncodePaddingToCapacity = 6;</code>
     *
     * <pre>
     * if padding 0 until chunk capacity
     * </pre>
     */
    boolean hasEcEncodePaddingToCapacity();
    /**
     * <code>optional bool ecEncodePaddingToCapacity = 6;</code>
     *
     * <pre>
     * if padding 0 until chunk capacity
     * </pre>
     */
    boolean getEcEncodePaddingToCapacity();

    /**
     * <code>optional int32 ecBlockSize = 7;</code>
     *
     * <pre>
     * how many bytes each block occupied physically
     * this is optional because pre-1.2 this field is not exist,
     * but from 1.2 all the ec allocation needs this field set
     * </pre>
     */
    boolean hasEcBlockSize();
    /**
     * <code>optional int32 ecBlockSize = 7;</code>
     *
     * <pre>
     * how many bytes each block occupied physically
     * this is optional because pre-1.2 this field is not exist,
     * but from 1.2 all the ec allocation needs this field set
     * </pre>
     */
    int getEcBlockSize();

    /**
     * <code>optional bool isClientCreatedEcCopy = 8;</code>
     *
     * <pre>
     * true if the ec copy is created by client (BFW)
     * </pre>
     */
    boolean hasIsClientCreatedEcCopy();
    /**
     * <code>optional bool isClientCreatedEcCopy = 8;</code>
     *
     * <pre>
     * true if the ec copy is created by client (BFW)
     * </pre>
     */
    boolean getIsClientCreatedEcCopy();

    /**
     * <code>optional bool isEcEncodedByClient = 9 [default = false];</code>
     *
     * <pre>
     * is EC copy encode completed by client (BFW),
     * i.g, client let cm update ec copy status successfully
     * </pre>
     */
    boolean hasIsEcEncodedByClient();
    /**
     * <code>optional bool isEcEncodedByClient = 9 [default = false];</code>
     *
     * <pre>
     * is EC copy encode completed by client (BFW),
     * i.g, client let cm update ec copy status successfully
     * </pre>
     */
    boolean getIsEcEncodedByClient();

    /**
     * <code>optional bool isEcCopyFindSealLengthFailed = 10;</code>
     *
     * <pre>
     *is EC copy failed in finding seal length
     * </pre>
     */
    boolean hasIsEcCopyFindSealLengthFailed();
    /**
     * <code>optional bool isEcCopyFindSealLengthFailed = 10;</code>
     *
     * <pre>
     *is EC copy failed in finding seal length
     * </pre>
     */
    boolean getIsEcCopyFindSealLengthFailed();

    /**
     * <code>optional bool hasRedundant = 11;</code>
     */
    boolean hasHasRedundant();
    /**
     * <code>optional bool hasRedundant = 11;</code>
     */
    boolean getHasRedundant();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy}
   */
  public static final class Copy extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy)
      CopyOrBuilder {
    // Use Copy.newBuilder() to construct.
    private Copy(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Copy(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Copy defaultInstance;
    public static Copy getDefaultInstance() {
      return defaultInstance;
    }

    public Copy getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Copy(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              isEc_ = input.readBool();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                segments_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo>();
                mutable_bitField0_ |= 0x00000002;
              }
              segments_.add(input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcStatus value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                ecStatus_ = value;
              }
              break;
            }
            case 34: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = ecCodeScheme_.toBuilder();
              }
              ecCodeScheme_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ecCodeScheme_);
                ecCodeScheme_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              ecRetryCount_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              ecEncodePaddingToCapacity_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              ecBlockSize_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              isClientCreatedEcCopy_ = input.readBool();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              isEcEncodedByClient_ = input.readBool();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              isEcCopyFindSealLengthFailed_ = input.readBool();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              hasRedundant_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          segments_ = java.util.Collections.unmodifiableList(segments_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_Copy_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_Copy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder.class);
    }

    public static com.google.protobuf.Parser<Copy> PARSER =
        new com.google.protobuf.AbstractParser<Copy>() {
      public Copy parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Copy(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Copy> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ISEC_FIELD_NUMBER = 1;
    private boolean isEc_;
    /**
     * <code>required bool isEc = 1;</code>
     */
    public boolean hasIsEc() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool isEc = 1;</code>
     */
    public boolean getIsEc() {
      return isEc_;
    }

    public static final int SEGMENTS_FIELD_NUMBER = 2;
    private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo> segments_;
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
     */
    public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo> getSegmentsList() {
      return segments_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
     */
    public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder> 
        getSegmentsOrBuilderList() {
      return segments_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
     */
    public int getSegmentsCount() {
      return segments_.size();
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo getSegments(int index) {
      return segments_.get(index);
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder getSegmentsOrBuilder(
        int index) {
      return segments_.get(index);
    }

    public static final int ECSTATUS_FIELD_NUMBER = 3;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcStatus ecStatus_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcStatus ecStatus = 3 [default = NOT_STARTED];</code>
     */
    public boolean hasEcStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcStatus ecStatus = 3 [default = NOT_STARTED];</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcStatus getEcStatus() {
      return ecStatus_;
    }

    public static final int ECCODESCHEME_FIELD_NUMBER = 4;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme ecCodeScheme_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 4;</code>
     */
    public boolean hasEcCodeScheme() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 4;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme getEcCodeScheme() {
      return ecCodeScheme_;
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 4;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeSchemeOrBuilder getEcCodeSchemeOrBuilder() {
      return ecCodeScheme_;
    }

    public static final int ECRETRYCOUNT_FIELD_NUMBER = 5;
    private int ecRetryCount_;
    /**
     * <code>optional int32 ecRetryCount = 5;</code>
     *
     * <pre>
     * # of ec coding retries on this copy
     * </pre>
     */
    public boolean hasEcRetryCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 ecRetryCount = 5;</code>
     *
     * <pre>
     * # of ec coding retries on this copy
     * </pre>
     */
    public int getEcRetryCount() {
      return ecRetryCount_;
    }

    public static final int ECENCODEPADDINGTOCAPACITY_FIELD_NUMBER = 6;
    private boolean ecEncodePaddingToCapacity_;
    /**
     * <code>optional bool ecEncodePaddingToCapacity = 6;</code>
     *
     * <pre>
     * if padding 0 until chunk capacity
     * </pre>
     */
    public boolean hasEcEncodePaddingToCapacity() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool ecEncodePaddingToCapacity = 6;</code>
     *
     * <pre>
     * if padding 0 until chunk capacity
     * </pre>
     */
    public boolean getEcEncodePaddingToCapacity() {
      return ecEncodePaddingToCapacity_;
    }

    public static final int ECBLOCKSIZE_FIELD_NUMBER = 7;
    private int ecBlockSize_;
    /**
     * <code>optional int32 ecBlockSize = 7;</code>
     *
     * <pre>
     * how many bytes each block occupied physically
     * this is optional because pre-1.2 this field is not exist,
     * but from 1.2 all the ec allocation needs this field set
     * </pre>
     */
    public boolean hasEcBlockSize() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 ecBlockSize = 7;</code>
     *
     * <pre>
     * how many bytes each block occupied physically
     * this is optional because pre-1.2 this field is not exist,
     * but from 1.2 all the ec allocation needs this field set
     * </pre>
     */
    public int getEcBlockSize() {
      return ecBlockSize_;
    }

    public static final int ISCLIENTCREATEDECCOPY_FIELD_NUMBER = 8;
    private boolean isClientCreatedEcCopy_;
    /**
     * <code>optional bool isClientCreatedEcCopy = 8;</code>
     *
     * <pre>
     * true if the ec copy is created by client (BFW)
     * </pre>
     */
    public boolean hasIsClientCreatedEcCopy() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool isClientCreatedEcCopy = 8;</code>
     *
     * <pre>
     * true if the ec copy is created by client (BFW)
     * </pre>
     */
    public boolean getIsClientCreatedEcCopy() {
      return isClientCreatedEcCopy_;
    }

    public static final int ISECENCODEDBYCLIENT_FIELD_NUMBER = 9;
    private boolean isEcEncodedByClient_;
    /**
     * <code>optional bool isEcEncodedByClient = 9 [default = false];</code>
     *
     * <pre>
     * is EC copy encode completed by client (BFW),
     * i.g, client let cm update ec copy status successfully
     * </pre>
     */
    public boolean hasIsEcEncodedByClient() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool isEcEncodedByClient = 9 [default = false];</code>
     *
     * <pre>
     * is EC copy encode completed by client (BFW),
     * i.g, client let cm update ec copy status successfully
     * </pre>
     */
    public boolean getIsEcEncodedByClient() {
      return isEcEncodedByClient_;
    }

    public static final int ISECCOPYFINDSEALLENGTHFAILED_FIELD_NUMBER = 10;
    private boolean isEcCopyFindSealLengthFailed_;
    /**
     * <code>optional bool isEcCopyFindSealLengthFailed = 10;</code>
     *
     * <pre>
     *is EC copy failed in finding seal length
     * </pre>
     */
    public boolean hasIsEcCopyFindSealLengthFailed() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool isEcCopyFindSealLengthFailed = 10;</code>
     *
     * <pre>
     *is EC copy failed in finding seal length
     * </pre>
     */
    public boolean getIsEcCopyFindSealLengthFailed() {
      return isEcCopyFindSealLengthFailed_;
    }

    public static final int HASREDUNDANT_FIELD_NUMBER = 11;
    private boolean hasRedundant_;
    /**
     * <code>optional bool hasRedundant = 11;</code>
     */
    public boolean hasHasRedundant() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool hasRedundant = 11;</code>
     */
    public boolean getHasRedundant() {
      return hasRedundant_;
    }

    private void initFields() {
      isEc_ = false;
      segments_ = java.util.Collections.emptyList();
      ecStatus_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcStatus.NOT_STARTED;
      ecCodeScheme_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.getDefaultInstance();
      ecRetryCount_ = 0;
      ecEncodePaddingToCapacity_ = false;
      ecBlockSize_ = 0;
      isClientCreatedEcCopy_ = false;
      isEcEncodedByClient_ = false;
      isEcCopyFindSealLengthFailed_ = false;
      hasRedundant_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasIsEc()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSegmentsCount(); i++) {
        if (!getSegments(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasEcCodeScheme()) {
        if (!getEcCodeScheme().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, isEc_);
      }
      for (int i = 0; i < segments_.size(); i++) {
        output.writeMessage(2, segments_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(3, ecStatus_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(4, ecCodeScheme_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, ecRetryCount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(6, ecEncodePaddingToCapacity_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, ecBlockSize_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(8, isClientCreatedEcCopy_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(9, isEcEncodedByClient_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(10, isEcCopyFindSealLengthFailed_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBool(11, hasRedundant_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, isEc_);
      }
      for (int i = 0; i < segments_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, segments_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, ecStatus_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, ecCodeScheme_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, ecRetryCount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, ecEncodePaddingToCapacity_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, ecBlockSize_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, isClientCreatedEcCopy_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, isEcEncodedByClient_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, isEcCopyFindSealLengthFailed_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, hasRedundant_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_Copy_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_Copy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSegmentsFieldBuilder();
          getEcCodeSchemeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        isEc_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (segmentsBuilder_ == null) {
          segments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          segmentsBuilder_.clear();
        }
        ecStatus_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcStatus.NOT_STARTED;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (ecCodeSchemeBuilder_ == null) {
          ecCodeScheme_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.getDefaultInstance();
        } else {
          ecCodeSchemeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        ecRetryCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        ecEncodePaddingToCapacity_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        ecBlockSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        isClientCreatedEcCopy_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        isEcEncodedByClient_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        isEcCopyFindSealLengthFailed_ = false;
        bitField0_ = (bitField0_ & ~0x00000200);
        hasRedundant_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_Copy_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.isEc_ = isEc_;
        if (segmentsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            segments_ = java.util.Collections.unmodifiableList(segments_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.segments_ = segments_;
        } else {
          result.segments_ = segmentsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ecStatus_ = ecStatus_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        if (ecCodeSchemeBuilder_ == null) {
          result.ecCodeScheme_ = ecCodeScheme_;
        } else {
          result.ecCodeScheme_ = ecCodeSchemeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.ecRetryCount_ = ecRetryCount_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.ecEncodePaddingToCapacity_ = ecEncodePaddingToCapacity_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.ecBlockSize_ = ecBlockSize_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.isClientCreatedEcCopy_ = isClientCreatedEcCopy_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.isEcEncodedByClient_ = isEcEncodedByClient_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.isEcCopyFindSealLengthFailed_ = isEcCopyFindSealLengthFailed_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.hasRedundant_ = hasRedundant_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.getDefaultInstance()) return this;
        if (other.hasIsEc()) {
          setIsEc(other.getIsEc());
        }
        if (segmentsBuilder_ == null) {
          if (!other.segments_.isEmpty()) {
            if (segments_.isEmpty()) {
              segments_ = other.segments_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSegmentsIsMutable();
              segments_.addAll(other.segments_);
            }
            onChanged();
          }
        } else {
          if (!other.segments_.isEmpty()) {
            if (segmentsBuilder_.isEmpty()) {
              segmentsBuilder_.dispose();
              segmentsBuilder_ = null;
              segments_ = other.segments_;
              bitField0_ = (bitField0_ & ~0x00000002);
              segmentsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSegmentsFieldBuilder() : null;
            } else {
              segmentsBuilder_.addAllMessages(other.segments_);
            }
          }
        }
        if (other.hasEcStatus()) {
          setEcStatus(other.getEcStatus());
        }
        if (other.hasEcCodeScheme()) {
          mergeEcCodeScheme(other.getEcCodeScheme());
        }
        if (other.hasEcRetryCount()) {
          setEcRetryCount(other.getEcRetryCount());
        }
        if (other.hasEcEncodePaddingToCapacity()) {
          setEcEncodePaddingToCapacity(other.getEcEncodePaddingToCapacity());
        }
        if (other.hasEcBlockSize()) {
          setEcBlockSize(other.getEcBlockSize());
        }
        if (other.hasIsClientCreatedEcCopy()) {
          setIsClientCreatedEcCopy(other.getIsClientCreatedEcCopy());
        }
        if (other.hasIsEcEncodedByClient()) {
          setIsEcEncodedByClient(other.getIsEcEncodedByClient());
        }
        if (other.hasIsEcCopyFindSealLengthFailed()) {
          setIsEcCopyFindSealLengthFailed(other.getIsEcCopyFindSealLengthFailed());
        }
        if (other.hasHasRedundant()) {
          setHasRedundant(other.getHasRedundant());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasIsEc()) {
          
          return false;
        }
        for (int i = 0; i < getSegmentsCount(); i++) {
          if (!getSegments(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasEcCodeScheme()) {
          if (!getEcCodeScheme().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean isEc_ ;
      /**
       * <code>required bool isEc = 1;</code>
       */
      public boolean hasIsEc() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool isEc = 1;</code>
       */
      public boolean getIsEc() {
        return isEc_;
      }
      /**
       * <code>required bool isEc = 1;</code>
       */
      public Builder setIsEc(boolean value) {
        bitField0_ |= 0x00000001;
        isEc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool isEc = 1;</code>
       */
      public Builder clearIsEc() {
        bitField0_ = (bitField0_ & ~0x00000001);
        isEc_ = false;
        onChanged();
        return this;
      }

      private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo> segments_ =
        java.util.Collections.emptyList();
      private void ensureSegmentsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          segments_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo>(segments_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder> segmentsBuilder_;

      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo> getSegmentsList() {
        if (segmentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(segments_);
        } else {
          return segmentsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       */
      public int getSegmentsCount() {
        if (segmentsBuilder_ == null) {
          return segments_.size();
        } else {
          return segmentsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo getSegments(int index) {
        if (segmentsBuilder_ == null) {
          return segments_.get(index);
        } else {
          return segmentsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       */
      public Builder setSegments(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo value) {
        if (segmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSegmentsIsMutable();
          segments_.set(index, value);
          onChanged();
        } else {
          segmentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       */
      public Builder setSegments(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder builderForValue) {
        if (segmentsBuilder_ == null) {
          ensureSegmentsIsMutable();
          segments_.set(index, builderForValue.build());
          onChanged();
        } else {
          segmentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       */
      public Builder addSegments(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo value) {
        if (segmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSegmentsIsMutable();
          segments_.add(value);
          onChanged();
        } else {
          segmentsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       */
      public Builder addSegments(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo value) {
        if (segmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSegmentsIsMutable();
          segments_.add(index, value);
          onChanged();
        } else {
          segmentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       */
      public Builder addSegments(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder builderForValue) {
        if (segmentsBuilder_ == null) {
          ensureSegmentsIsMutable();
          segments_.add(builderForValue.build());
          onChanged();
        } else {
          segmentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       */
      public Builder addSegments(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder builderForValue) {
        if (segmentsBuilder_ == null) {
          ensureSegmentsIsMutable();
          segments_.add(index, builderForValue.build());
          onChanged();
        } else {
          segmentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       */
      public Builder addAllSegments(
          java.lang.Iterable<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo> values) {
        if (segmentsBuilder_ == null) {
          ensureSegmentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, segments_);
          onChanged();
        } else {
          segmentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       */
      public Builder clearSegments() {
        if (segmentsBuilder_ == null) {
          segments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          segmentsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       */
      public Builder removeSegments(int index) {
        if (segmentsBuilder_ == null) {
          ensureSegmentsIsMutable();
          segments_.remove(index);
          onChanged();
        } else {
          segmentsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder getSegmentsBuilder(
          int index) {
        return getSegmentsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder getSegmentsOrBuilder(
          int index) {
        if (segmentsBuilder_ == null) {
          return segments_.get(index);  } else {
          return segmentsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       */
      public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder> 
           getSegmentsOrBuilderList() {
        if (segmentsBuilder_ != null) {
          return segmentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(segments_);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder addSegmentsBuilder() {
        return getSegmentsFieldBuilder().addBuilder(
            io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder addSegmentsBuilder(
          int index) {
        return getSegmentsFieldBuilder().addBuilder(
            index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder> 
           getSegmentsBuilderList() {
        return getSegmentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder> 
          getSegmentsFieldBuilder() {
        if (segmentsBuilder_ == null) {
          segmentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder>(
                  segments_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          segments_ = null;
        }
        return segmentsBuilder_;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcStatus ecStatus_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcStatus.NOT_STARTED;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcStatus ecStatus = 3 [default = NOT_STARTED];</code>
       */
      public boolean hasEcStatus() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcStatus ecStatus = 3 [default = NOT_STARTED];</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcStatus getEcStatus() {
        return ecStatus_;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcStatus ecStatus = 3 [default = NOT_STARTED];</code>
       */
      public Builder setEcStatus(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        ecStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcStatus ecStatus = 3 [default = NOT_STARTED];</code>
       */
      public Builder clearEcStatus() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ecStatus_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcStatus.NOT_STARTED;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme ecCodeScheme_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeSchemeOrBuilder> ecCodeSchemeBuilder_;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 4;</code>
       */
      public boolean hasEcCodeScheme() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 4;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme getEcCodeScheme() {
        if (ecCodeSchemeBuilder_ == null) {
          return ecCodeScheme_;
        } else {
          return ecCodeSchemeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 4;</code>
       */
      public Builder setEcCodeScheme(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme value) {
        if (ecCodeSchemeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ecCodeScheme_ = value;
          onChanged();
        } else {
          ecCodeSchemeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 4;</code>
       */
      public Builder setEcCodeScheme(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.Builder builderForValue) {
        if (ecCodeSchemeBuilder_ == null) {
          ecCodeScheme_ = builderForValue.build();
          onChanged();
        } else {
          ecCodeSchemeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 4;</code>
       */
      public Builder mergeEcCodeScheme(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme value) {
        if (ecCodeSchemeBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              ecCodeScheme_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.getDefaultInstance()) {
            ecCodeScheme_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.newBuilder(ecCodeScheme_).mergeFrom(value).buildPartial();
          } else {
            ecCodeScheme_ = value;
          }
          onChanged();
        } else {
          ecCodeSchemeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 4;</code>
       */
      public Builder clearEcCodeScheme() {
        if (ecCodeSchemeBuilder_ == null) {
          ecCodeScheme_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.getDefaultInstance();
          onChanged();
        } else {
          ecCodeSchemeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 4;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.Builder getEcCodeSchemeBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getEcCodeSchemeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 4;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeSchemeOrBuilder getEcCodeSchemeOrBuilder() {
        if (ecCodeSchemeBuilder_ != null) {
          return ecCodeSchemeBuilder_.getMessageOrBuilder();
        } else {
          return ecCodeScheme_;
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeSchemeOrBuilder> 
          getEcCodeSchemeFieldBuilder() {
        if (ecCodeSchemeBuilder_ == null) {
          ecCodeSchemeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeSchemeOrBuilder>(
                  getEcCodeScheme(),
                  getParentForChildren(),
                  isClean());
          ecCodeScheme_ = null;
        }
        return ecCodeSchemeBuilder_;
      }

      private int ecRetryCount_ ;
      /**
       * <code>optional int32 ecRetryCount = 5;</code>
       *
       * <pre>
       * # of ec coding retries on this copy
       * </pre>
       */
      public boolean hasEcRetryCount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 ecRetryCount = 5;</code>
       *
       * <pre>
       * # of ec coding retries on this copy
       * </pre>
       */
      public int getEcRetryCount() {
        return ecRetryCount_;
      }
      /**
       * <code>optional int32 ecRetryCount = 5;</code>
       *
       * <pre>
       * # of ec coding retries on this copy
       * </pre>
       */
      public Builder setEcRetryCount(int value) {
        bitField0_ |= 0x00000010;
        ecRetryCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ecRetryCount = 5;</code>
       *
       * <pre>
       * # of ec coding retries on this copy
       * </pre>
       */
      public Builder clearEcRetryCount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ecRetryCount_ = 0;
        onChanged();
        return this;
      }

      private boolean ecEncodePaddingToCapacity_ ;
      /**
       * <code>optional bool ecEncodePaddingToCapacity = 6;</code>
       *
       * <pre>
       * if padding 0 until chunk capacity
       * </pre>
       */
      public boolean hasEcEncodePaddingToCapacity() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool ecEncodePaddingToCapacity = 6;</code>
       *
       * <pre>
       * if padding 0 until chunk capacity
       * </pre>
       */
      public boolean getEcEncodePaddingToCapacity() {
        return ecEncodePaddingToCapacity_;
      }
      /**
       * <code>optional bool ecEncodePaddingToCapacity = 6;</code>
       *
       * <pre>
       * if padding 0 until chunk capacity
       * </pre>
       */
      public Builder setEcEncodePaddingToCapacity(boolean value) {
        bitField0_ |= 0x00000020;
        ecEncodePaddingToCapacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool ecEncodePaddingToCapacity = 6;</code>
       *
       * <pre>
       * if padding 0 until chunk capacity
       * </pre>
       */
      public Builder clearEcEncodePaddingToCapacity() {
        bitField0_ = (bitField0_ & ~0x00000020);
        ecEncodePaddingToCapacity_ = false;
        onChanged();
        return this;
      }

      private int ecBlockSize_ ;
      /**
       * <code>optional int32 ecBlockSize = 7;</code>
       *
       * <pre>
       * how many bytes each block occupied physically
       * this is optional because pre-1.2 this field is not exist,
       * but from 1.2 all the ec allocation needs this field set
       * </pre>
       */
      public boolean hasEcBlockSize() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 ecBlockSize = 7;</code>
       *
       * <pre>
       * how many bytes each block occupied physically
       * this is optional because pre-1.2 this field is not exist,
       * but from 1.2 all the ec allocation needs this field set
       * </pre>
       */
      public int getEcBlockSize() {
        return ecBlockSize_;
      }
      /**
       * <code>optional int32 ecBlockSize = 7;</code>
       *
       * <pre>
       * how many bytes each block occupied physically
       * this is optional because pre-1.2 this field is not exist,
       * but from 1.2 all the ec allocation needs this field set
       * </pre>
       */
      public Builder setEcBlockSize(int value) {
        bitField0_ |= 0x00000040;
        ecBlockSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ecBlockSize = 7;</code>
       *
       * <pre>
       * how many bytes each block occupied physically
       * this is optional because pre-1.2 this field is not exist,
       * but from 1.2 all the ec allocation needs this field set
       * </pre>
       */
      public Builder clearEcBlockSize() {
        bitField0_ = (bitField0_ & ~0x00000040);
        ecBlockSize_ = 0;
        onChanged();
        return this;
      }

      private boolean isClientCreatedEcCopy_ ;
      /**
       * <code>optional bool isClientCreatedEcCopy = 8;</code>
       *
       * <pre>
       * true if the ec copy is created by client (BFW)
       * </pre>
       */
      public boolean hasIsClientCreatedEcCopy() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool isClientCreatedEcCopy = 8;</code>
       *
       * <pre>
       * true if the ec copy is created by client (BFW)
       * </pre>
       */
      public boolean getIsClientCreatedEcCopy() {
        return isClientCreatedEcCopy_;
      }
      /**
       * <code>optional bool isClientCreatedEcCopy = 8;</code>
       *
       * <pre>
       * true if the ec copy is created by client (BFW)
       * </pre>
       */
      public Builder setIsClientCreatedEcCopy(boolean value) {
        bitField0_ |= 0x00000080;
        isClientCreatedEcCopy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isClientCreatedEcCopy = 8;</code>
       *
       * <pre>
       * true if the ec copy is created by client (BFW)
       * </pre>
       */
      public Builder clearIsClientCreatedEcCopy() {
        bitField0_ = (bitField0_ & ~0x00000080);
        isClientCreatedEcCopy_ = false;
        onChanged();
        return this;
      }

      private boolean isEcEncodedByClient_ ;
      /**
       * <code>optional bool isEcEncodedByClient = 9 [default = false];</code>
       *
       * <pre>
       * is EC copy encode completed by client (BFW),
       * i.g, client let cm update ec copy status successfully
       * </pre>
       */
      public boolean hasIsEcEncodedByClient() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool isEcEncodedByClient = 9 [default = false];</code>
       *
       * <pre>
       * is EC copy encode completed by client (BFW),
       * i.g, client let cm update ec copy status successfully
       * </pre>
       */
      public boolean getIsEcEncodedByClient() {
        return isEcEncodedByClient_;
      }
      /**
       * <code>optional bool isEcEncodedByClient = 9 [default = false];</code>
       *
       * <pre>
       * is EC copy encode completed by client (BFW),
       * i.g, client let cm update ec copy status successfully
       * </pre>
       */
      public Builder setIsEcEncodedByClient(boolean value) {
        bitField0_ |= 0x00000100;
        isEcEncodedByClient_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isEcEncodedByClient = 9 [default = false];</code>
       *
       * <pre>
       * is EC copy encode completed by client (BFW),
       * i.g, client let cm update ec copy status successfully
       * </pre>
       */
      public Builder clearIsEcEncodedByClient() {
        bitField0_ = (bitField0_ & ~0x00000100);
        isEcEncodedByClient_ = false;
        onChanged();
        return this;
      }

      private boolean isEcCopyFindSealLengthFailed_ ;
      /**
       * <code>optional bool isEcCopyFindSealLengthFailed = 10;</code>
       *
       * <pre>
       *is EC copy failed in finding seal length
       * </pre>
       */
      public boolean hasIsEcCopyFindSealLengthFailed() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bool isEcCopyFindSealLengthFailed = 10;</code>
       *
       * <pre>
       *is EC copy failed in finding seal length
       * </pre>
       */
      public boolean getIsEcCopyFindSealLengthFailed() {
        return isEcCopyFindSealLengthFailed_;
      }
      /**
       * <code>optional bool isEcCopyFindSealLengthFailed = 10;</code>
       *
       * <pre>
       *is EC copy failed in finding seal length
       * </pre>
       */
      public Builder setIsEcCopyFindSealLengthFailed(boolean value) {
        bitField0_ |= 0x00000200;
        isEcCopyFindSealLengthFailed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isEcCopyFindSealLengthFailed = 10;</code>
       *
       * <pre>
       *is EC copy failed in finding seal length
       * </pre>
       */
      public Builder clearIsEcCopyFindSealLengthFailed() {
        bitField0_ = (bitField0_ & ~0x00000200);
        isEcCopyFindSealLengthFailed_ = false;
        onChanged();
        return this;
      }

      private boolean hasRedundant_ ;
      /**
       * <code>optional bool hasRedundant = 11;</code>
       */
      public boolean hasHasRedundant() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool hasRedundant = 11;</code>
       */
      public boolean getHasRedundant() {
        return hasRedundant_;
      }
      /**
       * <code>optional bool hasRedundant = 11;</code>
       */
      public Builder setHasRedundant(boolean value) {
        bitField0_ |= 0x00000400;
        hasRedundant_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hasRedundant = 11;</code>
       */
      public Builder clearHasRedundant() {
        bitField0_ = (bitField0_ & ~0x00000400);
        hasRedundant_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy)
    }

    static {
      defaultInstance = new Copy(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy)
  }

  public interface RangeBasedChunkInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 startOffset = 1;</code>
     *
     * <pre>
     * physical range in chunk
     * </pre>
     */
    boolean hasStartOffset();
    /**
     * <code>required int32 startOffset = 1;</code>
     *
     * <pre>
     * physical range in chunk
     * </pre>
     */
    int getStartOffset();

    /**
     * <code>required int32 endOffset = 2;</code>
     */
    boolean hasEndOffset();
    /**
     * <code>required int32 endOffset = 2;</code>
     */
    int getEndOffset();

    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkType type = 3;</code>
     *
     * <pre>
     * chunk type of this range: COPY/ENCODED
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkType type = 3;</code>
     *
     * <pre>
     * chunk type of this range: COPY/ENCODED
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType getType();

    /**
     * <code>optional string parityChunk = 4;</code>
     *
     * <pre>
     * if XOR by-range encoded, partity chunk id
     * </pre>
     */
    boolean hasParityChunk();
    /**
     * <code>optional string parityChunk = 4;</code>
     *
     * <pre>
     * if XOR by-range encoded, partity chunk id
     * </pre>
     */
    java.lang.String getParityChunk();
    /**
     * <code>optional string parityChunk = 4;</code>
     *
     * <pre>
     * if XOR by-range encoded, partity chunk id
     * </pre>
     */
    com.google.protobuf.ByteString
        getParityChunkBytes();

    /**
     * <code>required string encodedChunk = 5;</code>
     *
     * <pre>
     * if shipped XOR range, encoded chunk id
     * </pre>
     */
    boolean hasEncodedChunk();
    /**
     * <code>required string encodedChunk = 5;</code>
     *
     * <pre>
     * if shipped XOR range, encoded chunk id
     * </pre>
     */
    java.lang.String getEncodedChunk();
    /**
     * <code>required string encodedChunk = 5;</code>
     *
     * <pre>
     * if shipped XOR range, encoded chunk id
     * </pre>
     */
    com.google.protobuf.ByteString
        getEncodedChunkBytes();

    /**
     * <code>required int32 targetStartOffset = 6;</code>
     *
     * <pre>
     * target range in partityChunk/encodedChunks
     * </pre>
     */
    boolean hasTargetStartOffset();
    /**
     * <code>required int32 targetStartOffset = 6;</code>
     *
     * <pre>
     * target range in partityChunk/encodedChunks
     * </pre>
     */
    int getTargetStartOffset();

    /**
     * <code>required int32 targetEndOffset = 7;</code>
     */
    boolean hasTargetEndOffset();
    /**
     * <code>required int32 targetEndOffset = 7;</code>
     */
    int getTargetEndOffset();

    /**
     * <code>optional int32 virtualOffset = 8;</code>
     *
     * <pre>
     * between virtualOffset and endOffset the data is all 0's
     * </pre>
     */
    boolean hasVirtualOffset();
    /**
     * <code>optional int32 virtualOffset = 8;</code>
     *
     * <pre>
     * between virtualOffset and endOffset the data is all 0's
     * </pre>
     */
    int getVirtualOffset();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo}
   */
  public static final class RangeBasedChunkInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo)
      RangeBasedChunkInfoOrBuilder {
    // Use RangeBasedChunkInfo.newBuilder() to construct.
    private RangeBasedChunkInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RangeBasedChunkInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RangeBasedChunkInfo defaultInstance;
    public static RangeBasedChunkInfo getDefaultInstance() {
      return defaultInstance;
    }

    public RangeBasedChunkInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RangeBasedChunkInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              startOffset_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              endOffset_ = input.readInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                type_ = value;
              }
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              parityChunk_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              encodedChunk_ = bs;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              targetStartOffset_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              targetEndOffset_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              virtualOffset_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeBasedChunkInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeBasedChunkInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<RangeBasedChunkInfo> PARSER =
        new com.google.protobuf.AbstractParser<RangeBasedChunkInfo>() {
      public RangeBasedChunkInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RangeBasedChunkInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RangeBasedChunkInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STARTOFFSET_FIELD_NUMBER = 1;
    private int startOffset_;
    /**
     * <code>required int32 startOffset = 1;</code>
     *
     * <pre>
     * physical range in chunk
     * </pre>
     */
    public boolean hasStartOffset() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 startOffset = 1;</code>
     *
     * <pre>
     * physical range in chunk
     * </pre>
     */
    public int getStartOffset() {
      return startOffset_;
    }

    public static final int ENDOFFSET_FIELD_NUMBER = 2;
    private int endOffset_;
    /**
     * <code>required int32 endOffset = 2;</code>
     */
    public boolean hasEndOffset() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 endOffset = 2;</code>
     */
    public int getEndOffset() {
      return endOffset_;
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType type_;
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkType type = 3;</code>
     *
     * <pre>
     * chunk type of this range: COPY/ENCODED
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkType type = 3;</code>
     *
     * <pre>
     * chunk type of this range: COPY/ENCODED
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType getType() {
      return type_;
    }

    public static final int PARITYCHUNK_FIELD_NUMBER = 4;
    private java.lang.Object parityChunk_;
    /**
     * <code>optional string parityChunk = 4;</code>
     *
     * <pre>
     * if XOR by-range encoded, partity chunk id
     * </pre>
     */
    public boolean hasParityChunk() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string parityChunk = 4;</code>
     *
     * <pre>
     * if XOR by-range encoded, partity chunk id
     * </pre>
     */
    public java.lang.String getParityChunk() {
      java.lang.Object ref = parityChunk_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          parityChunk_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string parityChunk = 4;</code>
     *
     * <pre>
     * if XOR by-range encoded, partity chunk id
     * </pre>
     */
    public com.google.protobuf.ByteString
        getParityChunkBytes() {
      java.lang.Object ref = parityChunk_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        parityChunk_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENCODEDCHUNK_FIELD_NUMBER = 5;
    private java.lang.Object encodedChunk_;
    /**
     * <code>required string encodedChunk = 5;</code>
     *
     * <pre>
     * if shipped XOR range, encoded chunk id
     * </pre>
     */
    public boolean hasEncodedChunk() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required string encodedChunk = 5;</code>
     *
     * <pre>
     * if shipped XOR range, encoded chunk id
     * </pre>
     */
    public java.lang.String getEncodedChunk() {
      java.lang.Object ref = encodedChunk_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          encodedChunk_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string encodedChunk = 5;</code>
     *
     * <pre>
     * if shipped XOR range, encoded chunk id
     * </pre>
     */
    public com.google.protobuf.ByteString
        getEncodedChunkBytes() {
      java.lang.Object ref = encodedChunk_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        encodedChunk_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TARGETSTARTOFFSET_FIELD_NUMBER = 6;
    private int targetStartOffset_;
    /**
     * <code>required int32 targetStartOffset = 6;</code>
     *
     * <pre>
     * target range in partityChunk/encodedChunks
     * </pre>
     */
    public boolean hasTargetStartOffset() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 targetStartOffset = 6;</code>
     *
     * <pre>
     * target range in partityChunk/encodedChunks
     * </pre>
     */
    public int getTargetStartOffset() {
      return targetStartOffset_;
    }

    public static final int TARGETENDOFFSET_FIELD_NUMBER = 7;
    private int targetEndOffset_;
    /**
     * <code>required int32 targetEndOffset = 7;</code>
     */
    public boolean hasTargetEndOffset() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 targetEndOffset = 7;</code>
     */
    public int getTargetEndOffset() {
      return targetEndOffset_;
    }

    public static final int VIRTUALOFFSET_FIELD_NUMBER = 8;
    private int virtualOffset_;
    /**
     * <code>optional int32 virtualOffset = 8;</code>
     *
     * <pre>
     * between virtualOffset and endOffset the data is all 0's
     * </pre>
     */
    public boolean hasVirtualOffset() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 virtualOffset = 8;</code>
     *
     * <pre>
     * between virtualOffset and endOffset the data is all 0's
     * </pre>
     */
    public int getVirtualOffset() {
      return virtualOffset_;
    }

    private void initFields() {
      startOffset_ = 0;
      endOffset_ = 0;
      type_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType.LOCAL;
      parityChunk_ = "";
      encodedChunk_ = "";
      targetStartOffset_ = 0;
      targetEndOffset_ = 0;
      virtualOffset_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStartOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEndOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEncodedChunk()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTargetStartOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTargetEndOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, startOffset_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, endOffset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, type_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getParityChunkBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getEncodedChunkBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, targetStartOffset_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, targetEndOffset_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, virtualOffset_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, startOffset_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, endOffset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, type_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getParityChunkBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getEncodedChunkBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, targetStartOffset_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, targetEndOffset_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, virtualOffset_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeBasedChunkInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeBasedChunkInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        startOffset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        endOffset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType.LOCAL;
        bitField0_ = (bitField0_ & ~0x00000004);
        parityChunk_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        encodedChunk_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        targetStartOffset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        targetEndOffset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        virtualOffset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeBasedChunkInfo_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.startOffset_ = startOffset_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.endOffset_ = endOffset_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.parityChunk_ = parityChunk_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.encodedChunk_ = encodedChunk_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.targetStartOffset_ = targetStartOffset_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.targetEndOffset_ = targetEndOffset_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.virtualOffset_ = virtualOffset_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo.getDefaultInstance()) return this;
        if (other.hasStartOffset()) {
          setStartOffset(other.getStartOffset());
        }
        if (other.hasEndOffset()) {
          setEndOffset(other.getEndOffset());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasParityChunk()) {
          bitField0_ |= 0x00000008;
          parityChunk_ = other.parityChunk_;
          onChanged();
        }
        if (other.hasEncodedChunk()) {
          bitField0_ |= 0x00000010;
          encodedChunk_ = other.encodedChunk_;
          onChanged();
        }
        if (other.hasTargetStartOffset()) {
          setTargetStartOffset(other.getTargetStartOffset());
        }
        if (other.hasTargetEndOffset()) {
          setTargetEndOffset(other.getTargetEndOffset());
        }
        if (other.hasVirtualOffset()) {
          setVirtualOffset(other.getVirtualOffset());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStartOffset()) {
          
          return false;
        }
        if (!hasEndOffset()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasEncodedChunk()) {
          
          return false;
        }
        if (!hasTargetStartOffset()) {
          
          return false;
        }
        if (!hasTargetEndOffset()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int startOffset_ ;
      /**
       * <code>required int32 startOffset = 1;</code>
       *
       * <pre>
       * physical range in chunk
       * </pre>
       */
      public boolean hasStartOffset() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 startOffset = 1;</code>
       *
       * <pre>
       * physical range in chunk
       * </pre>
       */
      public int getStartOffset() {
        return startOffset_;
      }
      /**
       * <code>required int32 startOffset = 1;</code>
       *
       * <pre>
       * physical range in chunk
       * </pre>
       */
      public Builder setStartOffset(int value) {
        bitField0_ |= 0x00000001;
        startOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 startOffset = 1;</code>
       *
       * <pre>
       * physical range in chunk
       * </pre>
       */
      public Builder clearStartOffset() {
        bitField0_ = (bitField0_ & ~0x00000001);
        startOffset_ = 0;
        onChanged();
        return this;
      }

      private int endOffset_ ;
      /**
       * <code>required int32 endOffset = 2;</code>
       */
      public boolean hasEndOffset() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 endOffset = 2;</code>
       */
      public int getEndOffset() {
        return endOffset_;
      }
      /**
       * <code>required int32 endOffset = 2;</code>
       */
      public Builder setEndOffset(int value) {
        bitField0_ |= 0x00000002;
        endOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 endOffset = 2;</code>
       */
      public Builder clearEndOffset() {
        bitField0_ = (bitField0_ & ~0x00000002);
        endOffset_ = 0;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType type_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType.LOCAL;
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkType type = 3;</code>
       *
       * <pre>
       * chunk type of this range: COPY/ENCODED
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkType type = 3;</code>
       *
       * <pre>
       * chunk type of this range: COPY/ENCODED
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType getType() {
        return type_;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkType type = 3;</code>
       *
       * <pre>
       * chunk type of this range: COPY/ENCODED
       * </pre>
       */
      public Builder setType(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkType type = 3;</code>
       *
       * <pre>
       * chunk type of this range: COPY/ENCODED
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType.LOCAL;
        onChanged();
        return this;
      }

      private java.lang.Object parityChunk_ = "";
      /**
       * <code>optional string parityChunk = 4;</code>
       *
       * <pre>
       * if XOR by-range encoded, partity chunk id
       * </pre>
       */
      public boolean hasParityChunk() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string parityChunk = 4;</code>
       *
       * <pre>
       * if XOR by-range encoded, partity chunk id
       * </pre>
       */
      public java.lang.String getParityChunk() {
        java.lang.Object ref = parityChunk_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            parityChunk_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string parityChunk = 4;</code>
       *
       * <pre>
       * if XOR by-range encoded, partity chunk id
       * </pre>
       */
      public com.google.protobuf.ByteString
          getParityChunkBytes() {
        java.lang.Object ref = parityChunk_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          parityChunk_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string parityChunk = 4;</code>
       *
       * <pre>
       * if XOR by-range encoded, partity chunk id
       * </pre>
       */
      public Builder setParityChunk(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        parityChunk_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string parityChunk = 4;</code>
       *
       * <pre>
       * if XOR by-range encoded, partity chunk id
       * </pre>
       */
      public Builder clearParityChunk() {
        bitField0_ = (bitField0_ & ~0x00000008);
        parityChunk_ = getDefaultInstance().getParityChunk();
        onChanged();
        return this;
      }
      /**
       * <code>optional string parityChunk = 4;</code>
       *
       * <pre>
       * if XOR by-range encoded, partity chunk id
       * </pre>
       */
      public Builder setParityChunkBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        parityChunk_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object encodedChunk_ = "";
      /**
       * <code>required string encodedChunk = 5;</code>
       *
       * <pre>
       * if shipped XOR range, encoded chunk id
       * </pre>
       */
      public boolean hasEncodedChunk() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required string encodedChunk = 5;</code>
       *
       * <pre>
       * if shipped XOR range, encoded chunk id
       * </pre>
       */
      public java.lang.String getEncodedChunk() {
        java.lang.Object ref = encodedChunk_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            encodedChunk_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string encodedChunk = 5;</code>
       *
       * <pre>
       * if shipped XOR range, encoded chunk id
       * </pre>
       */
      public com.google.protobuf.ByteString
          getEncodedChunkBytes() {
        java.lang.Object ref = encodedChunk_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          encodedChunk_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string encodedChunk = 5;</code>
       *
       * <pre>
       * if shipped XOR range, encoded chunk id
       * </pre>
       */
      public Builder setEncodedChunk(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        encodedChunk_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string encodedChunk = 5;</code>
       *
       * <pre>
       * if shipped XOR range, encoded chunk id
       * </pre>
       */
      public Builder clearEncodedChunk() {
        bitField0_ = (bitField0_ & ~0x00000010);
        encodedChunk_ = getDefaultInstance().getEncodedChunk();
        onChanged();
        return this;
      }
      /**
       * <code>required string encodedChunk = 5;</code>
       *
       * <pre>
       * if shipped XOR range, encoded chunk id
       * </pre>
       */
      public Builder setEncodedChunkBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        encodedChunk_ = value;
        onChanged();
        return this;
      }

      private int targetStartOffset_ ;
      /**
       * <code>required int32 targetStartOffset = 6;</code>
       *
       * <pre>
       * target range in partityChunk/encodedChunks
       * </pre>
       */
      public boolean hasTargetStartOffset() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 targetStartOffset = 6;</code>
       *
       * <pre>
       * target range in partityChunk/encodedChunks
       * </pre>
       */
      public int getTargetStartOffset() {
        return targetStartOffset_;
      }
      /**
       * <code>required int32 targetStartOffset = 6;</code>
       *
       * <pre>
       * target range in partityChunk/encodedChunks
       * </pre>
       */
      public Builder setTargetStartOffset(int value) {
        bitField0_ |= 0x00000020;
        targetStartOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 targetStartOffset = 6;</code>
       *
       * <pre>
       * target range in partityChunk/encodedChunks
       * </pre>
       */
      public Builder clearTargetStartOffset() {
        bitField0_ = (bitField0_ & ~0x00000020);
        targetStartOffset_ = 0;
        onChanged();
        return this;
      }

      private int targetEndOffset_ ;
      /**
       * <code>required int32 targetEndOffset = 7;</code>
       */
      public boolean hasTargetEndOffset() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 targetEndOffset = 7;</code>
       */
      public int getTargetEndOffset() {
        return targetEndOffset_;
      }
      /**
       * <code>required int32 targetEndOffset = 7;</code>
       */
      public Builder setTargetEndOffset(int value) {
        bitField0_ |= 0x00000040;
        targetEndOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 targetEndOffset = 7;</code>
       */
      public Builder clearTargetEndOffset() {
        bitField0_ = (bitField0_ & ~0x00000040);
        targetEndOffset_ = 0;
        onChanged();
        return this;
      }

      private int virtualOffset_ ;
      /**
       * <code>optional int32 virtualOffset = 8;</code>
       *
       * <pre>
       * between virtualOffset and endOffset the data is all 0's
       * </pre>
       */
      public boolean hasVirtualOffset() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 virtualOffset = 8;</code>
       *
       * <pre>
       * between virtualOffset and endOffset the data is all 0's
       * </pre>
       */
      public int getVirtualOffset() {
        return virtualOffset_;
      }
      /**
       * <code>optional int32 virtualOffset = 8;</code>
       *
       * <pre>
       * between virtualOffset and endOffset the data is all 0's
       * </pre>
       */
      public Builder setVirtualOffset(int value) {
        bitField0_ |= 0x00000080;
        virtualOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 virtualOffset = 8;</code>
       *
       * <pre>
       * between virtualOffset and endOffset the data is all 0's
       * </pre>
       */
      public Builder clearVirtualOffset() {
        bitField0_ = (bitField0_ & ~0x00000080);
        virtualOffset_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo)
    }

    static {
      defaultInstance = new RangeBasedChunkInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo)
  }

  public interface ChunkInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkStatus status = 1;</code>
     */
    boolean hasStatus();
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkStatus status = 1;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkStatus getStatus();

    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDataType dataType = 2;</code>
     */
    boolean hasDataType();
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDataType dataType = 2;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType getDataType();

    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkType type = 3;</code>
     */
    boolean hasType();
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkType type = 3;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType getType();

    /**
     * <code>optional string repGroup = 4;</code>
     *
     * <pre>
     * replication group
     * </pre>
     */
    boolean hasRepGroup();
    /**
     * <code>optional string repGroup = 4;</code>
     *
     * <pre>
     * replication group
     * </pre>
     */
    java.lang.String getRepGroup();
    /**
     * <code>optional string repGroup = 4;</code>
     *
     * <pre>
     * replication group
     * </pre>
     */
    com.google.protobuf.ByteString
        getRepGroupBytes();

    /**
     * <code>optional string primary = 5;</code>
     *
     * <pre>
     * zone of primary, present if type is REMOTE, COPY or ENCODED
     * </pre>
     */
    boolean hasPrimary();
    /**
     * <code>optional string primary = 5;</code>
     *
     * <pre>
     * zone of primary, present if type is REMOTE, COPY or ENCODED
     * </pre>
     */
    java.lang.String getPrimary();
    /**
     * <code>optional string primary = 5;</code>
     *
     * <pre>
     * zone of primary, present if type is REMOTE, COPY or ENCODED
     * </pre>
     */
    com.google.protobuf.ByteString
        getPrimaryBytes();

    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
     *
     * <pre>
     * zone of secondary, present if type is LOCAL or REMOTE
     * </pre>
     */
    java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair> 
        getSecondariesList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
     *
     * <pre>
     * zone of secondary, present if type is LOCAL or REMOTE
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair getSecondaries(int index);
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
     *
     * <pre>
     * zone of secondary, present if type is LOCAL or REMOTE
     * </pre>
     */
    int getSecondariesCount();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
     *
     * <pre>
     * zone of secondary, present if type is LOCAL or REMOTE
     * </pre>
     */
    java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPairOrBuilder> 
        getSecondariesOrBuilderList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
     *
     * <pre>
     * zone of secondary, present if type is LOCAL or REMOTE
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPairOrBuilder getSecondariesOrBuilder(
        int index);

    /**
     * <code>optional string parityChunk = 7;</code>
     *
     * <pre>
     * parity chunk id, present if type is ENCODED
     * </pre>
     */
    boolean hasParityChunk();
    /**
     * <code>optional string parityChunk = 7;</code>
     *
     * <pre>
     * parity chunk id, present if type is ENCODED
     * </pre>
     */
    java.lang.String getParityChunk();
    /**
     * <code>optional string parityChunk = 7;</code>
     *
     * <pre>
     * parity chunk id, present if type is ENCODED
     * </pre>
     */
    com.google.protobuf.ByteString
        getParityChunkBytes();

    /**
     * <code>repeated string encodedChunks = 8;</code>
     *
     * <pre>
     * list of encoded chunk ids, present if type is PARITY
     * </pre>
     */
    com.google.protobuf.ProtocolStringList
        getEncodedChunksList();
    /**
     * <code>repeated string encodedChunks = 8;</code>
     *
     * <pre>
     * list of encoded chunk ids, present if type is PARITY
     * </pre>
     */
    int getEncodedChunksCount();
    /**
     * <code>repeated string encodedChunks = 8;</code>
     *
     * <pre>
     * list of encoded chunk ids, present if type is PARITY
     * </pre>
     */
    java.lang.String getEncodedChunks(int index);
    /**
     * <code>repeated string encodedChunks = 8;</code>
     *
     * <pre>
     * list of encoded chunk ids, present if type is PARITY
     * </pre>
     */
    com.google.protobuf.ByteString
        getEncodedChunksBytes(int index);

    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
     *
     * <pre>
     * copies of chunk data, present if type is LOCAL, COPY or PARITY;
     * if type is REMOTE or ENCODED, present only when there is cached data
     * </pre>
     */
    java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy> 
        getCopiesList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
     *
     * <pre>
     * copies of chunk data, present if type is LOCAL, COPY or PARITY;
     * if type is REMOTE or ENCODED, present only when there is cached data
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy getCopies(int index);
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
     *
     * <pre>
     * copies of chunk data, present if type is LOCAL, COPY or PARITY;
     * if type is REMOTE or ENCODED, present only when there is cached data
     * </pre>
     */
    int getCopiesCount();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
     *
     * <pre>
     * copies of chunk data, present if type is LOCAL, COPY or PARITY;
     * if type is REMOTE or ENCODED, present only when there is cached data
     * </pre>
     */
    java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder> 
        getCopiesOrBuilderList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
     *
     * <pre>
     * copies of chunk data, present if type is LOCAL, COPY or PARITY;
     * if type is REMOTE or ENCODED, present only when there is cached data
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder getCopiesOrBuilder(
        int index);

    /**
     * <code>optional int32 capacity = 10;</code>
     *
     * <pre>
     * indicate the capacity of chunk, for file access capacity is -1 (unlimited)
     * </pre>
     */
    boolean hasCapacity();
    /**
     * <code>optional int32 capacity = 10;</code>
     *
     * <pre>
     * indicate the capacity of chunk, for file access capacity is -1 (unlimited)
     * </pre>
     */
    int getCapacity();

    /**
     * <code>optional int32 sealedLength = 11;</code>
     */
    boolean hasSealedLength();
    /**
     * <code>optional int32 sealedLength = 11;</code>
     */
    int getSealedLength();

    /**
     * <code>optional int64 autoSealTime = 12;</code>
     *
     * <pre>
     * when the chunk should be automatically sealed (due to timeout)
     * only present if chunk is ACTIVE
     * </pre>
     */
    boolean hasAutoSealTime();
    /**
     * <code>optional int64 autoSealTime = 12;</code>
     *
     * <pre>
     * when the chunk should be automatically sealed (due to timeout)
     * only present if chunk is ACTIVE
     * </pre>
     */
    long getAutoSealTime();

    /**
     * <code>optional int64 sealedTime = 13;</code>
     *
     * <pre>
     * chunk sealed time, only present if chunk is sealed
     * </pre>
     */
    boolean hasSealedTime();
    /**
     * <code>optional int64 sealedTime = 13;</code>
     *
     * <pre>
     * chunk sealed time, only present if chunk is sealed
     * </pre>
     */
    long getSealedTime();

    /**
     * <code>optional bool isEcEncoded = 14;</code>
     *
     * <pre>
     * if the chunk has been EC encoded, missing means false
     * </pre>
     */
    boolean hasIsEcEncoded();
    /**
     * <code>optional bool isEcEncoded = 14;</code>
     *
     * <pre>
     * if the chunk has been EC encoded, missing means false
     * </pre>
     */
    boolean getIsEcEncoded();

    /**
     * <code>optional bool shouldSeal = 15;</code>
     *
     * <pre>
     *a flag to indicate whether should reject lease extend request
     * </pre>
     */
    boolean hasShouldSeal();
    /**
     * <code>optional bool shouldSeal = 15;</code>
     *
     * <pre>
     *a flag to indicate whether should reject lease extend request
     * </pre>
     */
    boolean getShouldSeal();

    /**
     * <code>required int64 sequenceNumber = 16;</code>
     */
    boolean hasSequenceNumber();
    /**
     * <code>required int64 sequenceNumber = 16;</code>
     */
    long getSequenceNumber();

    /**
     * <code>required int64 minNotSealedSequenceNumber = 17;</code>
     */
    boolean hasMinNotSealedSequenceNumber();
    /**
     * <code>required int64 minNotSealedSequenceNumber = 17;</code>
     */
    long getMinNotSealedSequenceNumber();

    /**
     * <code>optional string checksum = 18;</code>
     */
    boolean hasChecksum();
    /**
     * <code>optional string checksum = 18;</code>
     */
    java.lang.String getChecksum();
    /**
     * <code>optional string checksum = 18;</code>
     */
    com.google.protobuf.ByteString
        getChecksumBytes();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo shadow = 19;</code>
     *
     * <pre>
     * shadow chunk info that could replace the current one later
     * </pre>
     */
    boolean hasShadow();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo shadow = 19;</code>
     *
     * <pre>
     * shadow chunk info that could replace the current one later
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo getShadow();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo shadow = 19;</code>
     *
     * <pre>
     * shadow chunk info that could replace the current one later
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder getShadowOrBuilder();

    /**
     * <code>optional bool isEcRetiring = 20;</code>
     *
     * <pre>
     * if the chunk is being transformed from ec back to 3 copies
     * </pre>
     */
    boolean hasIsEcRetiring();
    /**
     * <code>optional bool isEcRetiring = 20;</code>
     *
     * <pre>
     * if the chunk is being transformed from ec back to 3 copies
     * </pre>
     */
    boolean getIsEcRetiring();

    /**
     * <code>optional bool skipRepoGc = 21;</code>
     *
     * <pre>
     * skip repo gc will be set when repo copy chunk is promoted to local
     * </pre>
     */
    boolean hasSkipRepoGc();
    /**
     * <code>optional bool skipRepoGc = 21;</code>
     *
     * <pre>
     * skip repo gc will be set when repo copy chunk is promoted to local
     * </pre>
     */
    boolean getSkipRepoGc();

    /**
     * <code>optional bool noBlockLevelVerification = 22;</code>
     *
     * <pre>
     *the chunk doesn't include block-level verification like file ingestion chunk
     * </pre>
     */
    boolean hasNoBlockLevelVerification();
    /**
     * <code>optional bool noBlockLevelVerification = 22;</code>
     *
     * <pre>
     *the chunk doesn't include block-level verification like file ingestion chunk
     * </pre>
     */
    boolean getNoBlockLevelVerification();

    /**
     * <code>optional int64 lastAccessTime = 23;</code>
     *
     * <pre>
     * last access time (updated with very low frequency)
     * TODO: shall this also be used to guide the EC coding?
     * for REMOTE chunk type this is updated by remote chunk cache lazily
     * </pre>
     */
    boolean hasLastAccessTime();
    /**
     * <code>optional int64 lastAccessTime = 23;</code>
     *
     * <pre>
     * last access time (updated with very low frequency)
     * TODO: shall this also be used to guide the EC coding?
     * for REMOTE chunk type this is updated by remote chunk cache lazily
     * </pre>
     */
    long getLastAccessTime();

    /**
     * <code>optional int32 lastKnownLength = 24;</code>
     *
     * <pre>
     * client may report last known length of the chunk
     * in chunk lease extension message
     * This reduces for e.g. journal replay time
     * </pre>
     */
    boolean hasLastKnownLength();
    /**
     * <code>optional int32 lastKnownLength = 24;</code>
     *
     * <pre>
     * client may report last known length of the chunk
     * in chunk lease extension message
     * This reduces for e.g. journal replay time
     * </pre>
     */
    int getLastKnownLength();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RepoChunkType repoChunkType = 25;</code>
     *
     * <pre>
     * all the repo chunks should have this field set
     * </pre>
     */
    boolean hasRepoChunkType();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RepoChunkType repoChunkType = 25;</code>
     *
     * <pre>
     * all the repo chunks should have this field set
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RepoChunkType getRepoChunkType();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo shadowCopy = 26;</code>
     *
     * <pre>
     * if set, file will be truncated to expected length of Copies
     * specifically used for vnest journal partial write vs. corruption checking
     * </pre>
     */
    boolean hasShadowCopy();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo shadowCopy = 26;</code>
     *
     * <pre>
     * if set, file will be truncated to expected length of Copies
     * specifically used for vnest journal partial write vs. corruption checking
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo getShadowCopy();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo shadowCopy = 26;</code>
     *
     * <pre>
     * if set, file will be truncated to expected length of Copies
     * specifically used for vnest journal partial write vs. corruption checking
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder getShadowCopyOrBuilder();

    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
     *
     * <pre>
     * copies of chunk data, present if type is REMOTE;
     * present only when unsealed geo replication is ongoing
     * </pre>
     */
    java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy> 
        getGeoCopiesList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
     *
     * <pre>
     * copies of chunk data, present if type is REMOTE;
     * present only when unsealed geo replication is ongoing
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy getGeoCopies(int index);
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
     *
     * <pre>
     * copies of chunk data, present if type is REMOTE;
     * present only when unsealed geo replication is ongoing
     * </pre>
     */
    int getGeoCopiesCount();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
     *
     * <pre>
     * copies of chunk data, present if type is REMOTE;
     * present only when unsealed geo replication is ongoing
     * </pre>
     */
    java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder> 
        getGeoCopiesOrBuilderList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
     *
     * <pre>
     * copies of chunk data, present if type is REMOTE;
     * present only when unsealed geo replication is ongoing
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder getGeoCopiesOrBuilder(
        int index);

    /**
     * <code>optional uint64 geoTrackTime = 28;</code>
     *
     * <pre>
     *when geo track task should be invoke to do the final geo check
     * </pre>
     */
    boolean hasGeoTrackTime();
    /**
     * <code>optional uint64 geoTrackTime = 28;</code>
     *
     * <pre>
     *when geo track task should be invoke to do the final geo check
     * </pre>
     */
    long getGeoTrackTime();

    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
     *
     * <pre>
     *geo write progress
     *journal chunk may have multiple progress as it should be replicated to multi zone
     * </pre>
     */
    java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress> 
        getGeoProgressList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
     *
     * <pre>
     *geo write progress
     *journal chunk may have multiple progress as it should be replicated to multi zone
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress getGeoProgress(int index);
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
     *
     * <pre>
     *geo write progress
     *journal chunk may have multiple progress as it should be replicated to multi zone
     * </pre>
     */
    int getGeoProgressCount();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
     *
     * <pre>
     *geo write progress
     *journal chunk may have multiple progress as it should be replicated to multi zone
     * </pre>
     */
    java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgressOrBuilder> 
        getGeoProgressOrBuilderList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
     *
     * <pre>
     *geo write progress
     *journal chunk may have multiple progress as it should be replicated to multi zone
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgressOrBuilder getGeoProgressOrBuilder(
        int index);

    /**
     * <code>optional string originalPrimary = 30;</code>
     *
     * <pre>
     *Original primary zone of the chunk; Set when a COPY promoted to LOCAL after failover
     * </pre>
     */
    boolean hasOriginalPrimary();
    /**
     * <code>optional string originalPrimary = 30;</code>
     *
     * <pre>
     *Original primary zone of the chunk; Set when a COPY promoted to LOCAL after failover
     * </pre>
     */
    java.lang.String getOriginalPrimary();
    /**
     * <code>optional string originalPrimary = 30;</code>
     *
     * <pre>
     *Original primary zone of the chunk; Set when a COPY promoted to LOCAL after failover
     * </pre>
     */
    com.google.protobuf.ByteString
        getOriginalPrimaryBytes();

    /**
     * <code>optional int64 deletedTime = 31;</code>
     *
     * <pre>
     * chunk deleted time, only present if chunk is in deleted state
     * </pre>
     */
    boolean hasDeletedTime();
    /**
     * <code>optional int64 deletedTime = 31;</code>
     *
     * <pre>
     * chunk deleted time, only present if chunk is in deleted state
     * </pre>
     */
    long getDeletedTime();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCustomState customState = 32;</code>
     *
     * <pre>
     * partial Gc task status
     * </pre>
     */
    boolean hasCustomState();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCustomState customState = 32;</code>
     *
     * <pre>
     * partial Gc task status
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCustomState getCustomState();

    /**
     * <code>optional string failoverZone = 33;</code>
     *
     * <pre>
     * failover zone
     * </pre>
     */
    boolean hasFailoverZone();
    /**
     * <code>optional string failoverZone = 33;</code>
     *
     * <pre>
     * failover zone
     * </pre>
     */
    java.lang.String getFailoverZone();
    /**
     * <code>optional string failoverZone = 33;</code>
     *
     * <pre>
     * failover zone
     * </pre>
     */
    com.google.protobuf.ByteString
        getFailoverZoneBytes();

    /**
     * <code>optional bool isGCReady = 34;</code>
     *
     * <pre>
     * Set true after all transactions on it are over and sealed.
     * If not set or false, wait 78 hours after sealed for GC verification.
     * </pre>
     */
    boolean hasIsGCReady();
    /**
     * <code>optional bool isGCReady = 34;</code>
     *
     * <pre>
     * Set true after all transactions on it are over and sealed.
     * If not set or false, wait 78 hours after sealed for GC verification.
     * </pre>
     */
    boolean getIsGCReady();

    /**
     * <code>repeated string dtTypes = 35;</code>
     */
    com.google.protobuf.ProtocolStringList
        getDtTypesList();
    /**
     * <code>repeated string dtTypes = 35;</code>
     */
    int getDtTypesCount();
    /**
     * <code>repeated string dtTypes = 35;</code>
     */
    java.lang.String getDtTypes(int index);
    /**
     * <code>repeated string dtTypes = 35;</code>
     */
    com.google.protobuf.ByteString
        getDtTypesBytes(int index);

    /**
     * <code>optional int32 alignmentSize = 36;</code>
     *
     * <pre>
     * for 2MB write block alignment
     * </pre>
     */
    boolean hasAlignmentSize();
    /**
     * <code>optional int32 alignmentSize = 36;</code>
     *
     * <pre>
     * for 2MB write block alignment
     * </pre>
     */
    int getAlignmentSize();

    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
     *
     * <pre>
     * xor geo shipped copies, will be removed after encoded with
     * either COPY or PARITY chunks
     * </pre>
     */
    java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy> 
        getEncodedCopiesList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
     *
     * <pre>
     * xor geo shipped copies, will be removed after encoded with
     * either COPY or PARITY chunks
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy getEncodedCopies(int index);
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
     *
     * <pre>
     * xor geo shipped copies, will be removed after encoded with
     * either COPY or PARITY chunks
     * </pre>
     */
    int getEncodedCopiesCount();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
     *
     * <pre>
     * xor geo shipped copies, will be removed after encoded with
     * either COPY or PARITY chunks
     * </pre>
     */
    java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder> 
        getEncodedCopiesOrBuilderList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
     *
     * <pre>
     * xor geo shipped copies, will be removed after encoded with
     * either COPY or PARITY chunks
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder getEncodedCopiesOrBuilder(
        int index);

    /**
     * <code>optional int32 checksumForEncodedCopies = 38;</code>
     *
     * <pre>
     * checksum for xor geo shipped copies, i.e. encodedCopies
     * </pre>
     */
    boolean hasChecksumForEncodedCopies();
    /**
     * <code>optional int32 checksumForEncodedCopies = 38;</code>
     *
     * <pre>
     * checksum for xor geo shipped copies, i.e. encodedCopies
     * </pre>
     */
    int getChecksumForEncodedCopies();

    /**
     * <code>optional bool usingXorGeoShipping = 39;</code>
     *
     * <pre>
     * this flag is set after chunk shipping completed
     * </pre>
     */
    boolean hasUsingXorGeoShipping();
    /**
     * <code>optional bool usingXorGeoShipping = 39;</code>
     *
     * <pre>
     * this flag is set after chunk shipping completed
     * </pre>
     */
    boolean getUsingXorGeoShipping();

    /**
     * <code>optional bool freeShadowBlocks = 40;</code>
     *
     * <pre>
     * shadow blocks need to be freed
     * </pre>
     */
    boolean hasFreeShadowBlocks();
    /**
     * <code>optional bool freeShadowBlocks = 40;</code>
     *
     * <pre>
     * shadow blocks need to be freed
     * </pre>
     */
    boolean getFreeShadowBlocks();

    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
     *
     * <pre>
     * for COPY/ENCODED chunk
     * </pre>
     */
    java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo> 
        getChunkInfoByRangesList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
     *
     * <pre>
     * for COPY/ENCODED chunk
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo getChunkInfoByRanges(int index);
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
     *
     * <pre>
     * for COPY/ENCODED chunk
     * </pre>
     */
    int getChunkInfoByRangesCount();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
     *
     * <pre>
     * for COPY/ENCODED chunk
     * </pre>
     */
    java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfoOrBuilder> 
        getChunkInfoByRangesOrBuilderList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
     *
     * <pre>
     * for COPY/ENCODED chunk
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfoOrBuilder getChunkInfoByRangesOrBuilder(
        int index);

    /**
     * <code>repeated string pendingEncodeChunks = 51;</code>
     *
     * <pre>
     * list of xor-shipped chunks to be encoded against it
     * </pre>
     */
    com.google.protobuf.ProtocolStringList
        getPendingEncodeChunksList();
    /**
     * <code>repeated string pendingEncodeChunks = 51;</code>
     *
     * <pre>
     * list of xor-shipped chunks to be encoded against it
     * </pre>
     */
    int getPendingEncodeChunksCount();
    /**
     * <code>repeated string pendingEncodeChunks = 51;</code>
     *
     * <pre>
     * list of xor-shipped chunks to be encoded against it
     * </pre>
     */
    java.lang.String getPendingEncodeChunks(int index);
    /**
     * <code>repeated string pendingEncodeChunks = 51;</code>
     *
     * <pre>
     * list of xor-shipped chunks to be encoded against it
     * </pre>
     */
    com.google.protobuf.ByteString
        getPendingEncodeChunksBytes(int index);

    /**
     * <code>optional bool sealingInProgress = 52;</code>
     */
    boolean hasSealingInProgress();
    /**
     * <code>optional bool sealingInProgress = 52;</code>
     */
    boolean getSealingInProgress();

    /**
     * <code>optional bool everTryRemoveTypeII = 53;</code>
     */
    boolean hasEverTryRemoveTypeII();
    /**
     * <code>optional bool everTryRemoveTypeII = 53;</code>
     */
    boolean getEverTryRemoveTypeII();

    /**
     * <code>optional int64 createTime = 54;</code>
     */
    boolean hasCreateTime();
    /**
     * <code>optional int64 createTime = 54;</code>
     */
    long getCreateTime();

    /**
     * <code>optional bool isGcVerificationNeeded = 55;</code>
     */
    boolean hasIsGcVerificationNeeded();
    /**
     * <code>optional bool isGcVerificationNeeded = 55;</code>
     */
    boolean getIsGcVerificationNeeded();

    /**
     * <code>optional bool isEcRedundant = 56;</code>
     */
    boolean hasIsEcRedundant();
    /**
     * <code>optional bool isEcRedundant = 56;</code>
     */
    boolean getIsEcRedundant();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid repGroupUuid = 57;</code>
     */
    boolean hasRepGroupUuid();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid repGroupUuid = 57;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid getRepGroupUuid();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid repGroupUuid = 57;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder getRepGroupUuidOrBuilder();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid primaryUuid = 58;</code>
     */
    boolean hasPrimaryUuid();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid primaryUuid = 58;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid getPrimaryUuid();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid primaryUuid = 58;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder getPrimaryUuidOrBuilder();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid parityChunkUuid = 59;</code>
     */
    boolean hasParityChunkUuid();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid parityChunkUuid = 59;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid getParityChunkUuid();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid parityChunkUuid = 59;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder getParityChunkUuidOrBuilder();

    /**
     * <code>optional bool cmPendingForFreeSpaceStats = 60;</code>
     *
     * <pre>
     *Only used to mark if pendingForFreeSpaceStats stats is added for chunk
     * </pre>
     */
    boolean hasCmPendingForFreeSpaceStats();
    /**
     * <code>optional bool cmPendingForFreeSpaceStats = 60;</code>
     *
     * <pre>
     *Only used to mark if pendingForFreeSpaceStats stats is added for chunk
     * </pre>
     */
    boolean getCmPendingForFreeSpaceStats();

    /**
     * <code>optional int64 partialSRCopiedData = 61;</code>
     */
    boolean hasPartialSRCopiedData();
    /**
     * <code>optional int64 partialSRCopiedData = 61;</code>
     */
    long getPartialSRCopiedData();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BTreeChunkDataType bTreeChunkDataType = 62 [default = GENERAL];</code>
     */
    boolean hasBTreeChunkDataType();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BTreeChunkDataType bTreeChunkDataType = 62 [default = GENERAL];</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BTreeChunkDataType getBTreeChunkDataType();

    /**
     * <code>optional bool isPageTable = 63;</code>
     *
     * <pre>
     *a flag to indicate whether should geo replicate for bootstrap
     * </pre>
     */
    boolean hasIsPageTable();
    /**
     * <code>optional bool isPageTable = 63;</code>
     *
     * <pre>
     *a flag to indicate whether should geo replicate for bootstrap
     * </pre>
     */
    boolean getIsPageTable();

    /**
     * <code>optional bool shouldShip = 64;</code>
     */
    boolean hasShouldShip();
    /**
     * <code>optional bool shouldShip = 64;</code>
     */
    boolean getShouldShip();

    /**
     * <code>optional int32 maxKnownJournalReplayLength = 65;</code>
     *
     * <pre>
     * If journal chunk is active, DTInit find valid chunk length and replay the content, persistent valid length
     * in this filed, the journal seal length should larger than it.
     * </pre>
     */
    boolean hasMaxKnownJournalReplayLength();
    /**
     * <code>optional int32 maxKnownJournalReplayLength = 65;</code>
     *
     * <pre>
     * If journal chunk is active, DTInit find valid chunk length and replay the content, persistent valid length
     * in this filed, the journal seal length should larger than it.
     * </pre>
     */
    int getMaxKnownJournalReplayLength();

    /**
     * <code>optional string epoch = 66;</code>
     */
    boolean hasEpoch();
    /**
     * <code>optional string epoch = 66;</code>
     */
    java.lang.String getEpoch();
    /**
     * <code>optional string epoch = 66;</code>
     */
    com.google.protobuf.ByteString
        getEpochBytes();

    /**
     * <code>optional int32 maxWriteBlockSize = 67;</code>
     *
     * <pre>
     * for big hummer
     * </pre>
     */
    boolean hasMaxWriteBlockSize();
    /**
     * <code>optional int32 maxWriteBlockSize = 67;</code>
     *
     * <pre>
     * for big hummer
     * </pre>
     */
    int getMaxWriteBlockSize();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 68;</code>
     */
    boolean hasStoragePolicy();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 68;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy getStoragePolicy();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 68;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicyOrBuilder getStoragePolicyOrBuilder();

    /**
     * <code>optional bool generatedSRPrecheckTask = 69;</code>
     *
     * <pre>
     * if has generated precheck task
     * </pre>
     */
    boolean hasGeneratedSRPrecheckTask();
    /**
     * <code>optional bool generatedSRPrecheckTask = 69;</code>
     *
     * <pre>
     * if has generated precheck task
     * </pre>
     */
    boolean getGeneratedSRPrecheckTask();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Source source = 70;</code>
     */
    boolean hasSource();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Source source = 70;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Source getSource();

    /**
     * <code>optional bool everForceCheckedReclaimable = 71;</code>
     *
     * <pre>
     * if has ever force checked reclaimable/canSkipGCVerification regardless RepoReferenceCollectorStatus
     * </pre>
     */
    boolean hasEverForceCheckedReclaimable();
    /**
     * <code>optional bool everForceCheckedReclaimable = 71;</code>
     *
     * <pre>
     * if has ever force checked reclaimable/canSkipGCVerification regardless RepoReferenceCollectorStatus
     * </pre>
     */
    boolean getEverForceCheckedReclaimable();

    /**
     * <code>optional int32 dataRepoFree = 72;</code>
     *
     * <pre>
     * Total amount of data of free full virtual segments for ECed repo chunks
     * </pre>
     */
    boolean hasDataRepoFree();
    /**
     * <code>optional int32 dataRepoFree = 72;</code>
     *
     * <pre>
     * Total amount of data of free full virtual segments for ECed repo chunks
     * </pre>
     */
    int getDataRepoFree();

    /**
     * <code>optional int32 indexGranularity = 73;</code>
     */
    boolean hasIndexGranularity();
    /**
     * <code>optional int32 indexGranularity = 73;</code>
     */
    int getIndexGranularity();

    /**
     * <code>optional string originalKey = 74;</code>
     */
    boolean hasOriginalKey();
    /**
     * <code>optional string originalKey = 74;</code>
     */
    java.lang.String getOriginalKey();
    /**
     * <code>optional string originalKey = 74;</code>
     */
    com.google.protobuf.ByteString
        getOriginalKeyBytes();

    /**
     * <code>optional int64 tag = 75;</code>
     */
    boolean hasTag();
    /**
     * <code>optional int64 tag = 75;</code>
     */
    long getTag();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo}
   */
  public static final class ChunkInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo)
      ChunkInfoOrBuilder {
    // Use ChunkInfo.newBuilder() to construct.
    private ChunkInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ChunkInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ChunkInfo defaultInstance;
    public static ChunkInfo getDefaultInstance() {
      return defaultInstance;
    }

    public ChunkInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ChunkInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      int mutable_bitField2_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkStatus value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                status_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                dataType_ = value;
              }
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                type_ = value;
              }
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              repGroup_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              primary_ = bs;
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                secondaries_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair>();
                mutable_bitField0_ |= 0x00000020;
              }
              secondaries_.add(input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              parityChunk_ = bs;
              break;
            }
            case 66: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                encodedChunks_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000080;
              }
              encodedChunks_.add(bs);
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                copies_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy>();
                mutable_bitField0_ |= 0x00000100;
              }
              copies_.add(input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.PARSER, extensionRegistry));
              break;
            }
            case 80: {
              bitField0_ |= 0x00000040;
              capacity_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000080;
              sealedLength_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000100;
              autoSealTime_ = input.readInt64();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000200;
              sealedTime_ = input.readInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000400;
              isEcEncoded_ = input.readBool();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000800;
              shouldSeal_ = input.readBool();
              break;
            }
            case 128: {
              bitField0_ |= 0x00001000;
              sequenceNumber_ = input.readInt64();
              break;
            }
            case 136: {
              bitField0_ |= 0x00002000;
              minNotSealedSequenceNumber_ = input.readInt64();
              break;
            }
            case 146: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00004000;
              checksum_ = bs;
              break;
            }
            case 154: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00008000) == 0x00008000)) {
                subBuilder = shadow_.toBuilder();
              }
              shadow_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(shadow_);
                shadow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00008000;
              break;
            }
            case 160: {
              bitField0_ |= 0x00010000;
              isEcRetiring_ = input.readBool();
              break;
            }
            case 168: {
              bitField0_ |= 0x00020000;
              skipRepoGc_ = input.readBool();
              break;
            }
            case 176: {
              bitField0_ |= 0x00040000;
              noBlockLevelVerification_ = input.readBool();
              break;
            }
            case 184: {
              bitField0_ |= 0x00080000;
              lastAccessTime_ = input.readInt64();
              break;
            }
            case 192: {
              bitField0_ |= 0x00100000;
              lastKnownLength_ = input.readInt32();
              break;
            }
            case 200: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RepoChunkType value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RepoChunkType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(25, rawValue);
              } else {
                bitField0_ |= 0x00200000;
                repoChunkType_ = value;
              }
              break;
            }
            case 210: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00400000) == 0x00400000)) {
                subBuilder = shadowCopy_.toBuilder();
              }
              shadowCopy_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(shadowCopy_);
                shadowCopy_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00400000;
              break;
            }
            case 218: {
              if (!((mutable_bitField0_ & 0x04000000) == 0x04000000)) {
                geoCopies_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy>();
                mutable_bitField0_ |= 0x04000000;
              }
              geoCopies_.add(input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.PARSER, extensionRegistry));
              break;
            }
            case 224: {
              bitField0_ |= 0x00800000;
              geoTrackTime_ = input.readUInt64();
              break;
            }
            case 234: {
              if (!((mutable_bitField0_ & 0x10000000) == 0x10000000)) {
                geoProgress_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress>();
                mutable_bitField0_ |= 0x10000000;
              }
              geoProgress_.add(input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress.PARSER, extensionRegistry));
              break;
            }
            case 242: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x01000000;
              originalPrimary_ = bs;
              break;
            }
            case 248: {
              bitField0_ |= 0x02000000;
              deletedTime_ = input.readInt64();
              break;
            }
            case 256: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCustomState value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCustomState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(32, rawValue);
              } else {
                bitField0_ |= 0x04000000;
                customState_ = value;
              }
              break;
            }
            case 266: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x08000000;
              failoverZone_ = bs;
              break;
            }
            case 272: {
              bitField0_ |= 0x10000000;
              isGCReady_ = input.readBool();
              break;
            }
            case 282: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField1_ & 0x00000004) == 0x00000004)) {
                dtTypes_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField1_ |= 0x00000004;
              }
              dtTypes_.add(bs);
              break;
            }
            case 288: {
              bitField0_ |= 0x20000000;
              alignmentSize_ = input.readInt32();
              break;
            }
            case 298: {
              if (!((mutable_bitField1_ & 0x00000010) == 0x00000010)) {
                encodedCopies_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy>();
                mutable_bitField1_ |= 0x00000010;
              }
              encodedCopies_.add(input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.PARSER, extensionRegistry));
              break;
            }
            case 304: {
              bitField0_ |= 0x40000000;
              checksumForEncodedCopies_ = input.readInt32();
              break;
            }
            case 312: {
              bitField0_ |= 0x80000000;
              usingXorGeoShipping_ = input.readBool();
              break;
            }
            case 320: {
              bitField1_ |= 0x00000001;
              freeShadowBlocks_ = input.readBool();
              break;
            }
            case 402: {
              if (!((mutable_bitField1_ & 0x00000100) == 0x00000100)) {
                chunkInfoByRanges_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo>();
                mutable_bitField1_ |= 0x00000100;
              }
              chunkInfoByRanges_.add(input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo.PARSER, extensionRegistry));
              break;
            }
            case 410: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField1_ & 0x00000200) == 0x00000200)) {
                pendingEncodeChunks_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField1_ |= 0x00000200;
              }
              pendingEncodeChunks_.add(bs);
              break;
            }
            case 416: {
              bitField1_ |= 0x00000002;
              sealingInProgress_ = input.readBool();
              break;
            }
            case 424: {
              bitField1_ |= 0x00000004;
              everTryRemoveTypeII_ = input.readBool();
              break;
            }
            case 432: {
              bitField1_ |= 0x00000008;
              createTime_ = input.readInt64();
              break;
            }
            case 440: {
              bitField1_ |= 0x00000010;
              isGcVerificationNeeded_ = input.readBool();
              break;
            }
            case 448: {
              bitField1_ |= 0x00000020;
              isEcRedundant_ = input.readBool();
              break;
            }
            case 458: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder subBuilder = null;
              if (((bitField1_ & 0x00000040) == 0x00000040)) {
                subBuilder = repGroupUuid_.toBuilder();
              }
              repGroupUuid_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(repGroupUuid_);
                repGroupUuid_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000040;
              break;
            }
            case 466: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder subBuilder = null;
              if (((bitField1_ & 0x00000080) == 0x00000080)) {
                subBuilder = primaryUuid_.toBuilder();
              }
              primaryUuid_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(primaryUuid_);
                primaryUuid_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000080;
              break;
            }
            case 474: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder subBuilder = null;
              if (((bitField1_ & 0x00000100) == 0x00000100)) {
                subBuilder = parityChunkUuid_.toBuilder();
              }
              parityChunkUuid_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(parityChunkUuid_);
                parityChunkUuid_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000100;
              break;
            }
            case 480: {
              bitField1_ |= 0x00000200;
              cmPendingForFreeSpaceStats_ = input.readBool();
              break;
            }
            case 488: {
              bitField1_ |= 0x00000400;
              partialSRCopiedData_ = input.readInt64();
              break;
            }
            case 496: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BTreeChunkDataType value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BTreeChunkDataType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(62, rawValue);
              } else {
                bitField1_ |= 0x00000800;
                bTreeChunkDataType_ = value;
              }
              break;
            }
            case 504: {
              bitField1_ |= 0x00001000;
              isPageTable_ = input.readBool();
              break;
            }
            case 512: {
              bitField1_ |= 0x00002000;
              shouldShip_ = input.readBool();
              break;
            }
            case 520: {
              bitField1_ |= 0x00004000;
              maxKnownJournalReplayLength_ = input.readInt32();
              break;
            }
            case 530: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField1_ |= 0x00008000;
              epoch_ = bs;
              break;
            }
            case 536: {
              bitField1_ |= 0x00010000;
              maxWriteBlockSize_ = input.readInt32();
              break;
            }
            case 546: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.Builder subBuilder = null;
              if (((bitField1_ & 0x00020000) == 0x00020000)) {
                subBuilder = storagePolicy_.toBuilder();
              }
              storagePolicy_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(storagePolicy_);
                storagePolicy_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00020000;
              break;
            }
            case 552: {
              bitField1_ |= 0x00040000;
              generatedSRPrecheckTask_ = input.readBool();
              break;
            }
            case 560: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Source value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Source.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(70, rawValue);
              } else {
                bitField1_ |= 0x00080000;
                source_ = value;
              }
              break;
            }
            case 568: {
              bitField1_ |= 0x00100000;
              everForceCheckedReclaimable_ = input.readBool();
              break;
            }
            case 576: {
              bitField1_ |= 0x00200000;
              dataRepoFree_ = input.readInt32();
              break;
            }
            case 584: {
              bitField1_ |= 0x00400000;
              indexGranularity_ = input.readInt32();
              break;
            }
            case 594: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField1_ |= 0x00800000;
              originalKey_ = bs;
              break;
            }
            case 600: {
              bitField1_ |= 0x01000000;
              tag_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          secondaries_ = java.util.Collections.unmodifiableList(secondaries_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          encodedChunks_ = encodedChunks_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          copies_ = java.util.Collections.unmodifiableList(copies_);
        }
        if (((mutable_bitField0_ & 0x04000000) == 0x04000000)) {
          geoCopies_ = java.util.Collections.unmodifiableList(geoCopies_);
        }
        if (((mutable_bitField0_ & 0x10000000) == 0x10000000)) {
          geoProgress_ = java.util.Collections.unmodifiableList(geoProgress_);
        }
        if (((mutable_bitField1_ & 0x00000004) == 0x00000004)) {
          dtTypes_ = dtTypes_.getUnmodifiableView();
        }
        if (((mutable_bitField1_ & 0x00000010) == 0x00000010)) {
          encodedCopies_ = java.util.Collections.unmodifiableList(encodedCopies_);
        }
        if (((mutable_bitField1_ & 0x00000100) == 0x00000100)) {
          chunkInfoByRanges_ = java.util.Collections.unmodifiableList(chunkInfoByRanges_);
        }
        if (((mutable_bitField1_ & 0x00000200) == 0x00000200)) {
          pendingEncodeChunks_ = pendingEncodeChunks_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<ChunkInfo> PARSER =
        new com.google.protobuf.AbstractParser<ChunkInfo>() {
      public ChunkInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChunkInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ChunkInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    private int bitField1_;
    public static final int STATUS_FIELD_NUMBER = 1;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkStatus status_;
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkStatus status = 1;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkStatus status = 1;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkStatus getStatus() {
      return status_;
    }

    public static final int DATATYPE_FIELD_NUMBER = 2;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType dataType_;
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDataType dataType = 2;</code>
     */
    public boolean hasDataType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDataType dataType = 2;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType getDataType() {
      return dataType_;
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType type_;
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkType type = 3;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkType type = 3;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType getType() {
      return type_;
    }

    public static final int REPGROUP_FIELD_NUMBER = 4;
    private java.lang.Object repGroup_;
    /**
     * <code>optional string repGroup = 4;</code>
     *
     * <pre>
     * replication group
     * </pre>
     */
    public boolean hasRepGroup() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string repGroup = 4;</code>
     *
     * <pre>
     * replication group
     * </pre>
     */
    public java.lang.String getRepGroup() {
      java.lang.Object ref = repGroup_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          repGroup_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string repGroup = 4;</code>
     *
     * <pre>
     * replication group
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRepGroupBytes() {
      java.lang.Object ref = repGroup_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        repGroup_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRIMARY_FIELD_NUMBER = 5;
    private java.lang.Object primary_;
    /**
     * <code>optional string primary = 5;</code>
     *
     * <pre>
     * zone of primary, present if type is REMOTE, COPY or ENCODED
     * </pre>
     */
    public boolean hasPrimary() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string primary = 5;</code>
     *
     * <pre>
     * zone of primary, present if type is REMOTE, COPY or ENCODED
     * </pre>
     */
    public java.lang.String getPrimary() {
      java.lang.Object ref = primary_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          primary_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string primary = 5;</code>
     *
     * <pre>
     * zone of primary, present if type is REMOTE, COPY or ENCODED
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPrimaryBytes() {
      java.lang.Object ref = primary_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        primary_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SECONDARIES_FIELD_NUMBER = 6;
    private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair> secondaries_;
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
     *
     * <pre>
     * zone of secondary, present if type is LOCAL or REMOTE
     * </pre>
     */
    public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair> getSecondariesList() {
      return secondaries_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
     *
     * <pre>
     * zone of secondary, present if type is LOCAL or REMOTE
     * </pre>
     */
    public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPairOrBuilder> 
        getSecondariesOrBuilderList() {
      return secondaries_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
     *
     * <pre>
     * zone of secondary, present if type is LOCAL or REMOTE
     * </pre>
     */
    public int getSecondariesCount() {
      return secondaries_.size();
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
     *
     * <pre>
     * zone of secondary, present if type is LOCAL or REMOTE
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair getSecondaries(int index) {
      return secondaries_.get(index);
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
     *
     * <pre>
     * zone of secondary, present if type is LOCAL or REMOTE
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPairOrBuilder getSecondariesOrBuilder(
        int index) {
      return secondaries_.get(index);
    }

    public static final int PARITYCHUNK_FIELD_NUMBER = 7;
    private java.lang.Object parityChunk_;
    /**
     * <code>optional string parityChunk = 7;</code>
     *
     * <pre>
     * parity chunk id, present if type is ENCODED
     * </pre>
     */
    public boolean hasParityChunk() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string parityChunk = 7;</code>
     *
     * <pre>
     * parity chunk id, present if type is ENCODED
     * </pre>
     */
    public java.lang.String getParityChunk() {
      java.lang.Object ref = parityChunk_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          parityChunk_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string parityChunk = 7;</code>
     *
     * <pre>
     * parity chunk id, present if type is ENCODED
     * </pre>
     */
    public com.google.protobuf.ByteString
        getParityChunkBytes() {
      java.lang.Object ref = parityChunk_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        parityChunk_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENCODEDCHUNKS_FIELD_NUMBER = 8;
    private com.google.protobuf.LazyStringList encodedChunks_;
    /**
     * <code>repeated string encodedChunks = 8;</code>
     *
     * <pre>
     * list of encoded chunk ids, present if type is PARITY
     * </pre>
     */
    public com.google.protobuf.ProtocolStringList
        getEncodedChunksList() {
      return encodedChunks_;
    }
    /**
     * <code>repeated string encodedChunks = 8;</code>
     *
     * <pre>
     * list of encoded chunk ids, present if type is PARITY
     * </pre>
     */
    public int getEncodedChunksCount() {
      return encodedChunks_.size();
    }
    /**
     * <code>repeated string encodedChunks = 8;</code>
     *
     * <pre>
     * list of encoded chunk ids, present if type is PARITY
     * </pre>
     */
    public java.lang.String getEncodedChunks(int index) {
      return encodedChunks_.get(index);
    }
    /**
     * <code>repeated string encodedChunks = 8;</code>
     *
     * <pre>
     * list of encoded chunk ids, present if type is PARITY
     * </pre>
     */
    public com.google.protobuf.ByteString
        getEncodedChunksBytes(int index) {
      return encodedChunks_.getByteString(index);
    }

    public static final int COPIES_FIELD_NUMBER = 9;
    private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy> copies_;
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
     *
     * <pre>
     * copies of chunk data, present if type is LOCAL, COPY or PARITY;
     * if type is REMOTE or ENCODED, present only when there is cached data
     * </pre>
     */
    public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy> getCopiesList() {
      return copies_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
     *
     * <pre>
     * copies of chunk data, present if type is LOCAL, COPY or PARITY;
     * if type is REMOTE or ENCODED, present only when there is cached data
     * </pre>
     */
    public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder> 
        getCopiesOrBuilderList() {
      return copies_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
     *
     * <pre>
     * copies of chunk data, present if type is LOCAL, COPY or PARITY;
     * if type is REMOTE or ENCODED, present only when there is cached data
     * </pre>
     */
    public int getCopiesCount() {
      return copies_.size();
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
     *
     * <pre>
     * copies of chunk data, present if type is LOCAL, COPY or PARITY;
     * if type is REMOTE or ENCODED, present only when there is cached data
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy getCopies(int index) {
      return copies_.get(index);
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
     *
     * <pre>
     * copies of chunk data, present if type is LOCAL, COPY or PARITY;
     * if type is REMOTE or ENCODED, present only when there is cached data
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder getCopiesOrBuilder(
        int index) {
      return copies_.get(index);
    }

    public static final int CAPACITY_FIELD_NUMBER = 10;
    private int capacity_;
    /**
     * <code>optional int32 capacity = 10;</code>
     *
     * <pre>
     * indicate the capacity of chunk, for file access capacity is -1 (unlimited)
     * </pre>
     */
    public boolean hasCapacity() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 capacity = 10;</code>
     *
     * <pre>
     * indicate the capacity of chunk, for file access capacity is -1 (unlimited)
     * </pre>
     */
    public int getCapacity() {
      return capacity_;
    }

    public static final int SEALEDLENGTH_FIELD_NUMBER = 11;
    private int sealedLength_;
    /**
     * <code>optional int32 sealedLength = 11;</code>
     */
    public boolean hasSealedLength() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 sealedLength = 11;</code>
     */
    public int getSealedLength() {
      return sealedLength_;
    }

    public static final int AUTOSEALTIME_FIELD_NUMBER = 12;
    private long autoSealTime_;
    /**
     * <code>optional int64 autoSealTime = 12;</code>
     *
     * <pre>
     * when the chunk should be automatically sealed (due to timeout)
     * only present if chunk is ACTIVE
     * </pre>
     */
    public boolean hasAutoSealTime() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int64 autoSealTime = 12;</code>
     *
     * <pre>
     * when the chunk should be automatically sealed (due to timeout)
     * only present if chunk is ACTIVE
     * </pre>
     */
    public long getAutoSealTime() {
      return autoSealTime_;
    }

    public static final int SEALEDTIME_FIELD_NUMBER = 13;
    private long sealedTime_;
    /**
     * <code>optional int64 sealedTime = 13;</code>
     *
     * <pre>
     * chunk sealed time, only present if chunk is sealed
     * </pre>
     */
    public boolean hasSealedTime() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int64 sealedTime = 13;</code>
     *
     * <pre>
     * chunk sealed time, only present if chunk is sealed
     * </pre>
     */
    public long getSealedTime() {
      return sealedTime_;
    }

    public static final int ISECENCODED_FIELD_NUMBER = 14;
    private boolean isEcEncoded_;
    /**
     * <code>optional bool isEcEncoded = 14;</code>
     *
     * <pre>
     * if the chunk has been EC encoded, missing means false
     * </pre>
     */
    public boolean hasIsEcEncoded() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool isEcEncoded = 14;</code>
     *
     * <pre>
     * if the chunk has been EC encoded, missing means false
     * </pre>
     */
    public boolean getIsEcEncoded() {
      return isEcEncoded_;
    }

    public static final int SHOULDSEAL_FIELD_NUMBER = 15;
    private boolean shouldSeal_;
    /**
     * <code>optional bool shouldSeal = 15;</code>
     *
     * <pre>
     *a flag to indicate whether should reject lease extend request
     * </pre>
     */
    public boolean hasShouldSeal() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool shouldSeal = 15;</code>
     *
     * <pre>
     *a flag to indicate whether should reject lease extend request
     * </pre>
     */
    public boolean getShouldSeal() {
      return shouldSeal_;
    }

    public static final int SEQUENCENUMBER_FIELD_NUMBER = 16;
    private long sequenceNumber_;
    /**
     * <code>required int64 sequenceNumber = 16;</code>
     */
    public boolean hasSequenceNumber() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required int64 sequenceNumber = 16;</code>
     */
    public long getSequenceNumber() {
      return sequenceNumber_;
    }

    public static final int MINNOTSEALEDSEQUENCENUMBER_FIELD_NUMBER = 17;
    private long minNotSealedSequenceNumber_;
    /**
     * <code>required int64 minNotSealedSequenceNumber = 17;</code>
     */
    public boolean hasMinNotSealedSequenceNumber() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>required int64 minNotSealedSequenceNumber = 17;</code>
     */
    public long getMinNotSealedSequenceNumber() {
      return minNotSealedSequenceNumber_;
    }

    public static final int CHECKSUM_FIELD_NUMBER = 18;
    private java.lang.Object checksum_;
    /**
     * <code>optional string checksum = 18;</code>
     */
    public boolean hasChecksum() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional string checksum = 18;</code>
     */
    public java.lang.String getChecksum() {
      java.lang.Object ref = checksum_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          checksum_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string checksum = 18;</code>
     */
    public com.google.protobuf.ByteString
        getChecksumBytes() {
      java.lang.Object ref = checksum_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        checksum_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SHADOW_FIELD_NUMBER = 19;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo shadow_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo shadow = 19;</code>
     *
     * <pre>
     * shadow chunk info that could replace the current one later
     * </pre>
     */
    public boolean hasShadow() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo shadow = 19;</code>
     *
     * <pre>
     * shadow chunk info that could replace the current one later
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo getShadow() {
      return shadow_;
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo shadow = 19;</code>
     *
     * <pre>
     * shadow chunk info that could replace the current one later
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder getShadowOrBuilder() {
      return shadow_;
    }

    public static final int ISECRETIRING_FIELD_NUMBER = 20;
    private boolean isEcRetiring_;
    /**
     * <code>optional bool isEcRetiring = 20;</code>
     *
     * <pre>
     * if the chunk is being transformed from ec back to 3 copies
     * </pre>
     */
    public boolean hasIsEcRetiring() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional bool isEcRetiring = 20;</code>
     *
     * <pre>
     * if the chunk is being transformed from ec back to 3 copies
     * </pre>
     */
    public boolean getIsEcRetiring() {
      return isEcRetiring_;
    }

    public static final int SKIPREPOGC_FIELD_NUMBER = 21;
    private boolean skipRepoGc_;
    /**
     * <code>optional bool skipRepoGc = 21;</code>
     *
     * <pre>
     * skip repo gc will be set when repo copy chunk is promoted to local
     * </pre>
     */
    public boolean hasSkipRepoGc() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional bool skipRepoGc = 21;</code>
     *
     * <pre>
     * skip repo gc will be set when repo copy chunk is promoted to local
     * </pre>
     */
    public boolean getSkipRepoGc() {
      return skipRepoGc_;
    }

    public static final int NOBLOCKLEVELVERIFICATION_FIELD_NUMBER = 22;
    private boolean noBlockLevelVerification_;
    /**
     * <code>optional bool noBlockLevelVerification = 22;</code>
     *
     * <pre>
     *the chunk doesn't include block-level verification like file ingestion chunk
     * </pre>
     */
    public boolean hasNoBlockLevelVerification() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional bool noBlockLevelVerification = 22;</code>
     *
     * <pre>
     *the chunk doesn't include block-level verification like file ingestion chunk
     * </pre>
     */
    public boolean getNoBlockLevelVerification() {
      return noBlockLevelVerification_;
    }

    public static final int LASTACCESSTIME_FIELD_NUMBER = 23;
    private long lastAccessTime_;
    /**
     * <code>optional int64 lastAccessTime = 23;</code>
     *
     * <pre>
     * last access time (updated with very low frequency)
     * TODO: shall this also be used to guide the EC coding?
     * for REMOTE chunk type this is updated by remote chunk cache lazily
     * </pre>
     */
    public boolean hasLastAccessTime() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int64 lastAccessTime = 23;</code>
     *
     * <pre>
     * last access time (updated with very low frequency)
     * TODO: shall this also be used to guide the EC coding?
     * for REMOTE chunk type this is updated by remote chunk cache lazily
     * </pre>
     */
    public long getLastAccessTime() {
      return lastAccessTime_;
    }

    public static final int LASTKNOWNLENGTH_FIELD_NUMBER = 24;
    private int lastKnownLength_;
    /**
     * <code>optional int32 lastKnownLength = 24;</code>
     *
     * <pre>
     * client may report last known length of the chunk
     * in chunk lease extension message
     * This reduces for e.g. journal replay time
     * </pre>
     */
    public boolean hasLastKnownLength() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 lastKnownLength = 24;</code>
     *
     * <pre>
     * client may report last known length of the chunk
     * in chunk lease extension message
     * This reduces for e.g. journal replay time
     * </pre>
     */
    public int getLastKnownLength() {
      return lastKnownLength_;
    }

    public static final int REPOCHUNKTYPE_FIELD_NUMBER = 25;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RepoChunkType repoChunkType_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RepoChunkType repoChunkType = 25;</code>
     *
     * <pre>
     * all the repo chunks should have this field set
     * </pre>
     */
    public boolean hasRepoChunkType() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RepoChunkType repoChunkType = 25;</code>
     *
     * <pre>
     * all the repo chunks should have this field set
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RepoChunkType getRepoChunkType() {
      return repoChunkType_;
    }

    public static final int SHADOWCOPY_FIELD_NUMBER = 26;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo shadowCopy_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo shadowCopy = 26;</code>
     *
     * <pre>
     * if set, file will be truncated to expected length of Copies
     * specifically used for vnest journal partial write vs. corruption checking
     * </pre>
     */
    public boolean hasShadowCopy() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo shadowCopy = 26;</code>
     *
     * <pre>
     * if set, file will be truncated to expected length of Copies
     * specifically used for vnest journal partial write vs. corruption checking
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo getShadowCopy() {
      return shadowCopy_;
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo shadowCopy = 26;</code>
     *
     * <pre>
     * if set, file will be truncated to expected length of Copies
     * specifically used for vnest journal partial write vs. corruption checking
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder getShadowCopyOrBuilder() {
      return shadowCopy_;
    }

    public static final int GEOCOPIES_FIELD_NUMBER = 27;
    private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy> geoCopies_;
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
     *
     * <pre>
     * copies of chunk data, present if type is REMOTE;
     * present only when unsealed geo replication is ongoing
     * </pre>
     */
    public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy> getGeoCopiesList() {
      return geoCopies_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
     *
     * <pre>
     * copies of chunk data, present if type is REMOTE;
     * present only when unsealed geo replication is ongoing
     * </pre>
     */
    public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder> 
        getGeoCopiesOrBuilderList() {
      return geoCopies_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
     *
     * <pre>
     * copies of chunk data, present if type is REMOTE;
     * present only when unsealed geo replication is ongoing
     * </pre>
     */
    public int getGeoCopiesCount() {
      return geoCopies_.size();
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
     *
     * <pre>
     * copies of chunk data, present if type is REMOTE;
     * present only when unsealed geo replication is ongoing
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy getGeoCopies(int index) {
      return geoCopies_.get(index);
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
     *
     * <pre>
     * copies of chunk data, present if type is REMOTE;
     * present only when unsealed geo replication is ongoing
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder getGeoCopiesOrBuilder(
        int index) {
      return geoCopies_.get(index);
    }

    public static final int GEOTRACKTIME_FIELD_NUMBER = 28;
    private long geoTrackTime_;
    /**
     * <code>optional uint64 geoTrackTime = 28;</code>
     *
     * <pre>
     *when geo track task should be invoke to do the final geo check
     * </pre>
     */
    public boolean hasGeoTrackTime() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional uint64 geoTrackTime = 28;</code>
     *
     * <pre>
     *when geo track task should be invoke to do the final geo check
     * </pre>
     */
    public long getGeoTrackTime() {
      return geoTrackTime_;
    }

    public static final int GEOPROGRESS_FIELD_NUMBER = 29;
    private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress> geoProgress_;
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
     *
     * <pre>
     *geo write progress
     *journal chunk may have multiple progress as it should be replicated to multi zone
     * </pre>
     */
    public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress> getGeoProgressList() {
      return geoProgress_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
     *
     * <pre>
     *geo write progress
     *journal chunk may have multiple progress as it should be replicated to multi zone
     * </pre>
     */
    public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgressOrBuilder> 
        getGeoProgressOrBuilderList() {
      return geoProgress_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
     *
     * <pre>
     *geo write progress
     *journal chunk may have multiple progress as it should be replicated to multi zone
     * </pre>
     */
    public int getGeoProgressCount() {
      return geoProgress_.size();
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
     *
     * <pre>
     *geo write progress
     *journal chunk may have multiple progress as it should be replicated to multi zone
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress getGeoProgress(int index) {
      return geoProgress_.get(index);
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
     *
     * <pre>
     *geo write progress
     *journal chunk may have multiple progress as it should be replicated to multi zone
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgressOrBuilder getGeoProgressOrBuilder(
        int index) {
      return geoProgress_.get(index);
    }

    public static final int ORIGINALPRIMARY_FIELD_NUMBER = 30;
    private java.lang.Object originalPrimary_;
    /**
     * <code>optional string originalPrimary = 30;</code>
     *
     * <pre>
     *Original primary zone of the chunk; Set when a COPY promoted to LOCAL after failover
     * </pre>
     */
    public boolean hasOriginalPrimary() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional string originalPrimary = 30;</code>
     *
     * <pre>
     *Original primary zone of the chunk; Set when a COPY promoted to LOCAL after failover
     * </pre>
     */
    public java.lang.String getOriginalPrimary() {
      java.lang.Object ref = originalPrimary_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          originalPrimary_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string originalPrimary = 30;</code>
     *
     * <pre>
     *Original primary zone of the chunk; Set when a COPY promoted to LOCAL after failover
     * </pre>
     */
    public com.google.protobuf.ByteString
        getOriginalPrimaryBytes() {
      java.lang.Object ref = originalPrimary_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        originalPrimary_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DELETEDTIME_FIELD_NUMBER = 31;
    private long deletedTime_;
    /**
     * <code>optional int64 deletedTime = 31;</code>
     *
     * <pre>
     * chunk deleted time, only present if chunk is in deleted state
     * </pre>
     */
    public boolean hasDeletedTime() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional int64 deletedTime = 31;</code>
     *
     * <pre>
     * chunk deleted time, only present if chunk is in deleted state
     * </pre>
     */
    public long getDeletedTime() {
      return deletedTime_;
    }

    public static final int CUSTOMSTATE_FIELD_NUMBER = 32;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCustomState customState_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCustomState customState = 32;</code>
     *
     * <pre>
     * partial Gc task status
     * </pre>
     */
    public boolean hasCustomState() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCustomState customState = 32;</code>
     *
     * <pre>
     * partial Gc task status
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCustomState getCustomState() {
      return customState_;
    }

    public static final int FAILOVERZONE_FIELD_NUMBER = 33;
    private java.lang.Object failoverZone_;
    /**
     * <code>optional string failoverZone = 33;</code>
     *
     * <pre>
     * failover zone
     * </pre>
     */
    public boolean hasFailoverZone() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional string failoverZone = 33;</code>
     *
     * <pre>
     * failover zone
     * </pre>
     */
    public java.lang.String getFailoverZone() {
      java.lang.Object ref = failoverZone_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          failoverZone_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string failoverZone = 33;</code>
     *
     * <pre>
     * failover zone
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFailoverZoneBytes() {
      java.lang.Object ref = failoverZone_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        failoverZone_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ISGCREADY_FIELD_NUMBER = 34;
    private boolean isGCReady_;
    /**
     * <code>optional bool isGCReady = 34;</code>
     *
     * <pre>
     * Set true after all transactions on it are over and sealed.
     * If not set or false, wait 78 hours after sealed for GC verification.
     * </pre>
     */
    public boolean hasIsGCReady() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional bool isGCReady = 34;</code>
     *
     * <pre>
     * Set true after all transactions on it are over and sealed.
     * If not set or false, wait 78 hours after sealed for GC verification.
     * </pre>
     */
    public boolean getIsGCReady() {
      return isGCReady_;
    }

    public static final int DTTYPES_FIELD_NUMBER = 35;
    private com.google.protobuf.LazyStringList dtTypes_;
    /**
     * <code>repeated string dtTypes = 35;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getDtTypesList() {
      return dtTypes_;
    }
    /**
     * <code>repeated string dtTypes = 35;</code>
     */
    public int getDtTypesCount() {
      return dtTypes_.size();
    }
    /**
     * <code>repeated string dtTypes = 35;</code>
     */
    public java.lang.String getDtTypes(int index) {
      return dtTypes_.get(index);
    }
    /**
     * <code>repeated string dtTypes = 35;</code>
     */
    public com.google.protobuf.ByteString
        getDtTypesBytes(int index) {
      return dtTypes_.getByteString(index);
    }

    public static final int ALIGNMENTSIZE_FIELD_NUMBER = 36;
    private int alignmentSize_;
    /**
     * <code>optional int32 alignmentSize = 36;</code>
     *
     * <pre>
     * for 2MB write block alignment
     * </pre>
     */
    public boolean hasAlignmentSize() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional int32 alignmentSize = 36;</code>
     *
     * <pre>
     * for 2MB write block alignment
     * </pre>
     */
    public int getAlignmentSize() {
      return alignmentSize_;
    }

    public static final int ENCODEDCOPIES_FIELD_NUMBER = 37;
    private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy> encodedCopies_;
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
     *
     * <pre>
     * xor geo shipped copies, will be removed after encoded with
     * either COPY or PARITY chunks
     * </pre>
     */
    public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy> getEncodedCopiesList() {
      return encodedCopies_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
     *
     * <pre>
     * xor geo shipped copies, will be removed after encoded with
     * either COPY or PARITY chunks
     * </pre>
     */
    public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder> 
        getEncodedCopiesOrBuilderList() {
      return encodedCopies_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
     *
     * <pre>
     * xor geo shipped copies, will be removed after encoded with
     * either COPY or PARITY chunks
     * </pre>
     */
    public int getEncodedCopiesCount() {
      return encodedCopies_.size();
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
     *
     * <pre>
     * xor geo shipped copies, will be removed after encoded with
     * either COPY or PARITY chunks
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy getEncodedCopies(int index) {
      return encodedCopies_.get(index);
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
     *
     * <pre>
     * xor geo shipped copies, will be removed after encoded with
     * either COPY or PARITY chunks
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder getEncodedCopiesOrBuilder(
        int index) {
      return encodedCopies_.get(index);
    }

    public static final int CHECKSUMFORENCODEDCOPIES_FIELD_NUMBER = 38;
    private int checksumForEncodedCopies_;
    /**
     * <code>optional int32 checksumForEncodedCopies = 38;</code>
     *
     * <pre>
     * checksum for xor geo shipped copies, i.e. encodedCopies
     * </pre>
     */
    public boolean hasChecksumForEncodedCopies() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional int32 checksumForEncodedCopies = 38;</code>
     *
     * <pre>
     * checksum for xor geo shipped copies, i.e. encodedCopies
     * </pre>
     */
    public int getChecksumForEncodedCopies() {
      return checksumForEncodedCopies_;
    }

    public static final int USINGXORGEOSHIPPING_FIELD_NUMBER = 39;
    private boolean usingXorGeoShipping_;
    /**
     * <code>optional bool usingXorGeoShipping = 39;</code>
     *
     * <pre>
     * this flag is set after chunk shipping completed
     * </pre>
     */
    public boolean hasUsingXorGeoShipping() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional bool usingXorGeoShipping = 39;</code>
     *
     * <pre>
     * this flag is set after chunk shipping completed
     * </pre>
     */
    public boolean getUsingXorGeoShipping() {
      return usingXorGeoShipping_;
    }

    public static final int FREESHADOWBLOCKS_FIELD_NUMBER = 40;
    private boolean freeShadowBlocks_;
    /**
     * <code>optional bool freeShadowBlocks = 40;</code>
     *
     * <pre>
     * shadow blocks need to be freed
     * </pre>
     */
    public boolean hasFreeShadowBlocks() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool freeShadowBlocks = 40;</code>
     *
     * <pre>
     * shadow blocks need to be freed
     * </pre>
     */
    public boolean getFreeShadowBlocks() {
      return freeShadowBlocks_;
    }

    public static final int CHUNKINFOBYRANGES_FIELD_NUMBER = 50;
    private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo> chunkInfoByRanges_;
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
     *
     * <pre>
     * for COPY/ENCODED chunk
     * </pre>
     */
    public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo> getChunkInfoByRangesList() {
      return chunkInfoByRanges_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
     *
     * <pre>
     * for COPY/ENCODED chunk
     * </pre>
     */
    public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfoOrBuilder> 
        getChunkInfoByRangesOrBuilderList() {
      return chunkInfoByRanges_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
     *
     * <pre>
     * for COPY/ENCODED chunk
     * </pre>
     */
    public int getChunkInfoByRangesCount() {
      return chunkInfoByRanges_.size();
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
     *
     * <pre>
     * for COPY/ENCODED chunk
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo getChunkInfoByRanges(int index) {
      return chunkInfoByRanges_.get(index);
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
     *
     * <pre>
     * for COPY/ENCODED chunk
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfoOrBuilder getChunkInfoByRangesOrBuilder(
        int index) {
      return chunkInfoByRanges_.get(index);
    }

    public static final int PENDINGENCODECHUNKS_FIELD_NUMBER = 51;
    private com.google.protobuf.LazyStringList pendingEncodeChunks_;
    /**
     * <code>repeated string pendingEncodeChunks = 51;</code>
     *
     * <pre>
     * list of xor-shipped chunks to be encoded against it
     * </pre>
     */
    public com.google.protobuf.ProtocolStringList
        getPendingEncodeChunksList() {
      return pendingEncodeChunks_;
    }
    /**
     * <code>repeated string pendingEncodeChunks = 51;</code>
     *
     * <pre>
     * list of xor-shipped chunks to be encoded against it
     * </pre>
     */
    public int getPendingEncodeChunksCount() {
      return pendingEncodeChunks_.size();
    }
    /**
     * <code>repeated string pendingEncodeChunks = 51;</code>
     *
     * <pre>
     * list of xor-shipped chunks to be encoded against it
     * </pre>
     */
    public java.lang.String getPendingEncodeChunks(int index) {
      return pendingEncodeChunks_.get(index);
    }
    /**
     * <code>repeated string pendingEncodeChunks = 51;</code>
     *
     * <pre>
     * list of xor-shipped chunks to be encoded against it
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPendingEncodeChunksBytes(int index) {
      return pendingEncodeChunks_.getByteString(index);
    }

    public static final int SEALINGINPROGRESS_FIELD_NUMBER = 52;
    private boolean sealingInProgress_;
    /**
     * <code>optional bool sealingInProgress = 52;</code>
     */
    public boolean hasSealingInProgress() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool sealingInProgress = 52;</code>
     */
    public boolean getSealingInProgress() {
      return sealingInProgress_;
    }

    public static final int EVERTRYREMOVETYPEII_FIELD_NUMBER = 53;
    private boolean everTryRemoveTypeII_;
    /**
     * <code>optional bool everTryRemoveTypeII = 53;</code>
     */
    public boolean hasEverTryRemoveTypeII() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool everTryRemoveTypeII = 53;</code>
     */
    public boolean getEverTryRemoveTypeII() {
      return everTryRemoveTypeII_;
    }

    public static final int CREATETIME_FIELD_NUMBER = 54;
    private long createTime_;
    /**
     * <code>optional int64 createTime = 54;</code>
     */
    public boolean hasCreateTime() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 createTime = 54;</code>
     */
    public long getCreateTime() {
      return createTime_;
    }

    public static final int ISGCVERIFICATIONNEEDED_FIELD_NUMBER = 55;
    private boolean isGcVerificationNeeded_;
    /**
     * <code>optional bool isGcVerificationNeeded = 55;</code>
     */
    public boolean hasIsGcVerificationNeeded() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool isGcVerificationNeeded = 55;</code>
     */
    public boolean getIsGcVerificationNeeded() {
      return isGcVerificationNeeded_;
    }

    public static final int ISECREDUNDANT_FIELD_NUMBER = 56;
    private boolean isEcRedundant_;
    /**
     * <code>optional bool isEcRedundant = 56;</code>
     */
    public boolean hasIsEcRedundant() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool isEcRedundant = 56;</code>
     */
    public boolean getIsEcRedundant() {
      return isEcRedundant_;
    }

    public static final int REPGROUPUUID_FIELD_NUMBER = 57;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid repGroupUuid_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid repGroupUuid = 57;</code>
     */
    public boolean hasRepGroupUuid() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid repGroupUuid = 57;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid getRepGroupUuid() {
      return repGroupUuid_;
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid repGroupUuid = 57;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder getRepGroupUuidOrBuilder() {
      return repGroupUuid_;
    }

    public static final int PRIMARYUUID_FIELD_NUMBER = 58;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid primaryUuid_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid primaryUuid = 58;</code>
     */
    public boolean hasPrimaryUuid() {
      return ((bitField1_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid primaryUuid = 58;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid getPrimaryUuid() {
      return primaryUuid_;
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid primaryUuid = 58;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder getPrimaryUuidOrBuilder() {
      return primaryUuid_;
    }

    public static final int PARITYCHUNKUUID_FIELD_NUMBER = 59;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid parityChunkUuid_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid parityChunkUuid = 59;</code>
     */
    public boolean hasParityChunkUuid() {
      return ((bitField1_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid parityChunkUuid = 59;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid getParityChunkUuid() {
      return parityChunkUuid_;
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid parityChunkUuid = 59;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder getParityChunkUuidOrBuilder() {
      return parityChunkUuid_;
    }

    public static final int CMPENDINGFORFREESPACESTATS_FIELD_NUMBER = 60;
    private boolean cmPendingForFreeSpaceStats_;
    /**
     * <code>optional bool cmPendingForFreeSpaceStats = 60;</code>
     *
     * <pre>
     *Only used to mark if pendingForFreeSpaceStats stats is added for chunk
     * </pre>
     */
    public boolean hasCmPendingForFreeSpaceStats() {
      return ((bitField1_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool cmPendingForFreeSpaceStats = 60;</code>
     *
     * <pre>
     *Only used to mark if pendingForFreeSpaceStats stats is added for chunk
     * </pre>
     */
    public boolean getCmPendingForFreeSpaceStats() {
      return cmPendingForFreeSpaceStats_;
    }

    public static final int PARTIALSRCOPIEDDATA_FIELD_NUMBER = 61;
    private long partialSRCopiedData_;
    /**
     * <code>optional int64 partialSRCopiedData = 61;</code>
     */
    public boolean hasPartialSRCopiedData() {
      return ((bitField1_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int64 partialSRCopiedData = 61;</code>
     */
    public long getPartialSRCopiedData() {
      return partialSRCopiedData_;
    }

    public static final int BTREECHUNKDATATYPE_FIELD_NUMBER = 62;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BTreeChunkDataType bTreeChunkDataType_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BTreeChunkDataType bTreeChunkDataType = 62 [default = GENERAL];</code>
     */
    public boolean hasBTreeChunkDataType() {
      return ((bitField1_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BTreeChunkDataType bTreeChunkDataType = 62 [default = GENERAL];</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BTreeChunkDataType getBTreeChunkDataType() {
      return bTreeChunkDataType_;
    }

    public static final int ISPAGETABLE_FIELD_NUMBER = 63;
    private boolean isPageTable_;
    /**
     * <code>optional bool isPageTable = 63;</code>
     *
     * <pre>
     *a flag to indicate whether should geo replicate for bootstrap
     * </pre>
     */
    public boolean hasIsPageTable() {
      return ((bitField1_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional bool isPageTable = 63;</code>
     *
     * <pre>
     *a flag to indicate whether should geo replicate for bootstrap
     * </pre>
     */
    public boolean getIsPageTable() {
      return isPageTable_;
    }

    public static final int SHOULDSHIP_FIELD_NUMBER = 64;
    private boolean shouldShip_;
    /**
     * <code>optional bool shouldShip = 64;</code>
     */
    public boolean hasShouldShip() {
      return ((bitField1_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional bool shouldShip = 64;</code>
     */
    public boolean getShouldShip() {
      return shouldShip_;
    }

    public static final int MAXKNOWNJOURNALREPLAYLENGTH_FIELD_NUMBER = 65;
    private int maxKnownJournalReplayLength_;
    /**
     * <code>optional int32 maxKnownJournalReplayLength = 65;</code>
     *
     * <pre>
     * If journal chunk is active, DTInit find valid chunk length and replay the content, persistent valid length
     * in this filed, the journal seal length should larger than it.
     * </pre>
     */
    public boolean hasMaxKnownJournalReplayLength() {
      return ((bitField1_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 maxKnownJournalReplayLength = 65;</code>
     *
     * <pre>
     * If journal chunk is active, DTInit find valid chunk length and replay the content, persistent valid length
     * in this filed, the journal seal length should larger than it.
     * </pre>
     */
    public int getMaxKnownJournalReplayLength() {
      return maxKnownJournalReplayLength_;
    }

    public static final int EPOCH_FIELD_NUMBER = 66;
    private java.lang.Object epoch_;
    /**
     * <code>optional string epoch = 66;</code>
     */
    public boolean hasEpoch() {
      return ((bitField1_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional string epoch = 66;</code>
     */
    public java.lang.String getEpoch() {
      java.lang.Object ref = epoch_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          epoch_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string epoch = 66;</code>
     */
    public com.google.protobuf.ByteString
        getEpochBytes() {
      java.lang.Object ref = epoch_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        epoch_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MAXWRITEBLOCKSIZE_FIELD_NUMBER = 67;
    private int maxWriteBlockSize_;
    /**
     * <code>optional int32 maxWriteBlockSize = 67;</code>
     *
     * <pre>
     * for big hummer
     * </pre>
     */
    public boolean hasMaxWriteBlockSize() {
      return ((bitField1_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 maxWriteBlockSize = 67;</code>
     *
     * <pre>
     * for big hummer
     * </pre>
     */
    public int getMaxWriteBlockSize() {
      return maxWriteBlockSize_;
    }

    public static final int STORAGEPOLICY_FIELD_NUMBER = 68;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy storagePolicy_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 68;</code>
     */
    public boolean hasStoragePolicy() {
      return ((bitField1_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 68;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy getStoragePolicy() {
      return storagePolicy_;
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 68;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicyOrBuilder getStoragePolicyOrBuilder() {
      return storagePolicy_;
    }

    public static final int GENERATEDSRPRECHECKTASK_FIELD_NUMBER = 69;
    private boolean generatedSRPrecheckTask_;
    /**
     * <code>optional bool generatedSRPrecheckTask = 69;</code>
     *
     * <pre>
     * if has generated precheck task
     * </pre>
     */
    public boolean hasGeneratedSRPrecheckTask() {
      return ((bitField1_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional bool generatedSRPrecheckTask = 69;</code>
     *
     * <pre>
     * if has generated precheck task
     * </pre>
     */
    public boolean getGeneratedSRPrecheckTask() {
      return generatedSRPrecheckTask_;
    }

    public static final int SOURCE_FIELD_NUMBER = 70;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Source source_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Source source = 70;</code>
     */
    public boolean hasSource() {
      return ((bitField1_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Source source = 70;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Source getSource() {
      return source_;
    }

    public static final int EVERFORCECHECKEDRECLAIMABLE_FIELD_NUMBER = 71;
    private boolean everForceCheckedReclaimable_;
    /**
     * <code>optional bool everForceCheckedReclaimable = 71;</code>
     *
     * <pre>
     * if has ever force checked reclaimable/canSkipGCVerification regardless RepoReferenceCollectorStatus
     * </pre>
     */
    public boolean hasEverForceCheckedReclaimable() {
      return ((bitField1_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional bool everForceCheckedReclaimable = 71;</code>
     *
     * <pre>
     * if has ever force checked reclaimable/canSkipGCVerification regardless RepoReferenceCollectorStatus
     * </pre>
     */
    public boolean getEverForceCheckedReclaimable() {
      return everForceCheckedReclaimable_;
    }

    public static final int DATAREPOFREE_FIELD_NUMBER = 72;
    private int dataRepoFree_;
    /**
     * <code>optional int32 dataRepoFree = 72;</code>
     *
     * <pre>
     * Total amount of data of free full virtual segments for ECed repo chunks
     * </pre>
     */
    public boolean hasDataRepoFree() {
      return ((bitField1_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int32 dataRepoFree = 72;</code>
     *
     * <pre>
     * Total amount of data of free full virtual segments for ECed repo chunks
     * </pre>
     */
    public int getDataRepoFree() {
      return dataRepoFree_;
    }

    public static final int INDEXGRANULARITY_FIELD_NUMBER = 73;
    private int indexGranularity_;
    /**
     * <code>optional int32 indexGranularity = 73;</code>
     */
    public boolean hasIndexGranularity() {
      return ((bitField1_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int32 indexGranularity = 73;</code>
     */
    public int getIndexGranularity() {
      return indexGranularity_;
    }

    public static final int ORIGINALKEY_FIELD_NUMBER = 74;
    private java.lang.Object originalKey_;
    /**
     * <code>optional string originalKey = 74;</code>
     */
    public boolean hasOriginalKey() {
      return ((bitField1_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional string originalKey = 74;</code>
     */
    public java.lang.String getOriginalKey() {
      java.lang.Object ref = originalKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          originalKey_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string originalKey = 74;</code>
     */
    public com.google.protobuf.ByteString
        getOriginalKeyBytes() {
      java.lang.Object ref = originalKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        originalKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TAG_FIELD_NUMBER = 75;
    private long tag_;
    /**
     * <code>optional int64 tag = 75;</code>
     */
    public boolean hasTag() {
      return ((bitField1_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional int64 tag = 75;</code>
     */
    public long getTag() {
      return tag_;
    }

    private void initFields() {
      status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkStatus.ACTIVE;
      dataType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType.REPO;
      type_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType.LOCAL;
      repGroup_ = "";
      primary_ = "";
      secondaries_ = java.util.Collections.emptyList();
      parityChunk_ = "";
      encodedChunks_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      copies_ = java.util.Collections.emptyList();
      capacity_ = 0;
      sealedLength_ = 0;
      autoSealTime_ = 0L;
      sealedTime_ = 0L;
      isEcEncoded_ = false;
      shouldSeal_ = false;
      sequenceNumber_ = 0L;
      minNotSealedSequenceNumber_ = 0L;
      checksum_ = "";
      shadow_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
      isEcRetiring_ = false;
      skipRepoGc_ = false;
      noBlockLevelVerification_ = false;
      lastAccessTime_ = 0L;
      lastKnownLength_ = 0;
      repoChunkType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RepoChunkType.TYPE_I;
      shadowCopy_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.getDefaultInstance();
      geoCopies_ = java.util.Collections.emptyList();
      geoTrackTime_ = 0L;
      geoProgress_ = java.util.Collections.emptyList();
      originalPrimary_ = "";
      deletedTime_ = 0L;
      customState_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCustomState.PARTIALGC_COPYFROM;
      failoverZone_ = "";
      isGCReady_ = false;
      dtTypes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      alignmentSize_ = 0;
      encodedCopies_ = java.util.Collections.emptyList();
      checksumForEncodedCopies_ = 0;
      usingXorGeoShipping_ = false;
      freeShadowBlocks_ = false;
      chunkInfoByRanges_ = java.util.Collections.emptyList();
      pendingEncodeChunks_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      sealingInProgress_ = false;
      everTryRemoveTypeII_ = false;
      createTime_ = 0L;
      isGcVerificationNeeded_ = false;
      isEcRedundant_ = false;
      repGroupUuid_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance();
      primaryUuid_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance();
      parityChunkUuid_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance();
      cmPendingForFreeSpaceStats_ = false;
      partialSRCopiedData_ = 0L;
      bTreeChunkDataType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BTreeChunkDataType.GENERAL;
      isPageTable_ = false;
      shouldShip_ = false;
      maxKnownJournalReplayLength_ = 0;
      epoch_ = "";
      maxWriteBlockSize_ = 0;
      storagePolicy_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.getDefaultInstance();
      generatedSRPrecheckTask_ = false;
      source_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Source.USER_INJECTED;
      everForceCheckedReclaimable_ = false;
      dataRepoFree_ = 0;
      indexGranularity_ = 0;
      originalKey_ = "";
      tag_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDataType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSequenceNumber()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMinNotSealedSequenceNumber()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSecondariesCount(); i++) {
        if (!getSecondaries(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getCopiesCount(); i++) {
        if (!getCopies(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasShadow()) {
        if (!getShadow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasShadowCopy()) {
        if (!getShadowCopy().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getGeoCopiesCount(); i++) {
        if (!getGeoCopies(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getGeoProgressCount(); i++) {
        if (!getGeoProgress(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getEncodedCopiesCount(); i++) {
        if (!getEncodedCopies(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getChunkInfoByRangesCount(); i++) {
        if (!getChunkInfoByRanges(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasStoragePolicy()) {
        if (!getStoragePolicy().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, dataType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, type_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getRepGroupBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getPrimaryBytes());
      }
      for (int i = 0; i < secondaries_.size(); i++) {
        output.writeMessage(6, secondaries_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(7, getParityChunkBytes());
      }
      for (int i = 0; i < encodedChunks_.size(); i++) {
        output.writeBytes(8, encodedChunks_.getByteString(i));
      }
      for (int i = 0; i < copies_.size(); i++) {
        output.writeMessage(9, copies_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(10, capacity_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(11, sealedLength_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt64(12, autoSealTime_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt64(13, sealedTime_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(14, isEcEncoded_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(15, shouldSeal_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(16, sequenceNumber_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(17, minNotSealedSequenceNumber_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(18, getChecksumBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(19, shadow_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBool(20, isEcRetiring_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeBool(21, skipRepoGc_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeBool(22, noBlockLevelVerification_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt64(23, lastAccessTime_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(24, lastKnownLength_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeEnum(25, repoChunkType_.getNumber());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeMessage(26, shadowCopy_);
      }
      for (int i = 0; i < geoCopies_.size(); i++) {
        output.writeMessage(27, geoCopies_.get(i));
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeUInt64(28, geoTrackTime_);
      }
      for (int i = 0; i < geoProgress_.size(); i++) {
        output.writeMessage(29, geoProgress_.get(i));
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeBytes(30, getOriginalPrimaryBytes());
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeInt64(31, deletedTime_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeEnum(32, customState_.getNumber());
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeBytes(33, getFailoverZoneBytes());
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeBool(34, isGCReady_);
      }
      for (int i = 0; i < dtTypes_.size(); i++) {
        output.writeBytes(35, dtTypes_.getByteString(i));
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeInt32(36, alignmentSize_);
      }
      for (int i = 0; i < encodedCopies_.size(); i++) {
        output.writeMessage(37, encodedCopies_.get(i));
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeInt32(38, checksumForEncodedCopies_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeBool(39, usingXorGeoShipping_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeBool(40, freeShadowBlocks_);
      }
      for (int i = 0; i < chunkInfoByRanges_.size(); i++) {
        output.writeMessage(50, chunkInfoByRanges_.get(i));
      }
      for (int i = 0; i < pendingEncodeChunks_.size(); i++) {
        output.writeBytes(51, pendingEncodeChunks_.getByteString(i));
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeBool(52, sealingInProgress_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeBool(53, everTryRemoveTypeII_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(54, createTime_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeBool(55, isGcVerificationNeeded_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeBool(56, isEcRedundant_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(57, repGroupUuid_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(58, primaryUuid_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(59, parityChunkUuid_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        output.writeBool(60, cmPendingForFreeSpaceStats_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        output.writeInt64(61, partialSRCopiedData_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        output.writeEnum(62, bTreeChunkDataType_.getNumber());
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        output.writeBool(63, isPageTable_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        output.writeBool(64, shouldShip_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(65, maxKnownJournalReplayLength_);
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        output.writeBytes(66, getEpochBytes());
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(67, maxWriteBlockSize_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(68, storagePolicy_);
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        output.writeBool(69, generatedSRPrecheckTask_);
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        output.writeEnum(70, source_.getNumber());
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        output.writeBool(71, everForceCheckedReclaimable_);
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(72, dataRepoFree_);
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(73, indexGranularity_);
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        output.writeBytes(74, getOriginalKeyBytes());
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        output.writeInt64(75, tag_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, dataType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, type_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getRepGroupBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getPrimaryBytes());
      }
      for (int i = 0; i < secondaries_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, secondaries_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getParityChunkBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < encodedChunks_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(encodedChunks_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getEncodedChunksList().size();
      }
      for (int i = 0; i < copies_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, copies_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, capacity_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, sealedLength_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(12, autoSealTime_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, sealedTime_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, isEcEncoded_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, shouldSeal_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(16, sequenceNumber_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(17, minNotSealedSequenceNumber_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(18, getChecksumBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, shadow_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(20, isEcRetiring_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(21, skipRepoGc_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(22, noBlockLevelVerification_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(23, lastAccessTime_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, lastKnownLength_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(25, repoChunkType_.getNumber());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(26, shadowCopy_);
      }
      for (int i = 0; i < geoCopies_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(27, geoCopies_.get(i));
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(28, geoTrackTime_);
      }
      for (int i = 0; i < geoProgress_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(29, geoProgress_.get(i));
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(30, getOriginalPrimaryBytes());
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(31, deletedTime_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(32, customState_.getNumber());
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(33, getFailoverZoneBytes());
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(34, isGCReady_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dtTypes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(dtTypes_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getDtTypesList().size();
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(36, alignmentSize_);
      }
      for (int i = 0; i < encodedCopies_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(37, encodedCopies_.get(i));
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(38, checksumForEncodedCopies_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(39, usingXorGeoShipping_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(40, freeShadowBlocks_);
      }
      for (int i = 0; i < chunkInfoByRanges_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(50, chunkInfoByRanges_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < pendingEncodeChunks_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(pendingEncodeChunks_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getPendingEncodeChunksList().size();
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(52, sealingInProgress_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(53, everTryRemoveTypeII_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(54, createTime_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(55, isGcVerificationNeeded_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(56, isEcRedundant_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(57, repGroupUuid_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(58, primaryUuid_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(59, parityChunkUuid_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(60, cmPendingForFreeSpaceStats_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(61, partialSRCopiedData_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(62, bTreeChunkDataType_.getNumber());
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(63, isPageTable_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(64, shouldShip_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(65, maxKnownJournalReplayLength_);
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(66, getEpochBytes());
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(67, maxWriteBlockSize_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(68, storagePolicy_);
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(69, generatedSRPrecheckTask_);
      }
      if (((bitField1_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(70, source_.getNumber());
      }
      if (((bitField1_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(71, everForceCheckedReclaimable_);
      }
      if (((bitField1_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(72, dataRepoFree_);
      }
      if (((bitField1_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(73, indexGranularity_);
      }
      if (((bitField1_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(74, getOriginalKeyBytes());
      }
      if (((bitField1_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(75, tag_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSecondariesFieldBuilder();
          getCopiesFieldBuilder();
          getShadowFieldBuilder();
          getShadowCopyFieldBuilder();
          getGeoCopiesFieldBuilder();
          getGeoProgressFieldBuilder();
          getEncodedCopiesFieldBuilder();
          getChunkInfoByRangesFieldBuilder();
          getRepGroupUuidFieldBuilder();
          getPrimaryUuidFieldBuilder();
          getParityChunkUuidFieldBuilder();
          getStoragePolicyFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkStatus.ACTIVE;
        bitField0_ = (bitField0_ & ~0x00000001);
        dataType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType.REPO;
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType.LOCAL;
        bitField0_ = (bitField0_ & ~0x00000004);
        repGroup_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        primary_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        if (secondariesBuilder_ == null) {
          secondaries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          secondariesBuilder_.clear();
        }
        parityChunk_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        encodedChunks_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (copiesBuilder_ == null) {
          copies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          copiesBuilder_.clear();
        }
        capacity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        sealedLength_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        autoSealTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000800);
        sealedTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        isEcEncoded_ = false;
        bitField0_ = (bitField0_ & ~0x00002000);
        shouldSeal_ = false;
        bitField0_ = (bitField0_ & ~0x00004000);
        sequenceNumber_ = 0L;
        bitField0_ = (bitField0_ & ~0x00008000);
        minNotSealedSequenceNumber_ = 0L;
        bitField0_ = (bitField0_ & ~0x00010000);
        checksum_ = "";
        bitField0_ = (bitField0_ & ~0x00020000);
        if (shadowBuilder_ == null) {
          shadow_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
        } else {
          shadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        isEcRetiring_ = false;
        bitField0_ = (bitField0_ & ~0x00080000);
        skipRepoGc_ = false;
        bitField0_ = (bitField0_ & ~0x00100000);
        noBlockLevelVerification_ = false;
        bitField0_ = (bitField0_ & ~0x00200000);
        lastAccessTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00400000);
        lastKnownLength_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        repoChunkType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RepoChunkType.TYPE_I;
        bitField0_ = (bitField0_ & ~0x01000000);
        if (shadowCopyBuilder_ == null) {
          shadowCopy_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.getDefaultInstance();
        } else {
          shadowCopyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x02000000);
        if (geoCopiesBuilder_ == null) {
          geoCopies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x04000000);
        } else {
          geoCopiesBuilder_.clear();
        }
        geoTrackTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x08000000);
        if (geoProgressBuilder_ == null) {
          geoProgress_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x10000000);
        } else {
          geoProgressBuilder_.clear();
        }
        originalPrimary_ = "";
        bitField0_ = (bitField0_ & ~0x20000000);
        deletedTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x40000000);
        customState_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCustomState.PARTIALGC_COPYFROM;
        bitField0_ = (bitField0_ & ~0x80000000);
        failoverZone_ = "";
        bitField1_ = (bitField1_ & ~0x00000001);
        isGCReady_ = false;
        bitField1_ = (bitField1_ & ~0x00000002);
        dtTypes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField1_ = (bitField1_ & ~0x00000004);
        alignmentSize_ = 0;
        bitField1_ = (bitField1_ & ~0x00000008);
        if (encodedCopiesBuilder_ == null) {
          encodedCopies_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000010);
        } else {
          encodedCopiesBuilder_.clear();
        }
        checksumForEncodedCopies_ = 0;
        bitField1_ = (bitField1_ & ~0x00000020);
        usingXorGeoShipping_ = false;
        bitField1_ = (bitField1_ & ~0x00000040);
        freeShadowBlocks_ = false;
        bitField1_ = (bitField1_ & ~0x00000080);
        if (chunkInfoByRangesBuilder_ == null) {
          chunkInfoByRanges_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000100);
        } else {
          chunkInfoByRangesBuilder_.clear();
        }
        pendingEncodeChunks_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField1_ = (bitField1_ & ~0x00000200);
        sealingInProgress_ = false;
        bitField1_ = (bitField1_ & ~0x00000400);
        everTryRemoveTypeII_ = false;
        bitField1_ = (bitField1_ & ~0x00000800);
        createTime_ = 0L;
        bitField1_ = (bitField1_ & ~0x00001000);
        isGcVerificationNeeded_ = false;
        bitField1_ = (bitField1_ & ~0x00002000);
        isEcRedundant_ = false;
        bitField1_ = (bitField1_ & ~0x00004000);
        if (repGroupUuidBuilder_ == null) {
          repGroupUuid_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance();
        } else {
          repGroupUuidBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00008000);
        if (primaryUuidBuilder_ == null) {
          primaryUuid_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance();
        } else {
          primaryUuidBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00010000);
        if (parityChunkUuidBuilder_ == null) {
          parityChunkUuid_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance();
        } else {
          parityChunkUuidBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00020000);
        cmPendingForFreeSpaceStats_ = false;
        bitField1_ = (bitField1_ & ~0x00040000);
        partialSRCopiedData_ = 0L;
        bitField1_ = (bitField1_ & ~0x00080000);
        bTreeChunkDataType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BTreeChunkDataType.GENERAL;
        bitField1_ = (bitField1_ & ~0x00100000);
        isPageTable_ = false;
        bitField1_ = (bitField1_ & ~0x00200000);
        shouldShip_ = false;
        bitField1_ = (bitField1_ & ~0x00400000);
        maxKnownJournalReplayLength_ = 0;
        bitField1_ = (bitField1_ & ~0x00800000);
        epoch_ = "";
        bitField1_ = (bitField1_ & ~0x01000000);
        maxWriteBlockSize_ = 0;
        bitField1_ = (bitField1_ & ~0x02000000);
        if (storagePolicyBuilder_ == null) {
          storagePolicy_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.getDefaultInstance();
        } else {
          storagePolicyBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x04000000);
        generatedSRPrecheckTask_ = false;
        bitField1_ = (bitField1_ & ~0x08000000);
        source_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Source.USER_INJECTED;
        bitField1_ = (bitField1_ & ~0x10000000);
        everForceCheckedReclaimable_ = false;
        bitField1_ = (bitField1_ & ~0x20000000);
        dataRepoFree_ = 0;
        bitField1_ = (bitField1_ & ~0x40000000);
        indexGranularity_ = 0;
        bitField1_ = (bitField1_ & ~0x80000000);
        originalKey_ = "";
        bitField2_ = (bitField2_ & ~0x00000001);
        tag_ = 0L;
        bitField2_ = (bitField2_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkInfo_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int from_bitField2_ = bitField2_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dataType_ = dataType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.repGroup_ = repGroup_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.primary_ = primary_;
        if (secondariesBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            secondaries_ = java.util.Collections.unmodifiableList(secondaries_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.secondaries_ = secondaries_;
        } else {
          result.secondaries_ = secondariesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.parityChunk_ = parityChunk_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          encodedChunks_ = encodedChunks_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.encodedChunks_ = encodedChunks_;
        if (copiesBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            copies_ = java.util.Collections.unmodifiableList(copies_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.copies_ = copies_;
        } else {
          result.copies_ = copiesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000040;
        }
        result.capacity_ = capacity_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000080;
        }
        result.sealedLength_ = sealedLength_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000100;
        }
        result.autoSealTime_ = autoSealTime_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.sealedTime_ = sealedTime_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.isEcEncoded_ = isEcEncoded_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.shouldSeal_ = shouldSeal_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.sequenceNumber_ = sequenceNumber_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.minNotSealedSequenceNumber_ = minNotSealedSequenceNumber_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.checksum_ = checksum_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00008000;
        }
        if (shadowBuilder_ == null) {
          result.shadow_ = shadow_;
        } else {
          result.shadow_ = shadowBuilder_.build();
        }
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.isEcRetiring_ = isEcRetiring_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.skipRepoGc_ = skipRepoGc_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.noBlockLevelVerification_ = noBlockLevelVerification_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.lastAccessTime_ = lastAccessTime_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.lastKnownLength_ = lastKnownLength_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.repoChunkType_ = repoChunkType_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x00400000;
        }
        if (shadowCopyBuilder_ == null) {
          result.shadowCopy_ = shadowCopy_;
        } else {
          result.shadowCopy_ = shadowCopyBuilder_.build();
        }
        if (geoCopiesBuilder_ == null) {
          if (((bitField0_ & 0x04000000) == 0x04000000)) {
            geoCopies_ = java.util.Collections.unmodifiableList(geoCopies_);
            bitField0_ = (bitField0_ & ~0x04000000);
          }
          result.geoCopies_ = geoCopies_;
        } else {
          result.geoCopies_ = geoCopiesBuilder_.build();
        }
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.geoTrackTime_ = geoTrackTime_;
        if (geoProgressBuilder_ == null) {
          if (((bitField0_ & 0x10000000) == 0x10000000)) {
            geoProgress_ = java.util.Collections.unmodifiableList(geoProgress_);
            bitField0_ = (bitField0_ & ~0x10000000);
          }
          result.geoProgress_ = geoProgress_;
        } else {
          result.geoProgress_ = geoProgressBuilder_.build();
        }
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.originalPrimary_ = originalPrimary_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.deletedTime_ = deletedTime_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.customState_ = customState_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x08000000;
        }
        result.failoverZone_ = failoverZone_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x10000000;
        }
        result.isGCReady_ = isGCReady_;
        if (((bitField1_ & 0x00000004) == 0x00000004)) {
          dtTypes_ = dtTypes_.getUnmodifiableView();
          bitField1_ = (bitField1_ & ~0x00000004);
        }
        result.dtTypes_ = dtTypes_;
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x20000000;
        }
        result.alignmentSize_ = alignmentSize_;
        if (encodedCopiesBuilder_ == null) {
          if (((bitField1_ & 0x00000010) == 0x00000010)) {
            encodedCopies_ = java.util.Collections.unmodifiableList(encodedCopies_);
            bitField1_ = (bitField1_ & ~0x00000010);
          }
          result.encodedCopies_ = encodedCopies_;
        } else {
          result.encodedCopies_ = encodedCopiesBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x40000000;
        }
        result.checksumForEncodedCopies_ = checksumForEncodedCopies_;
        if (((from_bitField1_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x80000000;
        }
        result.usingXorGeoShipping_ = usingXorGeoShipping_;
        if (((from_bitField1_ & 0x00000080) == 0x00000080)) {
          to_bitField1_ |= 0x00000001;
        }
        result.freeShadowBlocks_ = freeShadowBlocks_;
        if (chunkInfoByRangesBuilder_ == null) {
          if (((bitField1_ & 0x00000100) == 0x00000100)) {
            chunkInfoByRanges_ = java.util.Collections.unmodifiableList(chunkInfoByRanges_);
            bitField1_ = (bitField1_ & ~0x00000100);
          }
          result.chunkInfoByRanges_ = chunkInfoByRanges_;
        } else {
          result.chunkInfoByRanges_ = chunkInfoByRangesBuilder_.build();
        }
        if (((bitField1_ & 0x00000200) == 0x00000200)) {
          pendingEncodeChunks_ = pendingEncodeChunks_.getUnmodifiableView();
          bitField1_ = (bitField1_ & ~0x00000200);
        }
        result.pendingEncodeChunks_ = pendingEncodeChunks_;
        if (((from_bitField1_ & 0x00000400) == 0x00000400)) {
          to_bitField1_ |= 0x00000002;
        }
        result.sealingInProgress_ = sealingInProgress_;
        if (((from_bitField1_ & 0x00000800) == 0x00000800)) {
          to_bitField1_ |= 0x00000004;
        }
        result.everTryRemoveTypeII_ = everTryRemoveTypeII_;
        if (((from_bitField1_ & 0x00001000) == 0x00001000)) {
          to_bitField1_ |= 0x00000008;
        }
        result.createTime_ = createTime_;
        if (((from_bitField1_ & 0x00002000) == 0x00002000)) {
          to_bitField1_ |= 0x00000010;
        }
        result.isGcVerificationNeeded_ = isGcVerificationNeeded_;
        if (((from_bitField1_ & 0x00004000) == 0x00004000)) {
          to_bitField1_ |= 0x00000020;
        }
        result.isEcRedundant_ = isEcRedundant_;
        if (((from_bitField1_ & 0x00008000) == 0x00008000)) {
          to_bitField1_ |= 0x00000040;
        }
        if (repGroupUuidBuilder_ == null) {
          result.repGroupUuid_ = repGroupUuid_;
        } else {
          result.repGroupUuid_ = repGroupUuidBuilder_.build();
        }
        if (((from_bitField1_ & 0x00010000) == 0x00010000)) {
          to_bitField1_ |= 0x00000080;
        }
        if (primaryUuidBuilder_ == null) {
          result.primaryUuid_ = primaryUuid_;
        } else {
          result.primaryUuid_ = primaryUuidBuilder_.build();
        }
        if (((from_bitField1_ & 0x00020000) == 0x00020000)) {
          to_bitField1_ |= 0x00000100;
        }
        if (parityChunkUuidBuilder_ == null) {
          result.parityChunkUuid_ = parityChunkUuid_;
        } else {
          result.parityChunkUuid_ = parityChunkUuidBuilder_.build();
        }
        if (((from_bitField1_ & 0x00040000) == 0x00040000)) {
          to_bitField1_ |= 0x00000200;
        }
        result.cmPendingForFreeSpaceStats_ = cmPendingForFreeSpaceStats_;
        if (((from_bitField1_ & 0x00080000) == 0x00080000)) {
          to_bitField1_ |= 0x00000400;
        }
        result.partialSRCopiedData_ = partialSRCopiedData_;
        if (((from_bitField1_ & 0x00100000) == 0x00100000)) {
          to_bitField1_ |= 0x00000800;
        }
        result.bTreeChunkDataType_ = bTreeChunkDataType_;
        if (((from_bitField1_ & 0x00200000) == 0x00200000)) {
          to_bitField1_ |= 0x00001000;
        }
        result.isPageTable_ = isPageTable_;
        if (((from_bitField1_ & 0x00400000) == 0x00400000)) {
          to_bitField1_ |= 0x00002000;
        }
        result.shouldShip_ = shouldShip_;
        if (((from_bitField1_ & 0x00800000) == 0x00800000)) {
          to_bitField1_ |= 0x00004000;
        }
        result.maxKnownJournalReplayLength_ = maxKnownJournalReplayLength_;
        if (((from_bitField1_ & 0x01000000) == 0x01000000)) {
          to_bitField1_ |= 0x00008000;
        }
        result.epoch_ = epoch_;
        if (((from_bitField1_ & 0x02000000) == 0x02000000)) {
          to_bitField1_ |= 0x00010000;
        }
        result.maxWriteBlockSize_ = maxWriteBlockSize_;
        if (((from_bitField1_ & 0x04000000) == 0x04000000)) {
          to_bitField1_ |= 0x00020000;
        }
        if (storagePolicyBuilder_ == null) {
          result.storagePolicy_ = storagePolicy_;
        } else {
          result.storagePolicy_ = storagePolicyBuilder_.build();
        }
        if (((from_bitField1_ & 0x08000000) == 0x08000000)) {
          to_bitField1_ |= 0x00040000;
        }
        result.generatedSRPrecheckTask_ = generatedSRPrecheckTask_;
        if (((from_bitField1_ & 0x10000000) == 0x10000000)) {
          to_bitField1_ |= 0x00080000;
        }
        result.source_ = source_;
        if (((from_bitField1_ & 0x20000000) == 0x20000000)) {
          to_bitField1_ |= 0x00100000;
        }
        result.everForceCheckedReclaimable_ = everForceCheckedReclaimable_;
        if (((from_bitField1_ & 0x40000000) == 0x40000000)) {
          to_bitField1_ |= 0x00200000;
        }
        result.dataRepoFree_ = dataRepoFree_;
        if (((from_bitField1_ & 0x80000000) == 0x80000000)) {
          to_bitField1_ |= 0x00400000;
        }
        result.indexGranularity_ = indexGranularity_;
        if (((from_bitField2_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00800000;
        }
        result.originalKey_ = originalKey_;
        if (((from_bitField2_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x01000000;
        }
        result.tag_ = tag_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasDataType()) {
          setDataType(other.getDataType());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasRepGroup()) {
          bitField0_ |= 0x00000008;
          repGroup_ = other.repGroup_;
          onChanged();
        }
        if (other.hasPrimary()) {
          bitField0_ |= 0x00000010;
          primary_ = other.primary_;
          onChanged();
        }
        if (secondariesBuilder_ == null) {
          if (!other.secondaries_.isEmpty()) {
            if (secondaries_.isEmpty()) {
              secondaries_ = other.secondaries_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureSecondariesIsMutable();
              secondaries_.addAll(other.secondaries_);
            }
            onChanged();
          }
        } else {
          if (!other.secondaries_.isEmpty()) {
            if (secondariesBuilder_.isEmpty()) {
              secondariesBuilder_.dispose();
              secondariesBuilder_ = null;
              secondaries_ = other.secondaries_;
              bitField0_ = (bitField0_ & ~0x00000020);
              secondariesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSecondariesFieldBuilder() : null;
            } else {
              secondariesBuilder_.addAllMessages(other.secondaries_);
            }
          }
        }
        if (other.hasParityChunk()) {
          bitField0_ |= 0x00000040;
          parityChunk_ = other.parityChunk_;
          onChanged();
        }
        if (!other.encodedChunks_.isEmpty()) {
          if (encodedChunks_.isEmpty()) {
            encodedChunks_ = other.encodedChunks_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureEncodedChunksIsMutable();
            encodedChunks_.addAll(other.encodedChunks_);
          }
          onChanged();
        }
        if (copiesBuilder_ == null) {
          if (!other.copies_.isEmpty()) {
            if (copies_.isEmpty()) {
              copies_ = other.copies_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureCopiesIsMutable();
              copies_.addAll(other.copies_);
            }
            onChanged();
          }
        } else {
          if (!other.copies_.isEmpty()) {
            if (copiesBuilder_.isEmpty()) {
              copiesBuilder_.dispose();
              copiesBuilder_ = null;
              copies_ = other.copies_;
              bitField0_ = (bitField0_ & ~0x00000100);
              copiesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCopiesFieldBuilder() : null;
            } else {
              copiesBuilder_.addAllMessages(other.copies_);
            }
          }
        }
        if (other.hasCapacity()) {
          setCapacity(other.getCapacity());
        }
        if (other.hasSealedLength()) {
          setSealedLength(other.getSealedLength());
        }
        if (other.hasAutoSealTime()) {
          setAutoSealTime(other.getAutoSealTime());
        }
        if (other.hasSealedTime()) {
          setSealedTime(other.getSealedTime());
        }
        if (other.hasIsEcEncoded()) {
          setIsEcEncoded(other.getIsEcEncoded());
        }
        if (other.hasShouldSeal()) {
          setShouldSeal(other.getShouldSeal());
        }
        if (other.hasSequenceNumber()) {
          setSequenceNumber(other.getSequenceNumber());
        }
        if (other.hasMinNotSealedSequenceNumber()) {
          setMinNotSealedSequenceNumber(other.getMinNotSealedSequenceNumber());
        }
        if (other.hasChecksum()) {
          bitField0_ |= 0x00020000;
          checksum_ = other.checksum_;
          onChanged();
        }
        if (other.hasShadow()) {
          mergeShadow(other.getShadow());
        }
        if (other.hasIsEcRetiring()) {
          setIsEcRetiring(other.getIsEcRetiring());
        }
        if (other.hasSkipRepoGc()) {
          setSkipRepoGc(other.getSkipRepoGc());
        }
        if (other.hasNoBlockLevelVerification()) {
          setNoBlockLevelVerification(other.getNoBlockLevelVerification());
        }
        if (other.hasLastAccessTime()) {
          setLastAccessTime(other.getLastAccessTime());
        }
        if (other.hasLastKnownLength()) {
          setLastKnownLength(other.getLastKnownLength());
        }
        if (other.hasRepoChunkType()) {
          setRepoChunkType(other.getRepoChunkType());
        }
        if (other.hasShadowCopy()) {
          mergeShadowCopy(other.getShadowCopy());
        }
        if (geoCopiesBuilder_ == null) {
          if (!other.geoCopies_.isEmpty()) {
            if (geoCopies_.isEmpty()) {
              geoCopies_ = other.geoCopies_;
              bitField0_ = (bitField0_ & ~0x04000000);
            } else {
              ensureGeoCopiesIsMutable();
              geoCopies_.addAll(other.geoCopies_);
            }
            onChanged();
          }
        } else {
          if (!other.geoCopies_.isEmpty()) {
            if (geoCopiesBuilder_.isEmpty()) {
              geoCopiesBuilder_.dispose();
              geoCopiesBuilder_ = null;
              geoCopies_ = other.geoCopies_;
              bitField0_ = (bitField0_ & ~0x04000000);
              geoCopiesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGeoCopiesFieldBuilder() : null;
            } else {
              geoCopiesBuilder_.addAllMessages(other.geoCopies_);
            }
          }
        }
        if (other.hasGeoTrackTime()) {
          setGeoTrackTime(other.getGeoTrackTime());
        }
        if (geoProgressBuilder_ == null) {
          if (!other.geoProgress_.isEmpty()) {
            if (geoProgress_.isEmpty()) {
              geoProgress_ = other.geoProgress_;
              bitField0_ = (bitField0_ & ~0x10000000);
            } else {
              ensureGeoProgressIsMutable();
              geoProgress_.addAll(other.geoProgress_);
            }
            onChanged();
          }
        } else {
          if (!other.geoProgress_.isEmpty()) {
            if (geoProgressBuilder_.isEmpty()) {
              geoProgressBuilder_.dispose();
              geoProgressBuilder_ = null;
              geoProgress_ = other.geoProgress_;
              bitField0_ = (bitField0_ & ~0x10000000);
              geoProgressBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGeoProgressFieldBuilder() : null;
            } else {
              geoProgressBuilder_.addAllMessages(other.geoProgress_);
            }
          }
        }
        if (other.hasOriginalPrimary()) {
          bitField0_ |= 0x20000000;
          originalPrimary_ = other.originalPrimary_;
          onChanged();
        }
        if (other.hasDeletedTime()) {
          setDeletedTime(other.getDeletedTime());
        }
        if (other.hasCustomState()) {
          setCustomState(other.getCustomState());
        }
        if (other.hasFailoverZone()) {
          bitField1_ |= 0x00000001;
          failoverZone_ = other.failoverZone_;
          onChanged();
        }
        if (other.hasIsGCReady()) {
          setIsGCReady(other.getIsGCReady());
        }
        if (!other.dtTypes_.isEmpty()) {
          if (dtTypes_.isEmpty()) {
            dtTypes_ = other.dtTypes_;
            bitField1_ = (bitField1_ & ~0x00000004);
          } else {
            ensureDtTypesIsMutable();
            dtTypes_.addAll(other.dtTypes_);
          }
          onChanged();
        }
        if (other.hasAlignmentSize()) {
          setAlignmentSize(other.getAlignmentSize());
        }
        if (encodedCopiesBuilder_ == null) {
          if (!other.encodedCopies_.isEmpty()) {
            if (encodedCopies_.isEmpty()) {
              encodedCopies_ = other.encodedCopies_;
              bitField1_ = (bitField1_ & ~0x00000010);
            } else {
              ensureEncodedCopiesIsMutable();
              encodedCopies_.addAll(other.encodedCopies_);
            }
            onChanged();
          }
        } else {
          if (!other.encodedCopies_.isEmpty()) {
            if (encodedCopiesBuilder_.isEmpty()) {
              encodedCopiesBuilder_.dispose();
              encodedCopiesBuilder_ = null;
              encodedCopies_ = other.encodedCopies_;
              bitField1_ = (bitField1_ & ~0x00000010);
              encodedCopiesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEncodedCopiesFieldBuilder() : null;
            } else {
              encodedCopiesBuilder_.addAllMessages(other.encodedCopies_);
            }
          }
        }
        if (other.hasChecksumForEncodedCopies()) {
          setChecksumForEncodedCopies(other.getChecksumForEncodedCopies());
        }
        if (other.hasUsingXorGeoShipping()) {
          setUsingXorGeoShipping(other.getUsingXorGeoShipping());
        }
        if (other.hasFreeShadowBlocks()) {
          setFreeShadowBlocks(other.getFreeShadowBlocks());
        }
        if (chunkInfoByRangesBuilder_ == null) {
          if (!other.chunkInfoByRanges_.isEmpty()) {
            if (chunkInfoByRanges_.isEmpty()) {
              chunkInfoByRanges_ = other.chunkInfoByRanges_;
              bitField1_ = (bitField1_ & ~0x00000100);
            } else {
              ensureChunkInfoByRangesIsMutable();
              chunkInfoByRanges_.addAll(other.chunkInfoByRanges_);
            }
            onChanged();
          }
        } else {
          if (!other.chunkInfoByRanges_.isEmpty()) {
            if (chunkInfoByRangesBuilder_.isEmpty()) {
              chunkInfoByRangesBuilder_.dispose();
              chunkInfoByRangesBuilder_ = null;
              chunkInfoByRanges_ = other.chunkInfoByRanges_;
              bitField1_ = (bitField1_ & ~0x00000100);
              chunkInfoByRangesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getChunkInfoByRangesFieldBuilder() : null;
            } else {
              chunkInfoByRangesBuilder_.addAllMessages(other.chunkInfoByRanges_);
            }
          }
        }
        if (!other.pendingEncodeChunks_.isEmpty()) {
          if (pendingEncodeChunks_.isEmpty()) {
            pendingEncodeChunks_ = other.pendingEncodeChunks_;
            bitField1_ = (bitField1_ & ~0x00000200);
          } else {
            ensurePendingEncodeChunksIsMutable();
            pendingEncodeChunks_.addAll(other.pendingEncodeChunks_);
          }
          onChanged();
        }
        if (other.hasSealingInProgress()) {
          setSealingInProgress(other.getSealingInProgress());
        }
        if (other.hasEverTryRemoveTypeII()) {
          setEverTryRemoveTypeII(other.getEverTryRemoveTypeII());
        }
        if (other.hasCreateTime()) {
          setCreateTime(other.getCreateTime());
        }
        if (other.hasIsGcVerificationNeeded()) {
          setIsGcVerificationNeeded(other.getIsGcVerificationNeeded());
        }
        if (other.hasIsEcRedundant()) {
          setIsEcRedundant(other.getIsEcRedundant());
        }
        if (other.hasRepGroupUuid()) {
          mergeRepGroupUuid(other.getRepGroupUuid());
        }
        if (other.hasPrimaryUuid()) {
          mergePrimaryUuid(other.getPrimaryUuid());
        }
        if (other.hasParityChunkUuid()) {
          mergeParityChunkUuid(other.getParityChunkUuid());
        }
        if (other.hasCmPendingForFreeSpaceStats()) {
          setCmPendingForFreeSpaceStats(other.getCmPendingForFreeSpaceStats());
        }
        if (other.hasPartialSRCopiedData()) {
          setPartialSRCopiedData(other.getPartialSRCopiedData());
        }
        if (other.hasBTreeChunkDataType()) {
          setBTreeChunkDataType(other.getBTreeChunkDataType());
        }
        if (other.hasIsPageTable()) {
          setIsPageTable(other.getIsPageTable());
        }
        if (other.hasShouldShip()) {
          setShouldShip(other.getShouldShip());
        }
        if (other.hasMaxKnownJournalReplayLength()) {
          setMaxKnownJournalReplayLength(other.getMaxKnownJournalReplayLength());
        }
        if (other.hasEpoch()) {
          bitField1_ |= 0x01000000;
          epoch_ = other.epoch_;
          onChanged();
        }
        if (other.hasMaxWriteBlockSize()) {
          setMaxWriteBlockSize(other.getMaxWriteBlockSize());
        }
        if (other.hasStoragePolicy()) {
          mergeStoragePolicy(other.getStoragePolicy());
        }
        if (other.hasGeneratedSRPrecheckTask()) {
          setGeneratedSRPrecheckTask(other.getGeneratedSRPrecheckTask());
        }
        if (other.hasSource()) {
          setSource(other.getSource());
        }
        if (other.hasEverForceCheckedReclaimable()) {
          setEverForceCheckedReclaimable(other.getEverForceCheckedReclaimable());
        }
        if (other.hasDataRepoFree()) {
          setDataRepoFree(other.getDataRepoFree());
        }
        if (other.hasIndexGranularity()) {
          setIndexGranularity(other.getIndexGranularity());
        }
        if (other.hasOriginalKey()) {
          bitField2_ |= 0x00000001;
          originalKey_ = other.originalKey_;
          onChanged();
        }
        if (other.hasTag()) {
          setTag(other.getTag());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStatus()) {
          
          return false;
        }
        if (!hasDataType()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasSequenceNumber()) {
          
          return false;
        }
        if (!hasMinNotSealedSequenceNumber()) {
          
          return false;
        }
        for (int i = 0; i < getSecondariesCount(); i++) {
          if (!getSecondaries(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getCopiesCount(); i++) {
          if (!getCopies(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasShadow()) {
          if (!getShadow().isInitialized()) {
            
            return false;
          }
        }
        if (hasShadowCopy()) {
          if (!getShadowCopy().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getGeoCopiesCount(); i++) {
          if (!getGeoCopies(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getGeoProgressCount(); i++) {
          if (!getGeoProgress(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getEncodedCopiesCount(); i++) {
          if (!getEncodedCopies(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getChunkInfoByRangesCount(); i++) {
          if (!getChunkInfoByRanges(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasStoragePolicy()) {
          if (!getStoragePolicy().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;
      private int bitField2_;

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkStatus status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkStatus.ACTIVE;
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkStatus status = 1;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkStatus status = 1;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkStatus getStatus() {
        return status_;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkStatus status = 1;</code>
       */
      public Builder setStatus(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkStatus status = 1;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkStatus.ACTIVE;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType dataType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType.REPO;
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDataType dataType = 2;</code>
       */
      public boolean hasDataType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDataType dataType = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType getDataType() {
        return dataType_;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDataType dataType = 2;</code>
       */
      public Builder setDataType(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        dataType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDataType dataType = 2;</code>
       */
      public Builder clearDataType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dataType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType.REPO;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType type_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType.LOCAL;
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkType type = 3;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkType type = 3;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType getType() {
        return type_;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkType type = 3;</code>
       */
      public Builder setType(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkType type = 3;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType.LOCAL;
        onChanged();
        return this;
      }

      private java.lang.Object repGroup_ = "";
      /**
       * <code>optional string repGroup = 4;</code>
       *
       * <pre>
       * replication group
       * </pre>
       */
      public boolean hasRepGroup() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string repGroup = 4;</code>
       *
       * <pre>
       * replication group
       * </pre>
       */
      public java.lang.String getRepGroup() {
        java.lang.Object ref = repGroup_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            repGroup_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string repGroup = 4;</code>
       *
       * <pre>
       * replication group
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRepGroupBytes() {
        java.lang.Object ref = repGroup_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          repGroup_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string repGroup = 4;</code>
       *
       * <pre>
       * replication group
       * </pre>
       */
      public Builder setRepGroup(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        repGroup_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string repGroup = 4;</code>
       *
       * <pre>
       * replication group
       * </pre>
       */
      public Builder clearRepGroup() {
        bitField0_ = (bitField0_ & ~0x00000008);
        repGroup_ = getDefaultInstance().getRepGroup();
        onChanged();
        return this;
      }
      /**
       * <code>optional string repGroup = 4;</code>
       *
       * <pre>
       * replication group
       * </pre>
       */
      public Builder setRepGroupBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        repGroup_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object primary_ = "";
      /**
       * <code>optional string primary = 5;</code>
       *
       * <pre>
       * zone of primary, present if type is REMOTE, COPY or ENCODED
       * </pre>
       */
      public boolean hasPrimary() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string primary = 5;</code>
       *
       * <pre>
       * zone of primary, present if type is REMOTE, COPY or ENCODED
       * </pre>
       */
      public java.lang.String getPrimary() {
        java.lang.Object ref = primary_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            primary_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string primary = 5;</code>
       *
       * <pre>
       * zone of primary, present if type is REMOTE, COPY or ENCODED
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPrimaryBytes() {
        java.lang.Object ref = primary_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          primary_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string primary = 5;</code>
       *
       * <pre>
       * zone of primary, present if type is REMOTE, COPY or ENCODED
       * </pre>
       */
      public Builder setPrimary(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        primary_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string primary = 5;</code>
       *
       * <pre>
       * zone of primary, present if type is REMOTE, COPY or ENCODED
       * </pre>
       */
      public Builder clearPrimary() {
        bitField0_ = (bitField0_ & ~0x00000010);
        primary_ = getDefaultInstance().getPrimary();
        onChanged();
        return this;
      }
      /**
       * <code>optional string primary = 5;</code>
       *
       * <pre>
       * zone of primary, present if type is REMOTE, COPY or ENCODED
       * </pre>
       */
      public Builder setPrimaryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        primary_ = value;
        onChanged();
        return this;
      }

      private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair> secondaries_ =
        java.util.Collections.emptyList();
      private void ensureSecondariesIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          secondaries_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair>(secondaries_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPairOrBuilder> secondariesBuilder_;

      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
       *
       * <pre>
       * zone of secondary, present if type is LOCAL or REMOTE
       * </pre>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair> getSecondariesList() {
        if (secondariesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(secondaries_);
        } else {
          return secondariesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
       *
       * <pre>
       * zone of secondary, present if type is LOCAL or REMOTE
       * </pre>
       */
      public int getSecondariesCount() {
        if (secondariesBuilder_ == null) {
          return secondaries_.size();
        } else {
          return secondariesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
       *
       * <pre>
       * zone of secondary, present if type is LOCAL or REMOTE
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair getSecondaries(int index) {
        if (secondariesBuilder_ == null) {
          return secondaries_.get(index);
        } else {
          return secondariesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
       *
       * <pre>
       * zone of secondary, present if type is LOCAL or REMOTE
       * </pre>
       */
      public Builder setSecondaries(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair value) {
        if (secondariesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSecondariesIsMutable();
          secondaries_.set(index, value);
          onChanged();
        } else {
          secondariesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
       *
       * <pre>
       * zone of secondary, present if type is LOCAL or REMOTE
       * </pre>
       */
      public Builder setSecondaries(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair.Builder builderForValue) {
        if (secondariesBuilder_ == null) {
          ensureSecondariesIsMutable();
          secondaries_.set(index, builderForValue.build());
          onChanged();
        } else {
          secondariesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
       *
       * <pre>
       * zone of secondary, present if type is LOCAL or REMOTE
       * </pre>
       */
      public Builder addSecondaries(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair value) {
        if (secondariesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSecondariesIsMutable();
          secondaries_.add(value);
          onChanged();
        } else {
          secondariesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
       *
       * <pre>
       * zone of secondary, present if type is LOCAL or REMOTE
       * </pre>
       */
      public Builder addSecondaries(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair value) {
        if (secondariesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSecondariesIsMutable();
          secondaries_.add(index, value);
          onChanged();
        } else {
          secondariesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
       *
       * <pre>
       * zone of secondary, present if type is LOCAL or REMOTE
       * </pre>
       */
      public Builder addSecondaries(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair.Builder builderForValue) {
        if (secondariesBuilder_ == null) {
          ensureSecondariesIsMutable();
          secondaries_.add(builderForValue.build());
          onChanged();
        } else {
          secondariesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
       *
       * <pre>
       * zone of secondary, present if type is LOCAL or REMOTE
       * </pre>
       */
      public Builder addSecondaries(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair.Builder builderForValue) {
        if (secondariesBuilder_ == null) {
          ensureSecondariesIsMutable();
          secondaries_.add(index, builderForValue.build());
          onChanged();
        } else {
          secondariesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
       *
       * <pre>
       * zone of secondary, present if type is LOCAL or REMOTE
       * </pre>
       */
      public Builder addAllSecondaries(
          java.lang.Iterable<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair> values) {
        if (secondariesBuilder_ == null) {
          ensureSecondariesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, secondaries_);
          onChanged();
        } else {
          secondariesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
       *
       * <pre>
       * zone of secondary, present if type is LOCAL or REMOTE
       * </pre>
       */
      public Builder clearSecondaries() {
        if (secondariesBuilder_ == null) {
          secondaries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          secondariesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
       *
       * <pre>
       * zone of secondary, present if type is LOCAL or REMOTE
       * </pre>
       */
      public Builder removeSecondaries(int index) {
        if (secondariesBuilder_ == null) {
          ensureSecondariesIsMutable();
          secondaries_.remove(index);
          onChanged();
        } else {
          secondariesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
       *
       * <pre>
       * zone of secondary, present if type is LOCAL or REMOTE
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair.Builder getSecondariesBuilder(
          int index) {
        return getSecondariesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
       *
       * <pre>
       * zone of secondary, present if type is LOCAL or REMOTE
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPairOrBuilder getSecondariesOrBuilder(
          int index) {
        if (secondariesBuilder_ == null) {
          return secondaries_.get(index);  } else {
          return secondariesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
       *
       * <pre>
       * zone of secondary, present if type is LOCAL or REMOTE
       * </pre>
       */
      public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPairOrBuilder> 
           getSecondariesOrBuilderList() {
        if (secondariesBuilder_ != null) {
          return secondariesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(secondaries_);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
       *
       * <pre>
       * zone of secondary, present if type is LOCAL or REMOTE
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair.Builder addSecondariesBuilder() {
        return getSecondariesFieldBuilder().addBuilder(
            io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
       *
       * <pre>
       * zone of secondary, present if type is LOCAL or REMOTE
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair.Builder addSecondariesBuilder(
          int index) {
        return getSecondariesFieldBuilder().addBuilder(
            index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SecondaryPair secondaries = 6;</code>
       *
       * <pre>
       * zone of secondary, present if type is LOCAL or REMOTE
       * </pre>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair.Builder> 
           getSecondariesBuilderList() {
        return getSecondariesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPairOrBuilder> 
          getSecondariesFieldBuilder() {
        if (secondariesBuilder_ == null) {
          secondariesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPair.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SecondaryPairOrBuilder>(
                  secondaries_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          secondaries_ = null;
        }
        return secondariesBuilder_;
      }

      private java.lang.Object parityChunk_ = "";
      /**
       * <code>optional string parityChunk = 7;</code>
       *
       * <pre>
       * parity chunk id, present if type is ENCODED
       * </pre>
       */
      public boolean hasParityChunk() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string parityChunk = 7;</code>
       *
       * <pre>
       * parity chunk id, present if type is ENCODED
       * </pre>
       */
      public java.lang.String getParityChunk() {
        java.lang.Object ref = parityChunk_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            parityChunk_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string parityChunk = 7;</code>
       *
       * <pre>
       * parity chunk id, present if type is ENCODED
       * </pre>
       */
      public com.google.protobuf.ByteString
          getParityChunkBytes() {
        java.lang.Object ref = parityChunk_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          parityChunk_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string parityChunk = 7;</code>
       *
       * <pre>
       * parity chunk id, present if type is ENCODED
       * </pre>
       */
      public Builder setParityChunk(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        parityChunk_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string parityChunk = 7;</code>
       *
       * <pre>
       * parity chunk id, present if type is ENCODED
       * </pre>
       */
      public Builder clearParityChunk() {
        bitField0_ = (bitField0_ & ~0x00000040);
        parityChunk_ = getDefaultInstance().getParityChunk();
        onChanged();
        return this;
      }
      /**
       * <code>optional string parityChunk = 7;</code>
       *
       * <pre>
       * parity chunk id, present if type is ENCODED
       * </pre>
       */
      public Builder setParityChunkBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        parityChunk_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList encodedChunks_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureEncodedChunksIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          encodedChunks_ = new com.google.protobuf.LazyStringArrayList(encodedChunks_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated string encodedChunks = 8;</code>
       *
       * <pre>
       * list of encoded chunk ids, present if type is PARITY
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getEncodedChunksList() {
        return encodedChunks_.getUnmodifiableView();
      }
      /**
       * <code>repeated string encodedChunks = 8;</code>
       *
       * <pre>
       * list of encoded chunk ids, present if type is PARITY
       * </pre>
       */
      public int getEncodedChunksCount() {
        return encodedChunks_.size();
      }
      /**
       * <code>repeated string encodedChunks = 8;</code>
       *
       * <pre>
       * list of encoded chunk ids, present if type is PARITY
       * </pre>
       */
      public java.lang.String getEncodedChunks(int index) {
        return encodedChunks_.get(index);
      }
      /**
       * <code>repeated string encodedChunks = 8;</code>
       *
       * <pre>
       * list of encoded chunk ids, present if type is PARITY
       * </pre>
       */
      public com.google.protobuf.ByteString
          getEncodedChunksBytes(int index) {
        return encodedChunks_.getByteString(index);
      }
      /**
       * <code>repeated string encodedChunks = 8;</code>
       *
       * <pre>
       * list of encoded chunk ids, present if type is PARITY
       * </pre>
       */
      public Builder setEncodedChunks(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureEncodedChunksIsMutable();
        encodedChunks_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string encodedChunks = 8;</code>
       *
       * <pre>
       * list of encoded chunk ids, present if type is PARITY
       * </pre>
       */
      public Builder addEncodedChunks(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureEncodedChunksIsMutable();
        encodedChunks_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string encodedChunks = 8;</code>
       *
       * <pre>
       * list of encoded chunk ids, present if type is PARITY
       * </pre>
       */
      public Builder addAllEncodedChunks(
          java.lang.Iterable<java.lang.String> values) {
        ensureEncodedChunksIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, encodedChunks_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string encodedChunks = 8;</code>
       *
       * <pre>
       * list of encoded chunk ids, present if type is PARITY
       * </pre>
       */
      public Builder clearEncodedChunks() {
        encodedChunks_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string encodedChunks = 8;</code>
       *
       * <pre>
       * list of encoded chunk ids, present if type is PARITY
       * </pre>
       */
      public Builder addEncodedChunksBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureEncodedChunksIsMutable();
        encodedChunks_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy> copies_ =
        java.util.Collections.emptyList();
      private void ensureCopiesIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          copies_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy>(copies_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder> copiesBuilder_;

      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
       *
       * <pre>
       * copies of chunk data, present if type is LOCAL, COPY or PARITY;
       * if type is REMOTE or ENCODED, present only when there is cached data
       * </pre>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy> getCopiesList() {
        if (copiesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(copies_);
        } else {
          return copiesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
       *
       * <pre>
       * copies of chunk data, present if type is LOCAL, COPY or PARITY;
       * if type is REMOTE or ENCODED, present only when there is cached data
       * </pre>
       */
      public int getCopiesCount() {
        if (copiesBuilder_ == null) {
          return copies_.size();
        } else {
          return copiesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
       *
       * <pre>
       * copies of chunk data, present if type is LOCAL, COPY or PARITY;
       * if type is REMOTE or ENCODED, present only when there is cached data
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy getCopies(int index) {
        if (copiesBuilder_ == null) {
          return copies_.get(index);
        } else {
          return copiesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
       *
       * <pre>
       * copies of chunk data, present if type is LOCAL, COPY or PARITY;
       * if type is REMOTE or ENCODED, present only when there is cached data
       * </pre>
       */
      public Builder setCopies(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy value) {
        if (copiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCopiesIsMutable();
          copies_.set(index, value);
          onChanged();
        } else {
          copiesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
       *
       * <pre>
       * copies of chunk data, present if type is LOCAL, COPY or PARITY;
       * if type is REMOTE or ENCODED, present only when there is cached data
       * </pre>
       */
      public Builder setCopies(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder builderForValue) {
        if (copiesBuilder_ == null) {
          ensureCopiesIsMutable();
          copies_.set(index, builderForValue.build());
          onChanged();
        } else {
          copiesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
       *
       * <pre>
       * copies of chunk data, present if type is LOCAL, COPY or PARITY;
       * if type is REMOTE or ENCODED, present only when there is cached data
       * </pre>
       */
      public Builder addCopies(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy value) {
        if (copiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCopiesIsMutable();
          copies_.add(value);
          onChanged();
        } else {
          copiesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
       *
       * <pre>
       * copies of chunk data, present if type is LOCAL, COPY or PARITY;
       * if type is REMOTE or ENCODED, present only when there is cached data
       * </pre>
       */
      public Builder addCopies(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy value) {
        if (copiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCopiesIsMutable();
          copies_.add(index, value);
          onChanged();
        } else {
          copiesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
       *
       * <pre>
       * copies of chunk data, present if type is LOCAL, COPY or PARITY;
       * if type is REMOTE or ENCODED, present only when there is cached data
       * </pre>
       */
      public Builder addCopies(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder builderForValue) {
        if (copiesBuilder_ == null) {
          ensureCopiesIsMutable();
          copies_.add(builderForValue.build());
          onChanged();
        } else {
          copiesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
       *
       * <pre>
       * copies of chunk data, present if type is LOCAL, COPY or PARITY;
       * if type is REMOTE or ENCODED, present only when there is cached data
       * </pre>
       */
      public Builder addCopies(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder builderForValue) {
        if (copiesBuilder_ == null) {
          ensureCopiesIsMutable();
          copies_.add(index, builderForValue.build());
          onChanged();
        } else {
          copiesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
       *
       * <pre>
       * copies of chunk data, present if type is LOCAL, COPY or PARITY;
       * if type is REMOTE or ENCODED, present only when there is cached data
       * </pre>
       */
      public Builder addAllCopies(
          java.lang.Iterable<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy> values) {
        if (copiesBuilder_ == null) {
          ensureCopiesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, copies_);
          onChanged();
        } else {
          copiesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
       *
       * <pre>
       * copies of chunk data, present if type is LOCAL, COPY or PARITY;
       * if type is REMOTE or ENCODED, present only when there is cached data
       * </pre>
       */
      public Builder clearCopies() {
        if (copiesBuilder_ == null) {
          copies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          copiesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
       *
       * <pre>
       * copies of chunk data, present if type is LOCAL, COPY or PARITY;
       * if type is REMOTE or ENCODED, present only when there is cached data
       * </pre>
       */
      public Builder removeCopies(int index) {
        if (copiesBuilder_ == null) {
          ensureCopiesIsMutable();
          copies_.remove(index);
          onChanged();
        } else {
          copiesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
       *
       * <pre>
       * copies of chunk data, present if type is LOCAL, COPY or PARITY;
       * if type is REMOTE or ENCODED, present only when there is cached data
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder getCopiesBuilder(
          int index) {
        return getCopiesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
       *
       * <pre>
       * copies of chunk data, present if type is LOCAL, COPY or PARITY;
       * if type is REMOTE or ENCODED, present only when there is cached data
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder getCopiesOrBuilder(
          int index) {
        if (copiesBuilder_ == null) {
          return copies_.get(index);  } else {
          return copiesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
       *
       * <pre>
       * copies of chunk data, present if type is LOCAL, COPY or PARITY;
       * if type is REMOTE or ENCODED, present only when there is cached data
       * </pre>
       */
      public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder> 
           getCopiesOrBuilderList() {
        if (copiesBuilder_ != null) {
          return copiesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(copies_);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
       *
       * <pre>
       * copies of chunk data, present if type is LOCAL, COPY or PARITY;
       * if type is REMOTE or ENCODED, present only when there is cached data
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder addCopiesBuilder() {
        return getCopiesFieldBuilder().addBuilder(
            io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
       *
       * <pre>
       * copies of chunk data, present if type is LOCAL, COPY or PARITY;
       * if type is REMOTE or ENCODED, present only when there is cached data
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder addCopiesBuilder(
          int index) {
        return getCopiesFieldBuilder().addBuilder(
            index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy copies = 9;</code>
       *
       * <pre>
       * copies of chunk data, present if type is LOCAL, COPY or PARITY;
       * if type is REMOTE or ENCODED, present only when there is cached data
       * </pre>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder> 
           getCopiesBuilderList() {
        return getCopiesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder> 
          getCopiesFieldBuilder() {
        if (copiesBuilder_ == null) {
          copiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder>(
                  copies_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          copies_ = null;
        }
        return copiesBuilder_;
      }

      private int capacity_ ;
      /**
       * <code>optional int32 capacity = 10;</code>
       *
       * <pre>
       * indicate the capacity of chunk, for file access capacity is -1 (unlimited)
       * </pre>
       */
      public boolean hasCapacity() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 capacity = 10;</code>
       *
       * <pre>
       * indicate the capacity of chunk, for file access capacity is -1 (unlimited)
       * </pre>
       */
      public int getCapacity() {
        return capacity_;
      }
      /**
       * <code>optional int32 capacity = 10;</code>
       *
       * <pre>
       * indicate the capacity of chunk, for file access capacity is -1 (unlimited)
       * </pre>
       */
      public Builder setCapacity(int value) {
        bitField0_ |= 0x00000200;
        capacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 capacity = 10;</code>
       *
       * <pre>
       * indicate the capacity of chunk, for file access capacity is -1 (unlimited)
       * </pre>
       */
      public Builder clearCapacity() {
        bitField0_ = (bitField0_ & ~0x00000200);
        capacity_ = 0;
        onChanged();
        return this;
      }

      private int sealedLength_ ;
      /**
       * <code>optional int32 sealedLength = 11;</code>
       */
      public boolean hasSealedLength() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 sealedLength = 11;</code>
       */
      public int getSealedLength() {
        return sealedLength_;
      }
      /**
       * <code>optional int32 sealedLength = 11;</code>
       */
      public Builder setSealedLength(int value) {
        bitField0_ |= 0x00000400;
        sealedLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sealedLength = 11;</code>
       */
      public Builder clearSealedLength() {
        bitField0_ = (bitField0_ & ~0x00000400);
        sealedLength_ = 0;
        onChanged();
        return this;
      }

      private long autoSealTime_ ;
      /**
       * <code>optional int64 autoSealTime = 12;</code>
       *
       * <pre>
       * when the chunk should be automatically sealed (due to timeout)
       * only present if chunk is ACTIVE
       * </pre>
       */
      public boolean hasAutoSealTime() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int64 autoSealTime = 12;</code>
       *
       * <pre>
       * when the chunk should be automatically sealed (due to timeout)
       * only present if chunk is ACTIVE
       * </pre>
       */
      public long getAutoSealTime() {
        return autoSealTime_;
      }
      /**
       * <code>optional int64 autoSealTime = 12;</code>
       *
       * <pre>
       * when the chunk should be automatically sealed (due to timeout)
       * only present if chunk is ACTIVE
       * </pre>
       */
      public Builder setAutoSealTime(long value) {
        bitField0_ |= 0x00000800;
        autoSealTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 autoSealTime = 12;</code>
       *
       * <pre>
       * when the chunk should be automatically sealed (due to timeout)
       * only present if chunk is ACTIVE
       * </pre>
       */
      public Builder clearAutoSealTime() {
        bitField0_ = (bitField0_ & ~0x00000800);
        autoSealTime_ = 0L;
        onChanged();
        return this;
      }

      private long sealedTime_ ;
      /**
       * <code>optional int64 sealedTime = 13;</code>
       *
       * <pre>
       * chunk sealed time, only present if chunk is sealed
       * </pre>
       */
      public boolean hasSealedTime() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 sealedTime = 13;</code>
       *
       * <pre>
       * chunk sealed time, only present if chunk is sealed
       * </pre>
       */
      public long getSealedTime() {
        return sealedTime_;
      }
      /**
       * <code>optional int64 sealedTime = 13;</code>
       *
       * <pre>
       * chunk sealed time, only present if chunk is sealed
       * </pre>
       */
      public Builder setSealedTime(long value) {
        bitField0_ |= 0x00001000;
        sealedTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 sealedTime = 13;</code>
       *
       * <pre>
       * chunk sealed time, only present if chunk is sealed
       * </pre>
       */
      public Builder clearSealedTime() {
        bitField0_ = (bitField0_ & ~0x00001000);
        sealedTime_ = 0L;
        onChanged();
        return this;
      }

      private boolean isEcEncoded_ ;
      /**
       * <code>optional bool isEcEncoded = 14;</code>
       *
       * <pre>
       * if the chunk has been EC encoded, missing means false
       * </pre>
       */
      public boolean hasIsEcEncoded() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional bool isEcEncoded = 14;</code>
       *
       * <pre>
       * if the chunk has been EC encoded, missing means false
       * </pre>
       */
      public boolean getIsEcEncoded() {
        return isEcEncoded_;
      }
      /**
       * <code>optional bool isEcEncoded = 14;</code>
       *
       * <pre>
       * if the chunk has been EC encoded, missing means false
       * </pre>
       */
      public Builder setIsEcEncoded(boolean value) {
        bitField0_ |= 0x00002000;
        isEcEncoded_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isEcEncoded = 14;</code>
       *
       * <pre>
       * if the chunk has been EC encoded, missing means false
       * </pre>
       */
      public Builder clearIsEcEncoded() {
        bitField0_ = (bitField0_ & ~0x00002000);
        isEcEncoded_ = false;
        onChanged();
        return this;
      }

      private boolean shouldSeal_ ;
      /**
       * <code>optional bool shouldSeal = 15;</code>
       *
       * <pre>
       *a flag to indicate whether should reject lease extend request
       * </pre>
       */
      public boolean hasShouldSeal() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional bool shouldSeal = 15;</code>
       *
       * <pre>
       *a flag to indicate whether should reject lease extend request
       * </pre>
       */
      public boolean getShouldSeal() {
        return shouldSeal_;
      }
      /**
       * <code>optional bool shouldSeal = 15;</code>
       *
       * <pre>
       *a flag to indicate whether should reject lease extend request
       * </pre>
       */
      public Builder setShouldSeal(boolean value) {
        bitField0_ |= 0x00004000;
        shouldSeal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool shouldSeal = 15;</code>
       *
       * <pre>
       *a flag to indicate whether should reject lease extend request
       * </pre>
       */
      public Builder clearShouldSeal() {
        bitField0_ = (bitField0_ & ~0x00004000);
        shouldSeal_ = false;
        onChanged();
        return this;
      }

      private long sequenceNumber_ ;
      /**
       * <code>required int64 sequenceNumber = 16;</code>
       */
      public boolean hasSequenceNumber() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>required int64 sequenceNumber = 16;</code>
       */
      public long getSequenceNumber() {
        return sequenceNumber_;
      }
      /**
       * <code>required int64 sequenceNumber = 16;</code>
       */
      public Builder setSequenceNumber(long value) {
        bitField0_ |= 0x00008000;
        sequenceNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 sequenceNumber = 16;</code>
       */
      public Builder clearSequenceNumber() {
        bitField0_ = (bitField0_ & ~0x00008000);
        sequenceNumber_ = 0L;
        onChanged();
        return this;
      }

      private long minNotSealedSequenceNumber_ ;
      /**
       * <code>required int64 minNotSealedSequenceNumber = 17;</code>
       */
      public boolean hasMinNotSealedSequenceNumber() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>required int64 minNotSealedSequenceNumber = 17;</code>
       */
      public long getMinNotSealedSequenceNumber() {
        return minNotSealedSequenceNumber_;
      }
      /**
       * <code>required int64 minNotSealedSequenceNumber = 17;</code>
       */
      public Builder setMinNotSealedSequenceNumber(long value) {
        bitField0_ |= 0x00010000;
        minNotSealedSequenceNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 minNotSealedSequenceNumber = 17;</code>
       */
      public Builder clearMinNotSealedSequenceNumber() {
        bitField0_ = (bitField0_ & ~0x00010000);
        minNotSealedSequenceNumber_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object checksum_ = "";
      /**
       * <code>optional string checksum = 18;</code>
       */
      public boolean hasChecksum() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional string checksum = 18;</code>
       */
      public java.lang.String getChecksum() {
        java.lang.Object ref = checksum_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            checksum_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string checksum = 18;</code>
       */
      public com.google.protobuf.ByteString
          getChecksumBytes() {
        java.lang.Object ref = checksum_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          checksum_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string checksum = 18;</code>
       */
      public Builder setChecksum(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
        checksum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string checksum = 18;</code>
       */
      public Builder clearChecksum() {
        bitField0_ = (bitField0_ & ~0x00020000);
        checksum_ = getDefaultInstance().getChecksum();
        onChanged();
        return this;
      }
      /**
       * <code>optional string checksum = 18;</code>
       */
      public Builder setChecksumBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
        checksum_ = value;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo shadow_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder> shadowBuilder_;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo shadow = 19;</code>
       *
       * <pre>
       * shadow chunk info that could replace the current one later
       * </pre>
       */
      public boolean hasShadow() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo shadow = 19;</code>
       *
       * <pre>
       * shadow chunk info that could replace the current one later
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo getShadow() {
        if (shadowBuilder_ == null) {
          return shadow_;
        } else {
          return shadowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo shadow = 19;</code>
       *
       * <pre>
       * shadow chunk info that could replace the current one later
       * </pre>
       */
      public Builder setShadow(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo value) {
        if (shadowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          shadow_ = value;
          onChanged();
        } else {
          shadowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo shadow = 19;</code>
       *
       * <pre>
       * shadow chunk info that could replace the current one later
       * </pre>
       */
      public Builder setShadow(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder builderForValue) {
        if (shadowBuilder_ == null) {
          shadow_ = builderForValue.build();
          onChanged();
        } else {
          shadowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo shadow = 19;</code>
       *
       * <pre>
       * shadow chunk info that could replace the current one later
       * </pre>
       */
      public Builder mergeShadow(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo value) {
        if (shadowBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000) &&
              shadow_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance()) {
            shadow_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.newBuilder(shadow_).mergeFrom(value).buildPartial();
          } else {
            shadow_ = value;
          }
          onChanged();
        } else {
          shadowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo shadow = 19;</code>
       *
       * <pre>
       * shadow chunk info that could replace the current one later
       * </pre>
       */
      public Builder clearShadow() {
        if (shadowBuilder_ == null) {
          shadow_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
          onChanged();
        } else {
          shadowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo shadow = 19;</code>
       *
       * <pre>
       * shadow chunk info that could replace the current one later
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder getShadowBuilder() {
        bitField0_ |= 0x00040000;
        onChanged();
        return getShadowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo shadow = 19;</code>
       *
       * <pre>
       * shadow chunk info that could replace the current one later
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder getShadowOrBuilder() {
        if (shadowBuilder_ != null) {
          return shadowBuilder_.getMessageOrBuilder();
        } else {
          return shadow_;
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo shadow = 19;</code>
       *
       * <pre>
       * shadow chunk info that could replace the current one later
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder> 
          getShadowFieldBuilder() {
        if (shadowBuilder_ == null) {
          shadowBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder>(
                  getShadow(),
                  getParentForChildren(),
                  isClean());
          shadow_ = null;
        }
        return shadowBuilder_;
      }

      private boolean isEcRetiring_ ;
      /**
       * <code>optional bool isEcRetiring = 20;</code>
       *
       * <pre>
       * if the chunk is being transformed from ec back to 3 copies
       * </pre>
       */
      public boolean hasIsEcRetiring() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional bool isEcRetiring = 20;</code>
       *
       * <pre>
       * if the chunk is being transformed from ec back to 3 copies
       * </pre>
       */
      public boolean getIsEcRetiring() {
        return isEcRetiring_;
      }
      /**
       * <code>optional bool isEcRetiring = 20;</code>
       *
       * <pre>
       * if the chunk is being transformed from ec back to 3 copies
       * </pre>
       */
      public Builder setIsEcRetiring(boolean value) {
        bitField0_ |= 0x00080000;
        isEcRetiring_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isEcRetiring = 20;</code>
       *
       * <pre>
       * if the chunk is being transformed from ec back to 3 copies
       * </pre>
       */
      public Builder clearIsEcRetiring() {
        bitField0_ = (bitField0_ & ~0x00080000);
        isEcRetiring_ = false;
        onChanged();
        return this;
      }

      private boolean skipRepoGc_ ;
      /**
       * <code>optional bool skipRepoGc = 21;</code>
       *
       * <pre>
       * skip repo gc will be set when repo copy chunk is promoted to local
       * </pre>
       */
      public boolean hasSkipRepoGc() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional bool skipRepoGc = 21;</code>
       *
       * <pre>
       * skip repo gc will be set when repo copy chunk is promoted to local
       * </pre>
       */
      public boolean getSkipRepoGc() {
        return skipRepoGc_;
      }
      /**
       * <code>optional bool skipRepoGc = 21;</code>
       *
       * <pre>
       * skip repo gc will be set when repo copy chunk is promoted to local
       * </pre>
       */
      public Builder setSkipRepoGc(boolean value) {
        bitField0_ |= 0x00100000;
        skipRepoGc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool skipRepoGc = 21;</code>
       *
       * <pre>
       * skip repo gc will be set when repo copy chunk is promoted to local
       * </pre>
       */
      public Builder clearSkipRepoGc() {
        bitField0_ = (bitField0_ & ~0x00100000);
        skipRepoGc_ = false;
        onChanged();
        return this;
      }

      private boolean noBlockLevelVerification_ ;
      /**
       * <code>optional bool noBlockLevelVerification = 22;</code>
       *
       * <pre>
       *the chunk doesn't include block-level verification like file ingestion chunk
       * </pre>
       */
      public boolean hasNoBlockLevelVerification() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional bool noBlockLevelVerification = 22;</code>
       *
       * <pre>
       *the chunk doesn't include block-level verification like file ingestion chunk
       * </pre>
       */
      public boolean getNoBlockLevelVerification() {
        return noBlockLevelVerification_;
      }
      /**
       * <code>optional bool noBlockLevelVerification = 22;</code>
       *
       * <pre>
       *the chunk doesn't include block-level verification like file ingestion chunk
       * </pre>
       */
      public Builder setNoBlockLevelVerification(boolean value) {
        bitField0_ |= 0x00200000;
        noBlockLevelVerification_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool noBlockLevelVerification = 22;</code>
       *
       * <pre>
       *the chunk doesn't include block-level verification like file ingestion chunk
       * </pre>
       */
      public Builder clearNoBlockLevelVerification() {
        bitField0_ = (bitField0_ & ~0x00200000);
        noBlockLevelVerification_ = false;
        onChanged();
        return this;
      }

      private long lastAccessTime_ ;
      /**
       * <code>optional int64 lastAccessTime = 23;</code>
       *
       * <pre>
       * last access time (updated with very low frequency)
       * TODO: shall this also be used to guide the EC coding?
       * for REMOTE chunk type this is updated by remote chunk cache lazily
       * </pre>
       */
      public boolean hasLastAccessTime() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int64 lastAccessTime = 23;</code>
       *
       * <pre>
       * last access time (updated with very low frequency)
       * TODO: shall this also be used to guide the EC coding?
       * for REMOTE chunk type this is updated by remote chunk cache lazily
       * </pre>
       */
      public long getLastAccessTime() {
        return lastAccessTime_;
      }
      /**
       * <code>optional int64 lastAccessTime = 23;</code>
       *
       * <pre>
       * last access time (updated with very low frequency)
       * TODO: shall this also be used to guide the EC coding?
       * for REMOTE chunk type this is updated by remote chunk cache lazily
       * </pre>
       */
      public Builder setLastAccessTime(long value) {
        bitField0_ |= 0x00400000;
        lastAccessTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 lastAccessTime = 23;</code>
       *
       * <pre>
       * last access time (updated with very low frequency)
       * TODO: shall this also be used to guide the EC coding?
       * for REMOTE chunk type this is updated by remote chunk cache lazily
       * </pre>
       */
      public Builder clearLastAccessTime() {
        bitField0_ = (bitField0_ & ~0x00400000);
        lastAccessTime_ = 0L;
        onChanged();
        return this;
      }

      private int lastKnownLength_ ;
      /**
       * <code>optional int32 lastKnownLength = 24;</code>
       *
       * <pre>
       * client may report last known length of the chunk
       * in chunk lease extension message
       * This reduces for e.g. journal replay time
       * </pre>
       */
      public boolean hasLastKnownLength() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int32 lastKnownLength = 24;</code>
       *
       * <pre>
       * client may report last known length of the chunk
       * in chunk lease extension message
       * This reduces for e.g. journal replay time
       * </pre>
       */
      public int getLastKnownLength() {
        return lastKnownLength_;
      }
      /**
       * <code>optional int32 lastKnownLength = 24;</code>
       *
       * <pre>
       * client may report last known length of the chunk
       * in chunk lease extension message
       * This reduces for e.g. journal replay time
       * </pre>
       */
      public Builder setLastKnownLength(int value) {
        bitField0_ |= 0x00800000;
        lastKnownLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lastKnownLength = 24;</code>
       *
       * <pre>
       * client may report last known length of the chunk
       * in chunk lease extension message
       * This reduces for e.g. journal replay time
       * </pre>
       */
      public Builder clearLastKnownLength() {
        bitField0_ = (bitField0_ & ~0x00800000);
        lastKnownLength_ = 0;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RepoChunkType repoChunkType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RepoChunkType.TYPE_I;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RepoChunkType repoChunkType = 25;</code>
       *
       * <pre>
       * all the repo chunks should have this field set
       * </pre>
       */
      public boolean hasRepoChunkType() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RepoChunkType repoChunkType = 25;</code>
       *
       * <pre>
       * all the repo chunks should have this field set
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RepoChunkType getRepoChunkType() {
        return repoChunkType_;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RepoChunkType repoChunkType = 25;</code>
       *
       * <pre>
       * all the repo chunks should have this field set
       * </pre>
       */
      public Builder setRepoChunkType(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RepoChunkType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x01000000;
        repoChunkType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RepoChunkType repoChunkType = 25;</code>
       *
       * <pre>
       * all the repo chunks should have this field set
       * </pre>
       */
      public Builder clearRepoChunkType() {
        bitField0_ = (bitField0_ & ~0x01000000);
        repoChunkType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RepoChunkType.TYPE_I;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo shadowCopy_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder> shadowCopyBuilder_;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo shadowCopy = 26;</code>
       *
       * <pre>
       * if set, file will be truncated to expected length of Copies
       * specifically used for vnest journal partial write vs. corruption checking
       * </pre>
       */
      public boolean hasShadowCopy() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo shadowCopy = 26;</code>
       *
       * <pre>
       * if set, file will be truncated to expected length of Copies
       * specifically used for vnest journal partial write vs. corruption checking
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo getShadowCopy() {
        if (shadowCopyBuilder_ == null) {
          return shadowCopy_;
        } else {
          return shadowCopyBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo shadowCopy = 26;</code>
       *
       * <pre>
       * if set, file will be truncated to expected length of Copies
       * specifically used for vnest journal partial write vs. corruption checking
       * </pre>
       */
      public Builder setShadowCopy(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo value) {
        if (shadowCopyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          shadowCopy_ = value;
          onChanged();
        } else {
          shadowCopyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo shadowCopy = 26;</code>
       *
       * <pre>
       * if set, file will be truncated to expected length of Copies
       * specifically used for vnest journal partial write vs. corruption checking
       * </pre>
       */
      public Builder setShadowCopy(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder builderForValue) {
        if (shadowCopyBuilder_ == null) {
          shadowCopy_ = builderForValue.build();
          onChanged();
        } else {
          shadowCopyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo shadowCopy = 26;</code>
       *
       * <pre>
       * if set, file will be truncated to expected length of Copies
       * specifically used for vnest journal partial write vs. corruption checking
       * </pre>
       */
      public Builder mergeShadowCopy(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo value) {
        if (shadowCopyBuilder_ == null) {
          if (((bitField0_ & 0x02000000) == 0x02000000) &&
              shadowCopy_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.getDefaultInstance()) {
            shadowCopy_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.newBuilder(shadowCopy_).mergeFrom(value).buildPartial();
          } else {
            shadowCopy_ = value;
          }
          onChanged();
        } else {
          shadowCopyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo shadowCopy = 26;</code>
       *
       * <pre>
       * if set, file will be truncated to expected length of Copies
       * specifically used for vnest journal partial write vs. corruption checking
       * </pre>
       */
      public Builder clearShadowCopy() {
        if (shadowCopyBuilder_ == null) {
          shadowCopy_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.getDefaultInstance();
          onChanged();
        } else {
          shadowCopyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x02000000);
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo shadowCopy = 26;</code>
       *
       * <pre>
       * if set, file will be truncated to expected length of Copies
       * specifically used for vnest journal partial write vs. corruption checking
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder getShadowCopyBuilder() {
        bitField0_ |= 0x02000000;
        onChanged();
        return getShadowCopyFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo shadowCopy = 26;</code>
       *
       * <pre>
       * if set, file will be truncated to expected length of Copies
       * specifically used for vnest journal partial write vs. corruption checking
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder getShadowCopyOrBuilder() {
        if (shadowCopyBuilder_ != null) {
          return shadowCopyBuilder_.getMessageOrBuilder();
        } else {
          return shadowCopy_;
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo shadowCopy = 26;</code>
       *
       * <pre>
       * if set, file will be truncated to expected length of Copies
       * specifically used for vnest journal partial write vs. corruption checking
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder> 
          getShadowCopyFieldBuilder() {
        if (shadowCopyBuilder_ == null) {
          shadowCopyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder>(
                  getShadowCopy(),
                  getParentForChildren(),
                  isClean());
          shadowCopy_ = null;
        }
        return shadowCopyBuilder_;
      }

      private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy> geoCopies_ =
        java.util.Collections.emptyList();
      private void ensureGeoCopiesIsMutable() {
        if (!((bitField0_ & 0x04000000) == 0x04000000)) {
          geoCopies_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy>(geoCopies_);
          bitField0_ |= 0x04000000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder> geoCopiesBuilder_;

      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
       *
       * <pre>
       * copies of chunk data, present if type is REMOTE;
       * present only when unsealed geo replication is ongoing
       * </pre>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy> getGeoCopiesList() {
        if (geoCopiesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(geoCopies_);
        } else {
          return geoCopiesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
       *
       * <pre>
       * copies of chunk data, present if type is REMOTE;
       * present only when unsealed geo replication is ongoing
       * </pre>
       */
      public int getGeoCopiesCount() {
        if (geoCopiesBuilder_ == null) {
          return geoCopies_.size();
        } else {
          return geoCopiesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
       *
       * <pre>
       * copies of chunk data, present if type is REMOTE;
       * present only when unsealed geo replication is ongoing
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy getGeoCopies(int index) {
        if (geoCopiesBuilder_ == null) {
          return geoCopies_.get(index);
        } else {
          return geoCopiesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
       *
       * <pre>
       * copies of chunk data, present if type is REMOTE;
       * present only when unsealed geo replication is ongoing
       * </pre>
       */
      public Builder setGeoCopies(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy value) {
        if (geoCopiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGeoCopiesIsMutable();
          geoCopies_.set(index, value);
          onChanged();
        } else {
          geoCopiesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
       *
       * <pre>
       * copies of chunk data, present if type is REMOTE;
       * present only when unsealed geo replication is ongoing
       * </pre>
       */
      public Builder setGeoCopies(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder builderForValue) {
        if (geoCopiesBuilder_ == null) {
          ensureGeoCopiesIsMutable();
          geoCopies_.set(index, builderForValue.build());
          onChanged();
        } else {
          geoCopiesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
       *
       * <pre>
       * copies of chunk data, present if type is REMOTE;
       * present only when unsealed geo replication is ongoing
       * </pre>
       */
      public Builder addGeoCopies(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy value) {
        if (geoCopiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGeoCopiesIsMutable();
          geoCopies_.add(value);
          onChanged();
        } else {
          geoCopiesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
       *
       * <pre>
       * copies of chunk data, present if type is REMOTE;
       * present only when unsealed geo replication is ongoing
       * </pre>
       */
      public Builder addGeoCopies(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy value) {
        if (geoCopiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGeoCopiesIsMutable();
          geoCopies_.add(index, value);
          onChanged();
        } else {
          geoCopiesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
       *
       * <pre>
       * copies of chunk data, present if type is REMOTE;
       * present only when unsealed geo replication is ongoing
       * </pre>
       */
      public Builder addGeoCopies(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder builderForValue) {
        if (geoCopiesBuilder_ == null) {
          ensureGeoCopiesIsMutable();
          geoCopies_.add(builderForValue.build());
          onChanged();
        } else {
          geoCopiesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
       *
       * <pre>
       * copies of chunk data, present if type is REMOTE;
       * present only when unsealed geo replication is ongoing
       * </pre>
       */
      public Builder addGeoCopies(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder builderForValue) {
        if (geoCopiesBuilder_ == null) {
          ensureGeoCopiesIsMutable();
          geoCopies_.add(index, builderForValue.build());
          onChanged();
        } else {
          geoCopiesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
       *
       * <pre>
       * copies of chunk data, present if type is REMOTE;
       * present only when unsealed geo replication is ongoing
       * </pre>
       */
      public Builder addAllGeoCopies(
          java.lang.Iterable<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy> values) {
        if (geoCopiesBuilder_ == null) {
          ensureGeoCopiesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, geoCopies_);
          onChanged();
        } else {
          geoCopiesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
       *
       * <pre>
       * copies of chunk data, present if type is REMOTE;
       * present only when unsealed geo replication is ongoing
       * </pre>
       */
      public Builder clearGeoCopies() {
        if (geoCopiesBuilder_ == null) {
          geoCopies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x04000000);
          onChanged();
        } else {
          geoCopiesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
       *
       * <pre>
       * copies of chunk data, present if type is REMOTE;
       * present only when unsealed geo replication is ongoing
       * </pre>
       */
      public Builder removeGeoCopies(int index) {
        if (geoCopiesBuilder_ == null) {
          ensureGeoCopiesIsMutable();
          geoCopies_.remove(index);
          onChanged();
        } else {
          geoCopiesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
       *
       * <pre>
       * copies of chunk data, present if type is REMOTE;
       * present only when unsealed geo replication is ongoing
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder getGeoCopiesBuilder(
          int index) {
        return getGeoCopiesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
       *
       * <pre>
       * copies of chunk data, present if type is REMOTE;
       * present only when unsealed geo replication is ongoing
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder getGeoCopiesOrBuilder(
          int index) {
        if (geoCopiesBuilder_ == null) {
          return geoCopies_.get(index);  } else {
          return geoCopiesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
       *
       * <pre>
       * copies of chunk data, present if type is REMOTE;
       * present only when unsealed geo replication is ongoing
       * </pre>
       */
      public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder> 
           getGeoCopiesOrBuilderList() {
        if (geoCopiesBuilder_ != null) {
          return geoCopiesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(geoCopies_);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
       *
       * <pre>
       * copies of chunk data, present if type is REMOTE;
       * present only when unsealed geo replication is ongoing
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder addGeoCopiesBuilder() {
        return getGeoCopiesFieldBuilder().addBuilder(
            io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
       *
       * <pre>
       * copies of chunk data, present if type is REMOTE;
       * present only when unsealed geo replication is ongoing
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder addGeoCopiesBuilder(
          int index) {
        return getGeoCopiesFieldBuilder().addBuilder(
            index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy geoCopies = 27;</code>
       *
       * <pre>
       * copies of chunk data, present if type is REMOTE;
       * present only when unsealed geo replication is ongoing
       * </pre>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder> 
           getGeoCopiesBuilderList() {
        return getGeoCopiesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder> 
          getGeoCopiesFieldBuilder() {
        if (geoCopiesBuilder_ == null) {
          geoCopiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder>(
                  geoCopies_,
                  ((bitField0_ & 0x04000000) == 0x04000000),
                  getParentForChildren(),
                  isClean());
          geoCopies_ = null;
        }
        return geoCopiesBuilder_;
      }

      private long geoTrackTime_ ;
      /**
       * <code>optional uint64 geoTrackTime = 28;</code>
       *
       * <pre>
       *when geo track task should be invoke to do the final geo check
       * </pre>
       */
      public boolean hasGeoTrackTime() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional uint64 geoTrackTime = 28;</code>
       *
       * <pre>
       *when geo track task should be invoke to do the final geo check
       * </pre>
       */
      public long getGeoTrackTime() {
        return geoTrackTime_;
      }
      /**
       * <code>optional uint64 geoTrackTime = 28;</code>
       *
       * <pre>
       *when geo track task should be invoke to do the final geo check
       * </pre>
       */
      public Builder setGeoTrackTime(long value) {
        bitField0_ |= 0x08000000;
        geoTrackTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 geoTrackTime = 28;</code>
       *
       * <pre>
       *when geo track task should be invoke to do the final geo check
       * </pre>
       */
      public Builder clearGeoTrackTime() {
        bitField0_ = (bitField0_ & ~0x08000000);
        geoTrackTime_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress> geoProgress_ =
        java.util.Collections.emptyList();
      private void ensureGeoProgressIsMutable() {
        if (!((bitField0_ & 0x10000000) == 0x10000000)) {
          geoProgress_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress>(geoProgress_);
          bitField0_ |= 0x10000000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgressOrBuilder> geoProgressBuilder_;

      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
       *
       * <pre>
       *geo write progress
       *journal chunk may have multiple progress as it should be replicated to multi zone
       * </pre>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress> getGeoProgressList() {
        if (geoProgressBuilder_ == null) {
          return java.util.Collections.unmodifiableList(geoProgress_);
        } else {
          return geoProgressBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
       *
       * <pre>
       *geo write progress
       *journal chunk may have multiple progress as it should be replicated to multi zone
       * </pre>
       */
      public int getGeoProgressCount() {
        if (geoProgressBuilder_ == null) {
          return geoProgress_.size();
        } else {
          return geoProgressBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
       *
       * <pre>
       *geo write progress
       *journal chunk may have multiple progress as it should be replicated to multi zone
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress getGeoProgress(int index) {
        if (geoProgressBuilder_ == null) {
          return geoProgress_.get(index);
        } else {
          return geoProgressBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
       *
       * <pre>
       *geo write progress
       *journal chunk may have multiple progress as it should be replicated to multi zone
       * </pre>
       */
      public Builder setGeoProgress(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress value) {
        if (geoProgressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGeoProgressIsMutable();
          geoProgress_.set(index, value);
          onChanged();
        } else {
          geoProgressBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
       *
       * <pre>
       *geo write progress
       *journal chunk may have multiple progress as it should be replicated to multi zone
       * </pre>
       */
      public Builder setGeoProgress(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress.Builder builderForValue) {
        if (geoProgressBuilder_ == null) {
          ensureGeoProgressIsMutable();
          geoProgress_.set(index, builderForValue.build());
          onChanged();
        } else {
          geoProgressBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
       *
       * <pre>
       *geo write progress
       *journal chunk may have multiple progress as it should be replicated to multi zone
       * </pre>
       */
      public Builder addGeoProgress(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress value) {
        if (geoProgressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGeoProgressIsMutable();
          geoProgress_.add(value);
          onChanged();
        } else {
          geoProgressBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
       *
       * <pre>
       *geo write progress
       *journal chunk may have multiple progress as it should be replicated to multi zone
       * </pre>
       */
      public Builder addGeoProgress(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress value) {
        if (geoProgressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGeoProgressIsMutable();
          geoProgress_.add(index, value);
          onChanged();
        } else {
          geoProgressBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
       *
       * <pre>
       *geo write progress
       *journal chunk may have multiple progress as it should be replicated to multi zone
       * </pre>
       */
      public Builder addGeoProgress(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress.Builder builderForValue) {
        if (geoProgressBuilder_ == null) {
          ensureGeoProgressIsMutable();
          geoProgress_.add(builderForValue.build());
          onChanged();
        } else {
          geoProgressBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
       *
       * <pre>
       *geo write progress
       *journal chunk may have multiple progress as it should be replicated to multi zone
       * </pre>
       */
      public Builder addGeoProgress(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress.Builder builderForValue) {
        if (geoProgressBuilder_ == null) {
          ensureGeoProgressIsMutable();
          geoProgress_.add(index, builderForValue.build());
          onChanged();
        } else {
          geoProgressBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
       *
       * <pre>
       *geo write progress
       *journal chunk may have multiple progress as it should be replicated to multi zone
       * </pre>
       */
      public Builder addAllGeoProgress(
          java.lang.Iterable<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress> values) {
        if (geoProgressBuilder_ == null) {
          ensureGeoProgressIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, geoProgress_);
          onChanged();
        } else {
          geoProgressBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
       *
       * <pre>
       *geo write progress
       *journal chunk may have multiple progress as it should be replicated to multi zone
       * </pre>
       */
      public Builder clearGeoProgress() {
        if (geoProgressBuilder_ == null) {
          geoProgress_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x10000000);
          onChanged();
        } else {
          geoProgressBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
       *
       * <pre>
       *geo write progress
       *journal chunk may have multiple progress as it should be replicated to multi zone
       * </pre>
       */
      public Builder removeGeoProgress(int index) {
        if (geoProgressBuilder_ == null) {
          ensureGeoProgressIsMutable();
          geoProgress_.remove(index);
          onChanged();
        } else {
          geoProgressBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
       *
       * <pre>
       *geo write progress
       *journal chunk may have multiple progress as it should be replicated to multi zone
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress.Builder getGeoProgressBuilder(
          int index) {
        return getGeoProgressFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
       *
       * <pre>
       *geo write progress
       *journal chunk may have multiple progress as it should be replicated to multi zone
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgressOrBuilder getGeoProgressOrBuilder(
          int index) {
        if (geoProgressBuilder_ == null) {
          return geoProgress_.get(index);  } else {
          return geoProgressBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
       *
       * <pre>
       *geo write progress
       *journal chunk may have multiple progress as it should be replicated to multi zone
       * </pre>
       */
      public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgressOrBuilder> 
           getGeoProgressOrBuilderList() {
        if (geoProgressBuilder_ != null) {
          return geoProgressBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(geoProgress_);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
       *
       * <pre>
       *geo write progress
       *journal chunk may have multiple progress as it should be replicated to multi zone
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress.Builder addGeoProgressBuilder() {
        return getGeoProgressFieldBuilder().addBuilder(
            io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
       *
       * <pre>
       *geo write progress
       *journal chunk may have multiple progress as it should be replicated to multi zone
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress.Builder addGeoProgressBuilder(
          int index) {
        return getGeoProgressFieldBuilder().addBuilder(
            index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.GeoProgress geoProgress = 29;</code>
       *
       * <pre>
       *geo write progress
       *journal chunk may have multiple progress as it should be replicated to multi zone
       * </pre>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress.Builder> 
           getGeoProgressBuilderList() {
        return getGeoProgressFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgressOrBuilder> 
          getGeoProgressFieldBuilder() {
        if (geoProgressBuilder_ == null) {
          geoProgressBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgress.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.GeoProgressOrBuilder>(
                  geoProgress_,
                  ((bitField0_ & 0x10000000) == 0x10000000),
                  getParentForChildren(),
                  isClean());
          geoProgress_ = null;
        }
        return geoProgressBuilder_;
      }

      private java.lang.Object originalPrimary_ = "";
      /**
       * <code>optional string originalPrimary = 30;</code>
       *
       * <pre>
       *Original primary zone of the chunk; Set when a COPY promoted to LOCAL after failover
       * </pre>
       */
      public boolean hasOriginalPrimary() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional string originalPrimary = 30;</code>
       *
       * <pre>
       *Original primary zone of the chunk; Set when a COPY promoted to LOCAL after failover
       * </pre>
       */
      public java.lang.String getOriginalPrimary() {
        java.lang.Object ref = originalPrimary_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            originalPrimary_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string originalPrimary = 30;</code>
       *
       * <pre>
       *Original primary zone of the chunk; Set when a COPY promoted to LOCAL after failover
       * </pre>
       */
      public com.google.protobuf.ByteString
          getOriginalPrimaryBytes() {
        java.lang.Object ref = originalPrimary_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          originalPrimary_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string originalPrimary = 30;</code>
       *
       * <pre>
       *Original primary zone of the chunk; Set when a COPY promoted to LOCAL after failover
       * </pre>
       */
      public Builder setOriginalPrimary(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x20000000;
        originalPrimary_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string originalPrimary = 30;</code>
       *
       * <pre>
       *Original primary zone of the chunk; Set when a COPY promoted to LOCAL after failover
       * </pre>
       */
      public Builder clearOriginalPrimary() {
        bitField0_ = (bitField0_ & ~0x20000000);
        originalPrimary_ = getDefaultInstance().getOriginalPrimary();
        onChanged();
        return this;
      }
      /**
       * <code>optional string originalPrimary = 30;</code>
       *
       * <pre>
       *Original primary zone of the chunk; Set when a COPY promoted to LOCAL after failover
       * </pre>
       */
      public Builder setOriginalPrimaryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x20000000;
        originalPrimary_ = value;
        onChanged();
        return this;
      }

      private long deletedTime_ ;
      /**
       * <code>optional int64 deletedTime = 31;</code>
       *
       * <pre>
       * chunk deleted time, only present if chunk is in deleted state
       * </pre>
       */
      public boolean hasDeletedTime() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int64 deletedTime = 31;</code>
       *
       * <pre>
       * chunk deleted time, only present if chunk is in deleted state
       * </pre>
       */
      public long getDeletedTime() {
        return deletedTime_;
      }
      /**
       * <code>optional int64 deletedTime = 31;</code>
       *
       * <pre>
       * chunk deleted time, only present if chunk is in deleted state
       * </pre>
       */
      public Builder setDeletedTime(long value) {
        bitField0_ |= 0x40000000;
        deletedTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 deletedTime = 31;</code>
       *
       * <pre>
       * chunk deleted time, only present if chunk is in deleted state
       * </pre>
       */
      public Builder clearDeletedTime() {
        bitField0_ = (bitField0_ & ~0x40000000);
        deletedTime_ = 0L;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCustomState customState_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCustomState.PARTIALGC_COPYFROM;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCustomState customState = 32;</code>
       *
       * <pre>
       * partial Gc task status
       * </pre>
       */
      public boolean hasCustomState() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCustomState customState = 32;</code>
       *
       * <pre>
       * partial Gc task status
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCustomState getCustomState() {
        return customState_;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCustomState customState = 32;</code>
       *
       * <pre>
       * partial Gc task status
       * </pre>
       */
      public Builder setCustomState(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCustomState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x80000000;
        customState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCustomState customState = 32;</code>
       *
       * <pre>
       * partial Gc task status
       * </pre>
       */
      public Builder clearCustomState() {
        bitField0_ = (bitField0_ & ~0x80000000);
        customState_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCustomState.PARTIALGC_COPYFROM;
        onChanged();
        return this;
      }

      private java.lang.Object failoverZone_ = "";
      /**
       * <code>optional string failoverZone = 33;</code>
       *
       * <pre>
       * failover zone
       * </pre>
       */
      public boolean hasFailoverZone() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string failoverZone = 33;</code>
       *
       * <pre>
       * failover zone
       * </pre>
       */
      public java.lang.String getFailoverZone() {
        java.lang.Object ref = failoverZone_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            failoverZone_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string failoverZone = 33;</code>
       *
       * <pre>
       * failover zone
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFailoverZoneBytes() {
        java.lang.Object ref = failoverZone_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          failoverZone_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string failoverZone = 33;</code>
       *
       * <pre>
       * failover zone
       * </pre>
       */
      public Builder setFailoverZone(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000001;
        failoverZone_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string failoverZone = 33;</code>
       *
       * <pre>
       * failover zone
       * </pre>
       */
      public Builder clearFailoverZone() {
        bitField1_ = (bitField1_ & ~0x00000001);
        failoverZone_ = getDefaultInstance().getFailoverZone();
        onChanged();
        return this;
      }
      /**
       * <code>optional string failoverZone = 33;</code>
       *
       * <pre>
       * failover zone
       * </pre>
       */
      public Builder setFailoverZoneBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000001;
        failoverZone_ = value;
        onChanged();
        return this;
      }

      private boolean isGCReady_ ;
      /**
       * <code>optional bool isGCReady = 34;</code>
       *
       * <pre>
       * Set true after all transactions on it are over and sealed.
       * If not set or false, wait 78 hours after sealed for GC verification.
       * </pre>
       */
      public boolean hasIsGCReady() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool isGCReady = 34;</code>
       *
       * <pre>
       * Set true after all transactions on it are over and sealed.
       * If not set or false, wait 78 hours after sealed for GC verification.
       * </pre>
       */
      public boolean getIsGCReady() {
        return isGCReady_;
      }
      /**
       * <code>optional bool isGCReady = 34;</code>
       *
       * <pre>
       * Set true after all transactions on it are over and sealed.
       * If not set or false, wait 78 hours after sealed for GC verification.
       * </pre>
       */
      public Builder setIsGCReady(boolean value) {
        bitField1_ |= 0x00000002;
        isGCReady_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isGCReady = 34;</code>
       *
       * <pre>
       * Set true after all transactions on it are over and sealed.
       * If not set or false, wait 78 hours after sealed for GC verification.
       * </pre>
       */
      public Builder clearIsGCReady() {
        bitField1_ = (bitField1_ & ~0x00000002);
        isGCReady_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList dtTypes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureDtTypesIsMutable() {
        if (!((bitField1_ & 0x00000004) == 0x00000004)) {
          dtTypes_ = new com.google.protobuf.LazyStringArrayList(dtTypes_);
          bitField1_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string dtTypes = 35;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getDtTypesList() {
        return dtTypes_.getUnmodifiableView();
      }
      /**
       * <code>repeated string dtTypes = 35;</code>
       */
      public int getDtTypesCount() {
        return dtTypes_.size();
      }
      /**
       * <code>repeated string dtTypes = 35;</code>
       */
      public java.lang.String getDtTypes(int index) {
        return dtTypes_.get(index);
      }
      /**
       * <code>repeated string dtTypes = 35;</code>
       */
      public com.google.protobuf.ByteString
          getDtTypesBytes(int index) {
        return dtTypes_.getByteString(index);
      }
      /**
       * <code>repeated string dtTypes = 35;</code>
       */
      public Builder setDtTypes(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDtTypesIsMutable();
        dtTypes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string dtTypes = 35;</code>
       */
      public Builder addDtTypes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDtTypesIsMutable();
        dtTypes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string dtTypes = 35;</code>
       */
      public Builder addAllDtTypes(
          java.lang.Iterable<java.lang.String> values) {
        ensureDtTypesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dtTypes_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string dtTypes = 35;</code>
       */
      public Builder clearDtTypes() {
        dtTypes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField1_ = (bitField1_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string dtTypes = 35;</code>
       */
      public Builder addDtTypesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDtTypesIsMutable();
        dtTypes_.add(value);
        onChanged();
        return this;
      }

      private int alignmentSize_ ;
      /**
       * <code>optional int32 alignmentSize = 36;</code>
       *
       * <pre>
       * for 2MB write block alignment
       * </pre>
       */
      public boolean hasAlignmentSize() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 alignmentSize = 36;</code>
       *
       * <pre>
       * for 2MB write block alignment
       * </pre>
       */
      public int getAlignmentSize() {
        return alignmentSize_;
      }
      /**
       * <code>optional int32 alignmentSize = 36;</code>
       *
       * <pre>
       * for 2MB write block alignment
       * </pre>
       */
      public Builder setAlignmentSize(int value) {
        bitField1_ |= 0x00000008;
        alignmentSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 alignmentSize = 36;</code>
       *
       * <pre>
       * for 2MB write block alignment
       * </pre>
       */
      public Builder clearAlignmentSize() {
        bitField1_ = (bitField1_ & ~0x00000008);
        alignmentSize_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy> encodedCopies_ =
        java.util.Collections.emptyList();
      private void ensureEncodedCopiesIsMutable() {
        if (!((bitField1_ & 0x00000010) == 0x00000010)) {
          encodedCopies_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy>(encodedCopies_);
          bitField1_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder> encodedCopiesBuilder_;

      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
       *
       * <pre>
       * xor geo shipped copies, will be removed after encoded with
       * either COPY or PARITY chunks
       * </pre>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy> getEncodedCopiesList() {
        if (encodedCopiesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(encodedCopies_);
        } else {
          return encodedCopiesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
       *
       * <pre>
       * xor geo shipped copies, will be removed after encoded with
       * either COPY or PARITY chunks
       * </pre>
       */
      public int getEncodedCopiesCount() {
        if (encodedCopiesBuilder_ == null) {
          return encodedCopies_.size();
        } else {
          return encodedCopiesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
       *
       * <pre>
       * xor geo shipped copies, will be removed after encoded with
       * either COPY or PARITY chunks
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy getEncodedCopies(int index) {
        if (encodedCopiesBuilder_ == null) {
          return encodedCopies_.get(index);
        } else {
          return encodedCopiesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
       *
       * <pre>
       * xor geo shipped copies, will be removed after encoded with
       * either COPY or PARITY chunks
       * </pre>
       */
      public Builder setEncodedCopies(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy value) {
        if (encodedCopiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEncodedCopiesIsMutable();
          encodedCopies_.set(index, value);
          onChanged();
        } else {
          encodedCopiesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
       *
       * <pre>
       * xor geo shipped copies, will be removed after encoded with
       * either COPY or PARITY chunks
       * </pre>
       */
      public Builder setEncodedCopies(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder builderForValue) {
        if (encodedCopiesBuilder_ == null) {
          ensureEncodedCopiesIsMutable();
          encodedCopies_.set(index, builderForValue.build());
          onChanged();
        } else {
          encodedCopiesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
       *
       * <pre>
       * xor geo shipped copies, will be removed after encoded with
       * either COPY or PARITY chunks
       * </pre>
       */
      public Builder addEncodedCopies(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy value) {
        if (encodedCopiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEncodedCopiesIsMutable();
          encodedCopies_.add(value);
          onChanged();
        } else {
          encodedCopiesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
       *
       * <pre>
       * xor geo shipped copies, will be removed after encoded with
       * either COPY or PARITY chunks
       * </pre>
       */
      public Builder addEncodedCopies(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy value) {
        if (encodedCopiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEncodedCopiesIsMutable();
          encodedCopies_.add(index, value);
          onChanged();
        } else {
          encodedCopiesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
       *
       * <pre>
       * xor geo shipped copies, will be removed after encoded with
       * either COPY or PARITY chunks
       * </pre>
       */
      public Builder addEncodedCopies(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder builderForValue) {
        if (encodedCopiesBuilder_ == null) {
          ensureEncodedCopiesIsMutable();
          encodedCopies_.add(builderForValue.build());
          onChanged();
        } else {
          encodedCopiesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
       *
       * <pre>
       * xor geo shipped copies, will be removed after encoded with
       * either COPY or PARITY chunks
       * </pre>
       */
      public Builder addEncodedCopies(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder builderForValue) {
        if (encodedCopiesBuilder_ == null) {
          ensureEncodedCopiesIsMutable();
          encodedCopies_.add(index, builderForValue.build());
          onChanged();
        } else {
          encodedCopiesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
       *
       * <pre>
       * xor geo shipped copies, will be removed after encoded with
       * either COPY or PARITY chunks
       * </pre>
       */
      public Builder addAllEncodedCopies(
          java.lang.Iterable<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy> values) {
        if (encodedCopiesBuilder_ == null) {
          ensureEncodedCopiesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, encodedCopies_);
          onChanged();
        } else {
          encodedCopiesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
       *
       * <pre>
       * xor geo shipped copies, will be removed after encoded with
       * either COPY or PARITY chunks
       * </pre>
       */
      public Builder clearEncodedCopies() {
        if (encodedCopiesBuilder_ == null) {
          encodedCopies_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000010);
          onChanged();
        } else {
          encodedCopiesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
       *
       * <pre>
       * xor geo shipped copies, will be removed after encoded with
       * either COPY or PARITY chunks
       * </pre>
       */
      public Builder removeEncodedCopies(int index) {
        if (encodedCopiesBuilder_ == null) {
          ensureEncodedCopiesIsMutable();
          encodedCopies_.remove(index);
          onChanged();
        } else {
          encodedCopiesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
       *
       * <pre>
       * xor geo shipped copies, will be removed after encoded with
       * either COPY or PARITY chunks
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder getEncodedCopiesBuilder(
          int index) {
        return getEncodedCopiesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
       *
       * <pre>
       * xor geo shipped copies, will be removed after encoded with
       * either COPY or PARITY chunks
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder getEncodedCopiesOrBuilder(
          int index) {
        if (encodedCopiesBuilder_ == null) {
          return encodedCopies_.get(index);  } else {
          return encodedCopiesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
       *
       * <pre>
       * xor geo shipped copies, will be removed after encoded with
       * either COPY or PARITY chunks
       * </pre>
       */
      public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder> 
           getEncodedCopiesOrBuilderList() {
        if (encodedCopiesBuilder_ != null) {
          return encodedCopiesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(encodedCopies_);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
       *
       * <pre>
       * xor geo shipped copies, will be removed after encoded with
       * either COPY or PARITY chunks
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder addEncodedCopiesBuilder() {
        return getEncodedCopiesFieldBuilder().addBuilder(
            io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
       *
       * <pre>
       * xor geo shipped copies, will be removed after encoded with
       * either COPY or PARITY chunks
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder addEncodedCopiesBuilder(
          int index) {
        return getEncodedCopiesFieldBuilder().addBuilder(
            index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy encodedCopies = 37;</code>
       *
       * <pre>
       * xor geo shipped copies, will be removed after encoded with
       * either COPY or PARITY chunks
       * </pre>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder> 
           getEncodedCopiesBuilderList() {
        return getEncodedCopiesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder> 
          getEncodedCopiesFieldBuilder() {
        if (encodedCopiesBuilder_ == null) {
          encodedCopiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder>(
                  encodedCopies_,
                  ((bitField1_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          encodedCopies_ = null;
        }
        return encodedCopiesBuilder_;
      }

      private int checksumForEncodedCopies_ ;
      /**
       * <code>optional int32 checksumForEncodedCopies = 38;</code>
       *
       * <pre>
       * checksum for xor geo shipped copies, i.e. encodedCopies
       * </pre>
       */
      public boolean hasChecksumForEncodedCopies() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 checksumForEncodedCopies = 38;</code>
       *
       * <pre>
       * checksum for xor geo shipped copies, i.e. encodedCopies
       * </pre>
       */
      public int getChecksumForEncodedCopies() {
        return checksumForEncodedCopies_;
      }
      /**
       * <code>optional int32 checksumForEncodedCopies = 38;</code>
       *
       * <pre>
       * checksum for xor geo shipped copies, i.e. encodedCopies
       * </pre>
       */
      public Builder setChecksumForEncodedCopies(int value) {
        bitField1_ |= 0x00000020;
        checksumForEncodedCopies_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 checksumForEncodedCopies = 38;</code>
       *
       * <pre>
       * checksum for xor geo shipped copies, i.e. encodedCopies
       * </pre>
       */
      public Builder clearChecksumForEncodedCopies() {
        bitField1_ = (bitField1_ & ~0x00000020);
        checksumForEncodedCopies_ = 0;
        onChanged();
        return this;
      }

      private boolean usingXorGeoShipping_ ;
      /**
       * <code>optional bool usingXorGeoShipping = 39;</code>
       *
       * <pre>
       * this flag is set after chunk shipping completed
       * </pre>
       */
      public boolean hasUsingXorGeoShipping() {
        return ((bitField1_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool usingXorGeoShipping = 39;</code>
       *
       * <pre>
       * this flag is set after chunk shipping completed
       * </pre>
       */
      public boolean getUsingXorGeoShipping() {
        return usingXorGeoShipping_;
      }
      /**
       * <code>optional bool usingXorGeoShipping = 39;</code>
       *
       * <pre>
       * this flag is set after chunk shipping completed
       * </pre>
       */
      public Builder setUsingXorGeoShipping(boolean value) {
        bitField1_ |= 0x00000040;
        usingXorGeoShipping_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool usingXorGeoShipping = 39;</code>
       *
       * <pre>
       * this flag is set after chunk shipping completed
       * </pre>
       */
      public Builder clearUsingXorGeoShipping() {
        bitField1_ = (bitField1_ & ~0x00000040);
        usingXorGeoShipping_ = false;
        onChanged();
        return this;
      }

      private boolean freeShadowBlocks_ ;
      /**
       * <code>optional bool freeShadowBlocks = 40;</code>
       *
       * <pre>
       * shadow blocks need to be freed
       * </pre>
       */
      public boolean hasFreeShadowBlocks() {
        return ((bitField1_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool freeShadowBlocks = 40;</code>
       *
       * <pre>
       * shadow blocks need to be freed
       * </pre>
       */
      public boolean getFreeShadowBlocks() {
        return freeShadowBlocks_;
      }
      /**
       * <code>optional bool freeShadowBlocks = 40;</code>
       *
       * <pre>
       * shadow blocks need to be freed
       * </pre>
       */
      public Builder setFreeShadowBlocks(boolean value) {
        bitField1_ |= 0x00000080;
        freeShadowBlocks_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool freeShadowBlocks = 40;</code>
       *
       * <pre>
       * shadow blocks need to be freed
       * </pre>
       */
      public Builder clearFreeShadowBlocks() {
        bitField1_ = (bitField1_ & ~0x00000080);
        freeShadowBlocks_ = false;
        onChanged();
        return this;
      }

      private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo> chunkInfoByRanges_ =
        java.util.Collections.emptyList();
      private void ensureChunkInfoByRangesIsMutable() {
        if (!((bitField1_ & 0x00000100) == 0x00000100)) {
          chunkInfoByRanges_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo>(chunkInfoByRanges_);
          bitField1_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfoOrBuilder> chunkInfoByRangesBuilder_;

      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
       *
       * <pre>
       * for COPY/ENCODED chunk
       * </pre>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo> getChunkInfoByRangesList() {
        if (chunkInfoByRangesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(chunkInfoByRanges_);
        } else {
          return chunkInfoByRangesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
       *
       * <pre>
       * for COPY/ENCODED chunk
       * </pre>
       */
      public int getChunkInfoByRangesCount() {
        if (chunkInfoByRangesBuilder_ == null) {
          return chunkInfoByRanges_.size();
        } else {
          return chunkInfoByRangesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
       *
       * <pre>
       * for COPY/ENCODED chunk
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo getChunkInfoByRanges(int index) {
        if (chunkInfoByRangesBuilder_ == null) {
          return chunkInfoByRanges_.get(index);
        } else {
          return chunkInfoByRangesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
       *
       * <pre>
       * for COPY/ENCODED chunk
       * </pre>
       */
      public Builder setChunkInfoByRanges(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo value) {
        if (chunkInfoByRangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChunkInfoByRangesIsMutable();
          chunkInfoByRanges_.set(index, value);
          onChanged();
        } else {
          chunkInfoByRangesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
       *
       * <pre>
       * for COPY/ENCODED chunk
       * </pre>
       */
      public Builder setChunkInfoByRanges(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo.Builder builderForValue) {
        if (chunkInfoByRangesBuilder_ == null) {
          ensureChunkInfoByRangesIsMutable();
          chunkInfoByRanges_.set(index, builderForValue.build());
          onChanged();
        } else {
          chunkInfoByRangesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
       *
       * <pre>
       * for COPY/ENCODED chunk
       * </pre>
       */
      public Builder addChunkInfoByRanges(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo value) {
        if (chunkInfoByRangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChunkInfoByRangesIsMutable();
          chunkInfoByRanges_.add(value);
          onChanged();
        } else {
          chunkInfoByRangesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
       *
       * <pre>
       * for COPY/ENCODED chunk
       * </pre>
       */
      public Builder addChunkInfoByRanges(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo value) {
        if (chunkInfoByRangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChunkInfoByRangesIsMutable();
          chunkInfoByRanges_.add(index, value);
          onChanged();
        } else {
          chunkInfoByRangesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
       *
       * <pre>
       * for COPY/ENCODED chunk
       * </pre>
       */
      public Builder addChunkInfoByRanges(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo.Builder builderForValue) {
        if (chunkInfoByRangesBuilder_ == null) {
          ensureChunkInfoByRangesIsMutable();
          chunkInfoByRanges_.add(builderForValue.build());
          onChanged();
        } else {
          chunkInfoByRangesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
       *
       * <pre>
       * for COPY/ENCODED chunk
       * </pre>
       */
      public Builder addChunkInfoByRanges(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo.Builder builderForValue) {
        if (chunkInfoByRangesBuilder_ == null) {
          ensureChunkInfoByRangesIsMutable();
          chunkInfoByRanges_.add(index, builderForValue.build());
          onChanged();
        } else {
          chunkInfoByRangesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
       *
       * <pre>
       * for COPY/ENCODED chunk
       * </pre>
       */
      public Builder addAllChunkInfoByRanges(
          java.lang.Iterable<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo> values) {
        if (chunkInfoByRangesBuilder_ == null) {
          ensureChunkInfoByRangesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, chunkInfoByRanges_);
          onChanged();
        } else {
          chunkInfoByRangesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
       *
       * <pre>
       * for COPY/ENCODED chunk
       * </pre>
       */
      public Builder clearChunkInfoByRanges() {
        if (chunkInfoByRangesBuilder_ == null) {
          chunkInfoByRanges_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000100);
          onChanged();
        } else {
          chunkInfoByRangesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
       *
       * <pre>
       * for COPY/ENCODED chunk
       * </pre>
       */
      public Builder removeChunkInfoByRanges(int index) {
        if (chunkInfoByRangesBuilder_ == null) {
          ensureChunkInfoByRangesIsMutable();
          chunkInfoByRanges_.remove(index);
          onChanged();
        } else {
          chunkInfoByRangesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
       *
       * <pre>
       * for COPY/ENCODED chunk
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo.Builder getChunkInfoByRangesBuilder(
          int index) {
        return getChunkInfoByRangesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
       *
       * <pre>
       * for COPY/ENCODED chunk
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfoOrBuilder getChunkInfoByRangesOrBuilder(
          int index) {
        if (chunkInfoByRangesBuilder_ == null) {
          return chunkInfoByRanges_.get(index);  } else {
          return chunkInfoByRangesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
       *
       * <pre>
       * for COPY/ENCODED chunk
       * </pre>
       */
      public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfoOrBuilder> 
           getChunkInfoByRangesOrBuilderList() {
        if (chunkInfoByRangesBuilder_ != null) {
          return chunkInfoByRangesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(chunkInfoByRanges_);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
       *
       * <pre>
       * for COPY/ENCODED chunk
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo.Builder addChunkInfoByRangesBuilder() {
        return getChunkInfoByRangesFieldBuilder().addBuilder(
            io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
       *
       * <pre>
       * for COPY/ENCODED chunk
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo.Builder addChunkInfoByRangesBuilder(
          int index) {
        return getChunkInfoByRangesFieldBuilder().addBuilder(
            index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RangeBasedChunkInfo chunkInfoByRanges = 50;</code>
       *
       * <pre>
       * for COPY/ENCODED chunk
       * </pre>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo.Builder> 
           getChunkInfoByRangesBuilderList() {
        return getChunkInfoByRangesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfoOrBuilder> 
          getChunkInfoByRangesFieldBuilder() {
        if (chunkInfoByRangesBuilder_ == null) {
          chunkInfoByRangesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RangeBasedChunkInfoOrBuilder>(
                  chunkInfoByRanges_,
                  ((bitField1_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          chunkInfoByRanges_ = null;
        }
        return chunkInfoByRangesBuilder_;
      }

      private com.google.protobuf.LazyStringList pendingEncodeChunks_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensurePendingEncodeChunksIsMutable() {
        if (!((bitField1_ & 0x00000200) == 0x00000200)) {
          pendingEncodeChunks_ = new com.google.protobuf.LazyStringArrayList(pendingEncodeChunks_);
          bitField1_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated string pendingEncodeChunks = 51;</code>
       *
       * <pre>
       * list of xor-shipped chunks to be encoded against it
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getPendingEncodeChunksList() {
        return pendingEncodeChunks_.getUnmodifiableView();
      }
      /**
       * <code>repeated string pendingEncodeChunks = 51;</code>
       *
       * <pre>
       * list of xor-shipped chunks to be encoded against it
       * </pre>
       */
      public int getPendingEncodeChunksCount() {
        return pendingEncodeChunks_.size();
      }
      /**
       * <code>repeated string pendingEncodeChunks = 51;</code>
       *
       * <pre>
       * list of xor-shipped chunks to be encoded against it
       * </pre>
       */
      public java.lang.String getPendingEncodeChunks(int index) {
        return pendingEncodeChunks_.get(index);
      }
      /**
       * <code>repeated string pendingEncodeChunks = 51;</code>
       *
       * <pre>
       * list of xor-shipped chunks to be encoded against it
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPendingEncodeChunksBytes(int index) {
        return pendingEncodeChunks_.getByteString(index);
      }
      /**
       * <code>repeated string pendingEncodeChunks = 51;</code>
       *
       * <pre>
       * list of xor-shipped chunks to be encoded against it
       * </pre>
       */
      public Builder setPendingEncodeChunks(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePendingEncodeChunksIsMutable();
        pendingEncodeChunks_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string pendingEncodeChunks = 51;</code>
       *
       * <pre>
       * list of xor-shipped chunks to be encoded against it
       * </pre>
       */
      public Builder addPendingEncodeChunks(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePendingEncodeChunksIsMutable();
        pendingEncodeChunks_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string pendingEncodeChunks = 51;</code>
       *
       * <pre>
       * list of xor-shipped chunks to be encoded against it
       * </pre>
       */
      public Builder addAllPendingEncodeChunks(
          java.lang.Iterable<java.lang.String> values) {
        ensurePendingEncodeChunksIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, pendingEncodeChunks_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string pendingEncodeChunks = 51;</code>
       *
       * <pre>
       * list of xor-shipped chunks to be encoded against it
       * </pre>
       */
      public Builder clearPendingEncodeChunks() {
        pendingEncodeChunks_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField1_ = (bitField1_ & ~0x00000200);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string pendingEncodeChunks = 51;</code>
       *
       * <pre>
       * list of xor-shipped chunks to be encoded against it
       * </pre>
       */
      public Builder addPendingEncodeChunksBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePendingEncodeChunksIsMutable();
        pendingEncodeChunks_.add(value);
        onChanged();
        return this;
      }

      private boolean sealingInProgress_ ;
      /**
       * <code>optional bool sealingInProgress = 52;</code>
       */
      public boolean hasSealingInProgress() {
        return ((bitField1_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool sealingInProgress = 52;</code>
       */
      public boolean getSealingInProgress() {
        return sealingInProgress_;
      }
      /**
       * <code>optional bool sealingInProgress = 52;</code>
       */
      public Builder setSealingInProgress(boolean value) {
        bitField1_ |= 0x00000400;
        sealingInProgress_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool sealingInProgress = 52;</code>
       */
      public Builder clearSealingInProgress() {
        bitField1_ = (bitField1_ & ~0x00000400);
        sealingInProgress_ = false;
        onChanged();
        return this;
      }

      private boolean everTryRemoveTypeII_ ;
      /**
       * <code>optional bool everTryRemoveTypeII = 53;</code>
       */
      public boolean hasEverTryRemoveTypeII() {
        return ((bitField1_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool everTryRemoveTypeII = 53;</code>
       */
      public boolean getEverTryRemoveTypeII() {
        return everTryRemoveTypeII_;
      }
      /**
       * <code>optional bool everTryRemoveTypeII = 53;</code>
       */
      public Builder setEverTryRemoveTypeII(boolean value) {
        bitField1_ |= 0x00000800;
        everTryRemoveTypeII_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool everTryRemoveTypeII = 53;</code>
       */
      public Builder clearEverTryRemoveTypeII() {
        bitField1_ = (bitField1_ & ~0x00000800);
        everTryRemoveTypeII_ = false;
        onChanged();
        return this;
      }

      private long createTime_ ;
      /**
       * <code>optional int64 createTime = 54;</code>
       */
      public boolean hasCreateTime() {
        return ((bitField1_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 createTime = 54;</code>
       */
      public long getCreateTime() {
        return createTime_;
      }
      /**
       * <code>optional int64 createTime = 54;</code>
       */
      public Builder setCreateTime(long value) {
        bitField1_ |= 0x00001000;
        createTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 createTime = 54;</code>
       */
      public Builder clearCreateTime() {
        bitField1_ = (bitField1_ & ~0x00001000);
        createTime_ = 0L;
        onChanged();
        return this;
      }

      private boolean isGcVerificationNeeded_ ;
      /**
       * <code>optional bool isGcVerificationNeeded = 55;</code>
       */
      public boolean hasIsGcVerificationNeeded() {
        return ((bitField1_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional bool isGcVerificationNeeded = 55;</code>
       */
      public boolean getIsGcVerificationNeeded() {
        return isGcVerificationNeeded_;
      }
      /**
       * <code>optional bool isGcVerificationNeeded = 55;</code>
       */
      public Builder setIsGcVerificationNeeded(boolean value) {
        bitField1_ |= 0x00002000;
        isGcVerificationNeeded_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isGcVerificationNeeded = 55;</code>
       */
      public Builder clearIsGcVerificationNeeded() {
        bitField1_ = (bitField1_ & ~0x00002000);
        isGcVerificationNeeded_ = false;
        onChanged();
        return this;
      }

      private boolean isEcRedundant_ ;
      /**
       * <code>optional bool isEcRedundant = 56;</code>
       */
      public boolean hasIsEcRedundant() {
        return ((bitField1_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional bool isEcRedundant = 56;</code>
       */
      public boolean getIsEcRedundant() {
        return isEcRedundant_;
      }
      /**
       * <code>optional bool isEcRedundant = 56;</code>
       */
      public Builder setIsEcRedundant(boolean value) {
        bitField1_ |= 0x00004000;
        isEcRedundant_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isEcRedundant = 56;</code>
       */
      public Builder clearIsEcRedundant() {
        bitField1_ = (bitField1_ & ~0x00004000);
        isEcRedundant_ = false;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid repGroupUuid_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder> repGroupUuidBuilder_;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid repGroupUuid = 57;</code>
       */
      public boolean hasRepGroupUuid() {
        return ((bitField1_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid repGroupUuid = 57;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid getRepGroupUuid() {
        if (repGroupUuidBuilder_ == null) {
          return repGroupUuid_;
        } else {
          return repGroupUuidBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid repGroupUuid = 57;</code>
       */
      public Builder setRepGroupUuid(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid value) {
        if (repGroupUuidBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          repGroupUuid_ = value;
          onChanged();
        } else {
          repGroupUuidBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid repGroupUuid = 57;</code>
       */
      public Builder setRepGroupUuid(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder builderForValue) {
        if (repGroupUuidBuilder_ == null) {
          repGroupUuid_ = builderForValue.build();
          onChanged();
        } else {
          repGroupUuidBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid repGroupUuid = 57;</code>
       */
      public Builder mergeRepGroupUuid(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid value) {
        if (repGroupUuidBuilder_ == null) {
          if (((bitField1_ & 0x00008000) == 0x00008000) &&
              repGroupUuid_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance()) {
            repGroupUuid_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.newBuilder(repGroupUuid_).mergeFrom(value).buildPartial();
          } else {
            repGroupUuid_ = value;
          }
          onChanged();
        } else {
          repGroupUuidBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid repGroupUuid = 57;</code>
       */
      public Builder clearRepGroupUuid() {
        if (repGroupUuidBuilder_ == null) {
          repGroupUuid_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance();
          onChanged();
        } else {
          repGroupUuidBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00008000);
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid repGroupUuid = 57;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder getRepGroupUuidBuilder() {
        bitField1_ |= 0x00008000;
        onChanged();
        return getRepGroupUuidFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid repGroupUuid = 57;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder getRepGroupUuidOrBuilder() {
        if (repGroupUuidBuilder_ != null) {
          return repGroupUuidBuilder_.getMessageOrBuilder();
        } else {
          return repGroupUuid_;
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid repGroupUuid = 57;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder> 
          getRepGroupUuidFieldBuilder() {
        if (repGroupUuidBuilder_ == null) {
          repGroupUuidBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder>(
                  getRepGroupUuid(),
                  getParentForChildren(),
                  isClean());
          repGroupUuid_ = null;
        }
        return repGroupUuidBuilder_;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid primaryUuid_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder> primaryUuidBuilder_;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid primaryUuid = 58;</code>
       */
      public boolean hasPrimaryUuid() {
        return ((bitField1_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid primaryUuid = 58;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid getPrimaryUuid() {
        if (primaryUuidBuilder_ == null) {
          return primaryUuid_;
        } else {
          return primaryUuidBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid primaryUuid = 58;</code>
       */
      public Builder setPrimaryUuid(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid value) {
        if (primaryUuidBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          primaryUuid_ = value;
          onChanged();
        } else {
          primaryUuidBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid primaryUuid = 58;</code>
       */
      public Builder setPrimaryUuid(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder builderForValue) {
        if (primaryUuidBuilder_ == null) {
          primaryUuid_ = builderForValue.build();
          onChanged();
        } else {
          primaryUuidBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid primaryUuid = 58;</code>
       */
      public Builder mergePrimaryUuid(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid value) {
        if (primaryUuidBuilder_ == null) {
          if (((bitField1_ & 0x00010000) == 0x00010000) &&
              primaryUuid_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance()) {
            primaryUuid_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.newBuilder(primaryUuid_).mergeFrom(value).buildPartial();
          } else {
            primaryUuid_ = value;
          }
          onChanged();
        } else {
          primaryUuidBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid primaryUuid = 58;</code>
       */
      public Builder clearPrimaryUuid() {
        if (primaryUuidBuilder_ == null) {
          primaryUuid_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance();
          onChanged();
        } else {
          primaryUuidBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00010000);
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid primaryUuid = 58;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder getPrimaryUuidBuilder() {
        bitField1_ |= 0x00010000;
        onChanged();
        return getPrimaryUuidFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid primaryUuid = 58;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder getPrimaryUuidOrBuilder() {
        if (primaryUuidBuilder_ != null) {
          return primaryUuidBuilder_.getMessageOrBuilder();
        } else {
          return primaryUuid_;
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid primaryUuid = 58;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder> 
          getPrimaryUuidFieldBuilder() {
        if (primaryUuidBuilder_ == null) {
          primaryUuidBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder>(
                  getPrimaryUuid(),
                  getParentForChildren(),
                  isClean());
          primaryUuid_ = null;
        }
        return primaryUuidBuilder_;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid parityChunkUuid_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder> parityChunkUuidBuilder_;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid parityChunkUuid = 59;</code>
       */
      public boolean hasParityChunkUuid() {
        return ((bitField1_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid parityChunkUuid = 59;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid getParityChunkUuid() {
        if (parityChunkUuidBuilder_ == null) {
          return parityChunkUuid_;
        } else {
          return parityChunkUuidBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid parityChunkUuid = 59;</code>
       */
      public Builder setParityChunkUuid(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid value) {
        if (parityChunkUuidBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          parityChunkUuid_ = value;
          onChanged();
        } else {
          parityChunkUuidBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid parityChunkUuid = 59;</code>
       */
      public Builder setParityChunkUuid(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder builderForValue) {
        if (parityChunkUuidBuilder_ == null) {
          parityChunkUuid_ = builderForValue.build();
          onChanged();
        } else {
          parityChunkUuidBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid parityChunkUuid = 59;</code>
       */
      public Builder mergeParityChunkUuid(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid value) {
        if (parityChunkUuidBuilder_ == null) {
          if (((bitField1_ & 0x00020000) == 0x00020000) &&
              parityChunkUuid_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance()) {
            parityChunkUuid_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.newBuilder(parityChunkUuid_).mergeFrom(value).buildPartial();
          } else {
            parityChunkUuid_ = value;
          }
          onChanged();
        } else {
          parityChunkUuidBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid parityChunkUuid = 59;</code>
       */
      public Builder clearParityChunkUuid() {
        if (parityChunkUuidBuilder_ == null) {
          parityChunkUuid_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.getDefaultInstance();
          onChanged();
        } else {
          parityChunkUuidBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00020000);
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid parityChunkUuid = 59;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder getParityChunkUuidBuilder() {
        bitField1_ |= 0x00020000;
        onChanged();
        return getParityChunkUuidFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid parityChunkUuid = 59;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder getParityChunkUuidOrBuilder() {
        if (parityChunkUuidBuilder_ != null) {
          return parityChunkUuidBuilder_.getMessageOrBuilder();
        } else {
          return parityChunkUuid_;
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Uuid parityChunkUuid = 59;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder> 
          getParityChunkUuidFieldBuilder() {
        if (parityChunkUuidBuilder_ == null) {
          parityChunkUuidBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Uuid.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.UuidOrBuilder>(
                  getParityChunkUuid(),
                  getParentForChildren(),
                  isClean());
          parityChunkUuid_ = null;
        }
        return parityChunkUuidBuilder_;
      }

      private boolean cmPendingForFreeSpaceStats_ ;
      /**
       * <code>optional bool cmPendingForFreeSpaceStats = 60;</code>
       *
       * <pre>
       *Only used to mark if pendingForFreeSpaceStats stats is added for chunk
       * </pre>
       */
      public boolean hasCmPendingForFreeSpaceStats() {
        return ((bitField1_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional bool cmPendingForFreeSpaceStats = 60;</code>
       *
       * <pre>
       *Only used to mark if pendingForFreeSpaceStats stats is added for chunk
       * </pre>
       */
      public boolean getCmPendingForFreeSpaceStats() {
        return cmPendingForFreeSpaceStats_;
      }
      /**
       * <code>optional bool cmPendingForFreeSpaceStats = 60;</code>
       *
       * <pre>
       *Only used to mark if pendingForFreeSpaceStats stats is added for chunk
       * </pre>
       */
      public Builder setCmPendingForFreeSpaceStats(boolean value) {
        bitField1_ |= 0x00040000;
        cmPendingForFreeSpaceStats_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool cmPendingForFreeSpaceStats = 60;</code>
       *
       * <pre>
       *Only used to mark if pendingForFreeSpaceStats stats is added for chunk
       * </pre>
       */
      public Builder clearCmPendingForFreeSpaceStats() {
        bitField1_ = (bitField1_ & ~0x00040000);
        cmPendingForFreeSpaceStats_ = false;
        onChanged();
        return this;
      }

      private long partialSRCopiedData_ ;
      /**
       * <code>optional int64 partialSRCopiedData = 61;</code>
       */
      public boolean hasPartialSRCopiedData() {
        return ((bitField1_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int64 partialSRCopiedData = 61;</code>
       */
      public long getPartialSRCopiedData() {
        return partialSRCopiedData_;
      }
      /**
       * <code>optional int64 partialSRCopiedData = 61;</code>
       */
      public Builder setPartialSRCopiedData(long value) {
        bitField1_ |= 0x00080000;
        partialSRCopiedData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 partialSRCopiedData = 61;</code>
       */
      public Builder clearPartialSRCopiedData() {
        bitField1_ = (bitField1_ & ~0x00080000);
        partialSRCopiedData_ = 0L;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BTreeChunkDataType bTreeChunkDataType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BTreeChunkDataType.GENERAL;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BTreeChunkDataType bTreeChunkDataType = 62 [default = GENERAL];</code>
       */
      public boolean hasBTreeChunkDataType() {
        return ((bitField1_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BTreeChunkDataType bTreeChunkDataType = 62 [default = GENERAL];</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BTreeChunkDataType getBTreeChunkDataType() {
        return bTreeChunkDataType_;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BTreeChunkDataType bTreeChunkDataType = 62 [default = GENERAL];</code>
       */
      public Builder setBTreeChunkDataType(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BTreeChunkDataType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField1_ |= 0x00100000;
        bTreeChunkDataType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BTreeChunkDataType bTreeChunkDataType = 62 [default = GENERAL];</code>
       */
      public Builder clearBTreeChunkDataType() {
        bitField1_ = (bitField1_ & ~0x00100000);
        bTreeChunkDataType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BTreeChunkDataType.GENERAL;
        onChanged();
        return this;
      }

      private boolean isPageTable_ ;
      /**
       * <code>optional bool isPageTable = 63;</code>
       *
       * <pre>
       *a flag to indicate whether should geo replicate for bootstrap
       * </pre>
       */
      public boolean hasIsPageTable() {
        return ((bitField1_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional bool isPageTable = 63;</code>
       *
       * <pre>
       *a flag to indicate whether should geo replicate for bootstrap
       * </pre>
       */
      public boolean getIsPageTable() {
        return isPageTable_;
      }
      /**
       * <code>optional bool isPageTable = 63;</code>
       *
       * <pre>
       *a flag to indicate whether should geo replicate for bootstrap
       * </pre>
       */
      public Builder setIsPageTable(boolean value) {
        bitField1_ |= 0x00200000;
        isPageTable_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isPageTable = 63;</code>
       *
       * <pre>
       *a flag to indicate whether should geo replicate for bootstrap
       * </pre>
       */
      public Builder clearIsPageTable() {
        bitField1_ = (bitField1_ & ~0x00200000);
        isPageTable_ = false;
        onChanged();
        return this;
      }

      private boolean shouldShip_ ;
      /**
       * <code>optional bool shouldShip = 64;</code>
       */
      public boolean hasShouldShip() {
        return ((bitField1_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional bool shouldShip = 64;</code>
       */
      public boolean getShouldShip() {
        return shouldShip_;
      }
      /**
       * <code>optional bool shouldShip = 64;</code>
       */
      public Builder setShouldShip(boolean value) {
        bitField1_ |= 0x00400000;
        shouldShip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool shouldShip = 64;</code>
       */
      public Builder clearShouldShip() {
        bitField1_ = (bitField1_ & ~0x00400000);
        shouldShip_ = false;
        onChanged();
        return this;
      }

      private int maxKnownJournalReplayLength_ ;
      /**
       * <code>optional int32 maxKnownJournalReplayLength = 65;</code>
       *
       * <pre>
       * If journal chunk is active, DTInit find valid chunk length and replay the content, persistent valid length
       * in this filed, the journal seal length should larger than it.
       * </pre>
       */
      public boolean hasMaxKnownJournalReplayLength() {
        return ((bitField1_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int32 maxKnownJournalReplayLength = 65;</code>
       *
       * <pre>
       * If journal chunk is active, DTInit find valid chunk length and replay the content, persistent valid length
       * in this filed, the journal seal length should larger than it.
       * </pre>
       */
      public int getMaxKnownJournalReplayLength() {
        return maxKnownJournalReplayLength_;
      }
      /**
       * <code>optional int32 maxKnownJournalReplayLength = 65;</code>
       *
       * <pre>
       * If journal chunk is active, DTInit find valid chunk length and replay the content, persistent valid length
       * in this filed, the journal seal length should larger than it.
       * </pre>
       */
      public Builder setMaxKnownJournalReplayLength(int value) {
        bitField1_ |= 0x00800000;
        maxKnownJournalReplayLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxKnownJournalReplayLength = 65;</code>
       *
       * <pre>
       * If journal chunk is active, DTInit find valid chunk length and replay the content, persistent valid length
       * in this filed, the journal seal length should larger than it.
       * </pre>
       */
      public Builder clearMaxKnownJournalReplayLength() {
        bitField1_ = (bitField1_ & ~0x00800000);
        maxKnownJournalReplayLength_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object epoch_ = "";
      /**
       * <code>optional string epoch = 66;</code>
       */
      public boolean hasEpoch() {
        return ((bitField1_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional string epoch = 66;</code>
       */
      public java.lang.String getEpoch() {
        java.lang.Object ref = epoch_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            epoch_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string epoch = 66;</code>
       */
      public com.google.protobuf.ByteString
          getEpochBytes() {
        java.lang.Object ref = epoch_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          epoch_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string epoch = 66;</code>
       */
      public Builder setEpoch(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x01000000;
        epoch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string epoch = 66;</code>
       */
      public Builder clearEpoch() {
        bitField1_ = (bitField1_ & ~0x01000000);
        epoch_ = getDefaultInstance().getEpoch();
        onChanged();
        return this;
      }
      /**
       * <code>optional string epoch = 66;</code>
       */
      public Builder setEpochBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x01000000;
        epoch_ = value;
        onChanged();
        return this;
      }

      private int maxWriteBlockSize_ ;
      /**
       * <code>optional int32 maxWriteBlockSize = 67;</code>
       *
       * <pre>
       * for big hummer
       * </pre>
       */
      public boolean hasMaxWriteBlockSize() {
        return ((bitField1_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int32 maxWriteBlockSize = 67;</code>
       *
       * <pre>
       * for big hummer
       * </pre>
       */
      public int getMaxWriteBlockSize() {
        return maxWriteBlockSize_;
      }
      /**
       * <code>optional int32 maxWriteBlockSize = 67;</code>
       *
       * <pre>
       * for big hummer
       * </pre>
       */
      public Builder setMaxWriteBlockSize(int value) {
        bitField1_ |= 0x02000000;
        maxWriteBlockSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxWriteBlockSize = 67;</code>
       *
       * <pre>
       * for big hummer
       * </pre>
       */
      public Builder clearMaxWriteBlockSize() {
        bitField1_ = (bitField1_ & ~0x02000000);
        maxWriteBlockSize_ = 0;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy storagePolicy_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicyOrBuilder> storagePolicyBuilder_;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 68;</code>
       */
      public boolean hasStoragePolicy() {
        return ((bitField1_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 68;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy getStoragePolicy() {
        if (storagePolicyBuilder_ == null) {
          return storagePolicy_;
        } else {
          return storagePolicyBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 68;</code>
       */
      public Builder setStoragePolicy(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy value) {
        if (storagePolicyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          storagePolicy_ = value;
          onChanged();
        } else {
          storagePolicyBuilder_.setMessage(value);
        }
        bitField1_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 68;</code>
       */
      public Builder setStoragePolicy(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.Builder builderForValue) {
        if (storagePolicyBuilder_ == null) {
          storagePolicy_ = builderForValue.build();
          onChanged();
        } else {
          storagePolicyBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 68;</code>
       */
      public Builder mergeStoragePolicy(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy value) {
        if (storagePolicyBuilder_ == null) {
          if (((bitField1_ & 0x04000000) == 0x04000000) &&
              storagePolicy_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.getDefaultInstance()) {
            storagePolicy_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.newBuilder(storagePolicy_).mergeFrom(value).buildPartial();
          } else {
            storagePolicy_ = value;
          }
          onChanged();
        } else {
          storagePolicyBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 68;</code>
       */
      public Builder clearStoragePolicy() {
        if (storagePolicyBuilder_ == null) {
          storagePolicy_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.getDefaultInstance();
          onChanged();
        } else {
          storagePolicyBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x04000000);
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 68;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.Builder getStoragePolicyBuilder() {
        bitField1_ |= 0x04000000;
        onChanged();
        return getStoragePolicyFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 68;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicyOrBuilder getStoragePolicyOrBuilder() {
        if (storagePolicyBuilder_ != null) {
          return storagePolicyBuilder_.getMessageOrBuilder();
        } else {
          return storagePolicy_;
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 68;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicyOrBuilder> 
          getStoragePolicyFieldBuilder() {
        if (storagePolicyBuilder_ == null) {
          storagePolicyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicyOrBuilder>(
                  getStoragePolicy(),
                  getParentForChildren(),
                  isClean());
          storagePolicy_ = null;
        }
        return storagePolicyBuilder_;
      }

      private boolean generatedSRPrecheckTask_ ;
      /**
       * <code>optional bool generatedSRPrecheckTask = 69;</code>
       *
       * <pre>
       * if has generated precheck task
       * </pre>
       */
      public boolean hasGeneratedSRPrecheckTask() {
        return ((bitField1_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional bool generatedSRPrecheckTask = 69;</code>
       *
       * <pre>
       * if has generated precheck task
       * </pre>
       */
      public boolean getGeneratedSRPrecheckTask() {
        return generatedSRPrecheckTask_;
      }
      /**
       * <code>optional bool generatedSRPrecheckTask = 69;</code>
       *
       * <pre>
       * if has generated precheck task
       * </pre>
       */
      public Builder setGeneratedSRPrecheckTask(boolean value) {
        bitField1_ |= 0x08000000;
        generatedSRPrecheckTask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool generatedSRPrecheckTask = 69;</code>
       *
       * <pre>
       * if has generated precheck task
       * </pre>
       */
      public Builder clearGeneratedSRPrecheckTask() {
        bitField1_ = (bitField1_ & ~0x08000000);
        generatedSRPrecheckTask_ = false;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Source source_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Source.USER_INJECTED;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Source source = 70;</code>
       */
      public boolean hasSource() {
        return ((bitField1_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Source source = 70;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Source getSource() {
        return source_;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Source source = 70;</code>
       */
      public Builder setSource(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Source value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField1_ |= 0x10000000;
        source_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Source source = 70;</code>
       */
      public Builder clearSource() {
        bitField1_ = (bitField1_ & ~0x10000000);
        source_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Source.USER_INJECTED;
        onChanged();
        return this;
      }

      private boolean everForceCheckedReclaimable_ ;
      /**
       * <code>optional bool everForceCheckedReclaimable = 71;</code>
       *
       * <pre>
       * if has ever force checked reclaimable/canSkipGCVerification regardless RepoReferenceCollectorStatus
       * </pre>
       */
      public boolean hasEverForceCheckedReclaimable() {
        return ((bitField1_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional bool everForceCheckedReclaimable = 71;</code>
       *
       * <pre>
       * if has ever force checked reclaimable/canSkipGCVerification regardless RepoReferenceCollectorStatus
       * </pre>
       */
      public boolean getEverForceCheckedReclaimable() {
        return everForceCheckedReclaimable_;
      }
      /**
       * <code>optional bool everForceCheckedReclaimable = 71;</code>
       *
       * <pre>
       * if has ever force checked reclaimable/canSkipGCVerification regardless RepoReferenceCollectorStatus
       * </pre>
       */
      public Builder setEverForceCheckedReclaimable(boolean value) {
        bitField1_ |= 0x20000000;
        everForceCheckedReclaimable_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool everForceCheckedReclaimable = 71;</code>
       *
       * <pre>
       * if has ever force checked reclaimable/canSkipGCVerification regardless RepoReferenceCollectorStatus
       * </pre>
       */
      public Builder clearEverForceCheckedReclaimable() {
        bitField1_ = (bitField1_ & ~0x20000000);
        everForceCheckedReclaimable_ = false;
        onChanged();
        return this;
      }

      private int dataRepoFree_ ;
      /**
       * <code>optional int32 dataRepoFree = 72;</code>
       *
       * <pre>
       * Total amount of data of free full virtual segments for ECed repo chunks
       * </pre>
       */
      public boolean hasDataRepoFree() {
        return ((bitField1_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int32 dataRepoFree = 72;</code>
       *
       * <pre>
       * Total amount of data of free full virtual segments for ECed repo chunks
       * </pre>
       */
      public int getDataRepoFree() {
        return dataRepoFree_;
      }
      /**
       * <code>optional int32 dataRepoFree = 72;</code>
       *
       * <pre>
       * Total amount of data of free full virtual segments for ECed repo chunks
       * </pre>
       */
      public Builder setDataRepoFree(int value) {
        bitField1_ |= 0x40000000;
        dataRepoFree_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dataRepoFree = 72;</code>
       *
       * <pre>
       * Total amount of data of free full virtual segments for ECed repo chunks
       * </pre>
       */
      public Builder clearDataRepoFree() {
        bitField1_ = (bitField1_ & ~0x40000000);
        dataRepoFree_ = 0;
        onChanged();
        return this;
      }

      private int indexGranularity_ ;
      /**
       * <code>optional int32 indexGranularity = 73;</code>
       */
      public boolean hasIndexGranularity() {
        return ((bitField1_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional int32 indexGranularity = 73;</code>
       */
      public int getIndexGranularity() {
        return indexGranularity_;
      }
      /**
       * <code>optional int32 indexGranularity = 73;</code>
       */
      public Builder setIndexGranularity(int value) {
        bitField1_ |= 0x80000000;
        indexGranularity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 indexGranularity = 73;</code>
       */
      public Builder clearIndexGranularity() {
        bitField1_ = (bitField1_ & ~0x80000000);
        indexGranularity_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object originalKey_ = "";
      /**
       * <code>optional string originalKey = 74;</code>
       */
      public boolean hasOriginalKey() {
        return ((bitField2_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string originalKey = 74;</code>
       */
      public java.lang.String getOriginalKey() {
        java.lang.Object ref = originalKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            originalKey_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string originalKey = 74;</code>
       */
      public com.google.protobuf.ByteString
          getOriginalKeyBytes() {
        java.lang.Object ref = originalKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          originalKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string originalKey = 74;</code>
       */
      public Builder setOriginalKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField2_ |= 0x00000001;
        originalKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string originalKey = 74;</code>
       */
      public Builder clearOriginalKey() {
        bitField2_ = (bitField2_ & ~0x00000001);
        originalKey_ = getDefaultInstance().getOriginalKey();
        onChanged();
        return this;
      }
      /**
       * <code>optional string originalKey = 74;</code>
       */
      public Builder setOriginalKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField2_ |= 0x00000001;
        originalKey_ = value;
        onChanged();
        return this;
      }

      private long tag_ ;
      /**
       * <code>optional int64 tag = 75;</code>
       */
      public boolean hasTag() {
        return ((bitField2_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 tag = 75;</code>
       */
      public long getTag() {
        return tag_;
      }
      /**
       * <code>optional int64 tag = 75;</code>
       */
      public Builder setTag(long value) {
        bitField2_ |= 0x00000002;
        tag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 tag = 75;</code>
       */
      public Builder clearTag() {
        bitField2_ = (bitField2_ & ~0x00000002);
        tag_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo)
    }

    static {
      defaultInstance = new ChunkInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo)
  }

  public interface StoragePolicyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     *should be unique
     * </pre>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     *should be unique
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     *should be unique
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecScheme = 2;</code>
     */
    boolean hasEcScheme();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecScheme = 2;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme getEcScheme();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecScheme = 2;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeSchemeOrBuilder getEcSchemeOrBuilder();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.PlacementSafeCheckLevel placementSafeCheckLevel = 3;</code>
     */
    boolean hasPlacementSafeCheckLevel();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.PlacementSafeCheckLevel placementSafeCheckLevel = 3;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.PlacementSafeCheckLevel getPlacementSafeCheckLevel();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy}
   */
  public static final class StoragePolicy extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy)
      StoragePolicyOrBuilder {
    // Use StoragePolicy.newBuilder() to construct.
    private StoragePolicy(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private StoragePolicy(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final StoragePolicy defaultInstance;
    public static StoragePolicy getDefaultInstance() {
      return defaultInstance;
    }

    public StoragePolicy getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private StoragePolicy(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 18: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = ecScheme_.toBuilder();
              }
              ecScheme_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ecScheme_);
                ecScheme_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.PlacementSafeCheckLevel value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.PlacementSafeCheckLevel.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                placementSafeCheckLevel_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_StoragePolicy_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_StoragePolicy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.Builder.class);
    }

    public static com.google.protobuf.Parser<StoragePolicy> PARSER =
        new com.google.protobuf.AbstractParser<StoragePolicy>() {
      public StoragePolicy parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StoragePolicy(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<StoragePolicy> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     *should be unique
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     *should be unique
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     *should be unique
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ECSCHEME_FIELD_NUMBER = 2;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme ecScheme_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecScheme = 2;</code>
     */
    public boolean hasEcScheme() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecScheme = 2;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme getEcScheme() {
      return ecScheme_;
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecScheme = 2;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeSchemeOrBuilder getEcSchemeOrBuilder() {
      return ecScheme_;
    }

    public static final int PLACEMENTSAFECHECKLEVEL_FIELD_NUMBER = 3;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.PlacementSafeCheckLevel placementSafeCheckLevel_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.PlacementSafeCheckLevel placementSafeCheckLevel = 3;</code>
     */
    public boolean hasPlacementSafeCheckLevel() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.PlacementSafeCheckLevel placementSafeCheckLevel = 3;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.PlacementSafeCheckLevel getPlacementSafeCheckLevel() {
      return placementSafeCheckLevel_;
    }

    private void initFields() {
      name_ = "";
      ecScheme_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.getDefaultInstance();
      placementSafeCheckLevel_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.PlacementSafeCheckLevel.FD;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasEcScheme()) {
        if (!getEcScheme().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, ecScheme_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, placementSafeCheckLevel_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, ecScheme_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, placementSafeCheckLevel_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_StoragePolicy_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_StoragePolicy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getEcSchemeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (ecSchemeBuilder_ == null) {
          ecScheme_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.getDefaultInstance();
        } else {
          ecSchemeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        placementSafeCheckLevel_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.PlacementSafeCheckLevel.FD;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_StoragePolicy_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (ecSchemeBuilder_ == null) {
          result.ecScheme_ = ecScheme_;
        } else {
          result.ecScheme_ = ecSchemeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.placementSafeCheckLevel_ = placementSafeCheckLevel_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasEcScheme()) {
          mergeEcScheme(other.getEcScheme());
        }
        if (other.hasPlacementSafeCheckLevel()) {
          setPlacementSafeCheckLevel(other.getPlacementSafeCheckLevel());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasEcScheme()) {
          if (!getEcScheme().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       *should be unique
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       *should be unique
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       *should be unique
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       *should be unique
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       *should be unique
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       *should be unique
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme ecScheme_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeSchemeOrBuilder> ecSchemeBuilder_;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecScheme = 2;</code>
       */
      public boolean hasEcScheme() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecScheme = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme getEcScheme() {
        if (ecSchemeBuilder_ == null) {
          return ecScheme_;
        } else {
          return ecSchemeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecScheme = 2;</code>
       */
      public Builder setEcScheme(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme value) {
        if (ecSchemeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ecScheme_ = value;
          onChanged();
        } else {
          ecSchemeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecScheme = 2;</code>
       */
      public Builder setEcScheme(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.Builder builderForValue) {
        if (ecSchemeBuilder_ == null) {
          ecScheme_ = builderForValue.build();
          onChanged();
        } else {
          ecSchemeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecScheme = 2;</code>
       */
      public Builder mergeEcScheme(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme value) {
        if (ecSchemeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              ecScheme_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.getDefaultInstance()) {
            ecScheme_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.newBuilder(ecScheme_).mergeFrom(value).buildPartial();
          } else {
            ecScheme_ = value;
          }
          onChanged();
        } else {
          ecSchemeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecScheme = 2;</code>
       */
      public Builder clearEcScheme() {
        if (ecSchemeBuilder_ == null) {
          ecScheme_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.getDefaultInstance();
          onChanged();
        } else {
          ecSchemeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecScheme = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.Builder getEcSchemeBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getEcSchemeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecScheme = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeSchemeOrBuilder getEcSchemeOrBuilder() {
        if (ecSchemeBuilder_ != null) {
          return ecSchemeBuilder_.getMessageOrBuilder();
        } else {
          return ecScheme_;
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecScheme = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeSchemeOrBuilder> 
          getEcSchemeFieldBuilder() {
        if (ecSchemeBuilder_ == null) {
          ecSchemeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeSchemeOrBuilder>(
                  getEcScheme(),
                  getParentForChildren(),
                  isClean());
          ecScheme_ = null;
        }
        return ecSchemeBuilder_;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.PlacementSafeCheckLevel placementSafeCheckLevel_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.PlacementSafeCheckLevel.FD;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.PlacementSafeCheckLevel placementSafeCheckLevel = 3;</code>
       */
      public boolean hasPlacementSafeCheckLevel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.PlacementSafeCheckLevel placementSafeCheckLevel = 3;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.PlacementSafeCheckLevel getPlacementSafeCheckLevel() {
        return placementSafeCheckLevel_;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.PlacementSafeCheckLevel placementSafeCheckLevel = 3;</code>
       */
      public Builder setPlacementSafeCheckLevel(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.PlacementSafeCheckLevel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        placementSafeCheckLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.PlacementSafeCheckLevel placementSafeCheckLevel = 3;</code>
       */
      public Builder clearPlacementSafeCheckLevel() {
        bitField0_ = (bitField0_ & ~0x00000004);
        placementSafeCheckLevel_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.PlacementSafeCheckLevel.FD;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy)
    }

    static {
      defaultInstance = new StoragePolicy(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy)
  }

  public interface ChunkCreateRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCreateRequest)
      com.google.protobuf.GeneratedMessage.
          ExtendableMessageOrBuilder<ChunkCreateRequest> {

    /**
     * <code>required string chunkId = 1;</code>
     */
    boolean hasChunkId();
    /**
     * <code>required string chunkId = 1;</code>
     */
    java.lang.String getChunkId();
    /**
     * <code>required string chunkId = 1;</code>
     */
    com.google.protobuf.ByteString
        getChunkIdBytes();

    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDataType dataType = 2;</code>
     */
    boolean hasDataType();
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDataType dataType = 2;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType getDataType();

    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkType type = 3;</code>
     *
     * <pre>
     * could be LOCAL, REMOTE or COPY
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkType type = 3;</code>
     *
     * <pre>
     * could be LOCAL, REMOTE or COPY
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType getType();

    /**
     * <code>optional string writerNodeId = 4;</code>
     *
     * <pre>
     * node id of the writer, CM will pick up one SS on the same node for the writer
     * not required for REMOTE chunk
     * </pre>
     */
    boolean hasWriterNodeId();
    /**
     * <code>optional string writerNodeId = 4;</code>
     *
     * <pre>
     * node id of the writer, CM will pick up one SS on the same node for the writer
     * not required for REMOTE chunk
     * </pre>
     */
    java.lang.String getWriterNodeId();
    /**
     * <code>optional string writerNodeId = 4;</code>
     *
     * <pre>
     * node id of the writer, CM will pick up one SS on the same node for the writer
     * not required for REMOTE chunk
     * </pre>
     */
    com.google.protobuf.ByteString
        getWriterNodeIdBytes();

    /**
     * <code>optional string primary = 5;</code>
     *
     * <pre>
     * zone of primary, present if type is COPY
     * </pre>
     */
    boolean hasPrimary();
    /**
     * <code>optional string primary = 5;</code>
     *
     * <pre>
     * zone of primary, present if type is COPY
     * </pre>
     */
    java.lang.String getPrimary();
    /**
     * <code>optional string primary = 5;</code>
     *
     * <pre>
     * zone of primary, present if type is COPY
     * </pre>
     */
    com.google.protobuf.ByteString
        getPrimaryBytes();

    /**
     * <code>optional string writerId = 6;</code>
     *
     * <pre>
     * writer id, as there could be multiple writers on the same node
     * </pre>
     */
    boolean hasWriterId();
    /**
     * <code>optional string writerId = 6;</code>
     *
     * <pre>
     * writer id, as there could be multiple writers on the same node
     * </pre>
     */
    java.lang.String getWriterId();
    /**
     * <code>optional string writerId = 6;</code>
     *
     * <pre>
     * writer id, as there could be multiple writers on the same node
     * </pre>
     */
    com.google.protobuf.ByteString
        getWriterIdBytes();

    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
     *
     * <pre>
     * simply use SSLocation though it has some redundant fields
     * </pre>
     */
    java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation> 
        getHintsList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
     *
     * <pre>
     * simply use SSLocation though it has some redundant fields
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation getHints(int index);
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
     *
     * <pre>
     * simply use SSLocation though it has some redundant fields
     * </pre>
     */
    int getHintsCount();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
     *
     * <pre>
     * simply use SSLocation though it has some redundant fields
     * </pre>
     */
    java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder> 
        getHintsOrBuilderList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
     *
     * <pre>
     * simply use SSLocation though it has some redundant fields
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder getHintsOrBuilder(
        int index);

    /**
     * <code>optional bool unlimitedSize = 8 [default = false];</code>
     *
     * <pre>
     * if the chunk is for file access (thus size is unlimited)
     * </pre>
     */
    boolean hasUnlimitedSize();
    /**
     * <code>optional bool unlimitedSize = 8 [default = false];</code>
     *
     * <pre>
     * if the chunk is for file access (thus size is unlimited)
     * </pre>
     */
    boolean getUnlimitedSize();

    /**
     * <code>optional string repGroup = 9;</code>
     *
     * <pre>
     * replication group
     * </pre>
     */
    boolean hasRepGroup();
    /**
     * <code>optional string repGroup = 9;</code>
     *
     * <pre>
     * replication group
     * </pre>
     */
    java.lang.String getRepGroup();
    /**
     * <code>optional string repGroup = 9;</code>
     *
     * <pre>
     * replication group
     * </pre>
     */
    com.google.protobuf.ByteString
        getRepGroupBytes();

    /**
     * <code>optional string fsDeviceId = 10;</code>
     *
     * <pre>
     * file system device Id is used for file access mode where chunk needs to be created on a specific device
     * so this needs to be passed from client to CM to SSM
     * </pre>
     */
    boolean hasFsDeviceId();
    /**
     * <code>optional string fsDeviceId = 10;</code>
     *
     * <pre>
     * file system device Id is used for file access mode where chunk needs to be created on a specific device
     * so this needs to be passed from client to CM to SSM
     * </pre>
     */
    java.lang.String getFsDeviceId();
    /**
     * <code>optional string fsDeviceId = 10;</code>
     *
     * <pre>
     * file system device Id is used for file access mode where chunk needs to be created on a specific device
     * so this needs to be passed from client to CM to SSM
     * </pre>
     */
    com.google.protobuf.ByteString
        getFsDeviceIdBytes();

    /**
     * <code>optional string filePath = 11;</code>
     */
    boolean hasFilePath();
    /**
     * <code>optional string filePath = 11;</code>
     */
    java.lang.String getFilePath();
    /**
     * <code>optional string filePath = 11;</code>
     */
    com.google.protobuf.ByteString
        getFilePathBytes();

    /**
     * <code>optional int64 fileOffset = 12;</code>
     */
    boolean hasFileOffset();
    /**
     * <code>optional int64 fileOffset = 12;</code>
     */
    long getFileOffset();

    /**
     * <code>optional int32 chunkSize = 13;</code>
     */
    boolean hasChunkSize();
    /**
     * <code>optional int32 chunkSize = 13;</code>
     */
    int getChunkSize();

    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
     *
     * <pre>
     *negative hints for CM to create chunks
     * </pre>
     */
    java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation> 
        getNegativeHintsList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
     *
     * <pre>
     *negative hints for CM to create chunks
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation getNegativeHints(int index);
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
     *
     * <pre>
     *negative hints for CM to create chunks
     * </pre>
     */
    int getNegativeHintsCount();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
     *
     * <pre>
     *negative hints for CM to create chunks
     * </pre>
     */
    java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder> 
        getNegativeHintsOrBuilderList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
     *
     * <pre>
     *negative hints for CM to create chunks
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder getNegativeHintsOrBuilder(
        int index);

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RepoChunkType repoChunkType = 15;</code>
     */
    boolean hasRepoChunkType();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RepoChunkType repoChunkType = 15;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RepoChunkType getRepoChunkType();

    /**
     * <code>optional bool skipChunkSequenceNumber = 16;</code>
     */
    boolean hasSkipChunkSequenceNumber();
    /**
     * <code>optional bool skipChunkSequenceNumber = 16;</code>
     */
    boolean getSkipChunkSequenceNumber();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCustomState customState = 17;</code>
     */
    boolean hasCustomState();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCustomState customState = 17;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCustomState getCustomState();

    /**
     * <code>repeated string dtTypes = 18;</code>
     *
     * <pre>
     *DT types stored in this chunk (for btree only)
     * </pre>
     */
    com.google.protobuf.ProtocolStringList
        getDtTypesList();
    /**
     * <code>repeated string dtTypes = 18;</code>
     *
     * <pre>
     *DT types stored in this chunk (for btree only)
     * </pre>
     */
    int getDtTypesCount();
    /**
     * <code>repeated string dtTypes = 18;</code>
     *
     * <pre>
     *DT types stored in this chunk (for btree only)
     * </pre>
     */
    java.lang.String getDtTypes(int index);
    /**
     * <code>repeated string dtTypes = 18;</code>
     *
     * <pre>
     *DT types stored in this chunk (for btree only)
     * </pre>
     */
    com.google.protobuf.ByteString
        getDtTypesBytes(int index);

    /**
     * <code>optional int32 alignmentSize = 19;</code>
     */
    boolean hasAlignmentSize();
    /**
     * <code>optional int32 alignmentSize = 19;</code>
     */
    int getAlignmentSize();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BTreeChunkDataType bTreeChunkDataType = 20 [default = GENERAL];</code>
     */
    boolean hasBTreeChunkDataType();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BTreeChunkDataType bTreeChunkDataType = 20 [default = GENERAL];</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BTreeChunkDataType getBTreeChunkDataType();

    /**
     * <code>optional bool isPageTable = 21;</code>
     */
    boolean hasIsPageTable();
    /**
     * <code>optional bool isPageTable = 21;</code>
     */
    boolean getIsPageTable();

    /**
     * <code>optional int32 maxWriteBlockSize = 22;</code>
     */
    boolean hasMaxWriteBlockSize();
    /**
     * <code>optional int32 maxWriteBlockSize = 22;</code>
     */
    int getMaxWriteBlockSize();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 23;</code>
     */
    boolean hasStoragePolicy();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 23;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy getStoragePolicy();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 23;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicyOrBuilder getStoragePolicyOrBuilder();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Source source = 24;</code>
     */
    boolean hasSource();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Source source = 24;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Source getSource();

    /**
     * <code>optional int32 indexGranularity = 25;</code>
     *
     * <pre>
     * for chunk server
     * </pre>
     */
    boolean hasIndexGranularity();
    /**
     * <code>optional int32 indexGranularity = 25;</code>
     *
     * <pre>
     * for chunk server
     * </pre>
     */
    int getIndexGranularity();

    /**
     * <code>optional int32 customChunkSize = 26;</code>
     */
    boolean hasCustomChunkSize();
    /**
     * <code>optional int32 customChunkSize = 26;</code>
     */
    int getCustomChunkSize();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 27;</code>
     */
    boolean hasEcCodeScheme();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 27;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme getEcCodeScheme();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 27;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeSchemeOrBuilder getEcCodeSchemeOrBuilder();

    /**
     * <code>optional bool skipRepoGC = 28;</code>
     */
    boolean hasSkipRepoGC();
    /**
     * <code>optional bool skipRepoGC = 28;</code>
     */
    boolean getSkipRepoGC();

    /**
     * <code>optional string originalKey = 29;</code>
     */
    boolean hasOriginalKey();
    /**
     * <code>optional string originalKey = 29;</code>
     */
    java.lang.String getOriginalKey();
    /**
     * <code>optional string originalKey = 29;</code>
     */
    com.google.protobuf.ByteString
        getOriginalKeyBytes();

    /**
     * <code>optional int64 tag = 30;</code>
     */
    boolean hasTag();
    /**
     * <code>optional int64 tag = 30;</code>
     */
    long getTag();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCreateRequest}
   *
   * <pre>
   * create LOCAL or COPY chunk
   * </pre>
   */
  public static final class ChunkCreateRequest extends
      com.google.protobuf.GeneratedMessage.ExtendableMessage<
        ChunkCreateRequest> implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCreateRequest)
      ChunkCreateRequestOrBuilder {
    // Use ChunkCreateRequest.newBuilder() to construct.
    private ChunkCreateRequest(com.google.protobuf.GeneratedMessage.ExtendableBuilder<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest, ?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ChunkCreateRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ChunkCreateRequest defaultInstance;
    public static ChunkCreateRequest getDefaultInstance() {
      return defaultInstance;
    }

    public ChunkCreateRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ChunkCreateRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              chunkId_ = bs;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                dataType_ = value;
              }
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                type_ = value;
              }
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              writerNodeId_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              primary_ = bs;
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              writerId_ = bs;
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                hints_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation>();
                mutable_bitField0_ |= 0x00000040;
              }
              hints_.add(input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.PARSER, extensionRegistry));
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              unlimitedSize_ = input.readBool();
              break;
            }
            case 74: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000080;
              repGroup_ = bs;
              break;
            }
            case 82: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000100;
              fsDeviceId_ = bs;
              break;
            }
            case 90: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000200;
              filePath_ = bs;
              break;
            }
            case 96: {
              bitField0_ |= 0x00000400;
              fileOffset_ = input.readInt64();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000800;
              chunkSize_ = input.readInt32();
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                negativeHints_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation>();
                mutable_bitField0_ |= 0x00002000;
              }
              negativeHints_.add(input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.PARSER, extensionRegistry));
              break;
            }
            case 120: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RepoChunkType value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RepoChunkType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(15, rawValue);
              } else {
                bitField0_ |= 0x00001000;
                repoChunkType_ = value;
              }
              break;
            }
            case 128: {
              bitField0_ |= 0x00002000;
              skipChunkSequenceNumber_ = input.readBool();
              break;
            }
            case 136: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCustomState value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCustomState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(17, rawValue);
              } else {
                bitField0_ |= 0x00004000;
                customState_ = value;
              }
              break;
            }
            case 146: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                dtTypes_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00020000;
              }
              dtTypes_.add(bs);
              break;
            }
            case 152: {
              bitField0_ |= 0x00008000;
              alignmentSize_ = input.readInt32();
              break;
            }
            case 160: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BTreeChunkDataType value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BTreeChunkDataType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(20, rawValue);
              } else {
                bitField0_ |= 0x00010000;
                bTreeChunkDataType_ = value;
              }
              break;
            }
            case 168: {
              bitField0_ |= 0x00020000;
              isPageTable_ = input.readBool();
              break;
            }
            case 176: {
              bitField0_ |= 0x00040000;
              maxWriteBlockSize_ = input.readInt32();
              break;
            }
            case 186: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.Builder subBuilder = null;
              if (((bitField0_ & 0x00080000) == 0x00080000)) {
                subBuilder = storagePolicy_.toBuilder();
              }
              storagePolicy_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(storagePolicy_);
                storagePolicy_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00080000;
              break;
            }
            case 192: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Source value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Source.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(24, rawValue);
              } else {
                bitField0_ |= 0x00100000;
                source_ = value;
              }
              break;
            }
            case 200: {
              bitField0_ |= 0x00200000;
              indexGranularity_ = input.readInt32();
              break;
            }
            case 208: {
              bitField0_ |= 0x00400000;
              customChunkSize_ = input.readInt32();
              break;
            }
            case 218: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.Builder subBuilder = null;
              if (((bitField0_ & 0x00800000) == 0x00800000)) {
                subBuilder = ecCodeScheme_.toBuilder();
              }
              ecCodeScheme_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ecCodeScheme_);
                ecCodeScheme_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00800000;
              break;
            }
            case 224: {
              bitField0_ |= 0x01000000;
              skipRepoGC_ = input.readBool();
              break;
            }
            case 234: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x02000000;
              originalKey_ = bs;
              break;
            }
            case 240: {
              bitField0_ |= 0x04000000;
              tag_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          hints_ = java.util.Collections.unmodifiableList(hints_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          negativeHints_ = java.util.Collections.unmodifiableList(negativeHints_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          dtTypes_ = dtTypes_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkCreateRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkCreateRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<ChunkCreateRequest> PARSER =
        new com.google.protobuf.AbstractParser<ChunkCreateRequest>() {
      public ChunkCreateRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChunkCreateRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ChunkCreateRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CHUNKID_FIELD_NUMBER = 1;
    private java.lang.Object chunkId_;
    /**
     * <code>required string chunkId = 1;</code>
     */
    public boolean hasChunkId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string chunkId = 1;</code>
     */
    public java.lang.String getChunkId() {
      java.lang.Object ref = chunkId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          chunkId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string chunkId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getChunkIdBytes() {
      java.lang.Object ref = chunkId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        chunkId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATATYPE_FIELD_NUMBER = 2;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType dataType_;
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDataType dataType = 2;</code>
     */
    public boolean hasDataType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDataType dataType = 2;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType getDataType() {
      return dataType_;
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType type_;
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkType type = 3;</code>
     *
     * <pre>
     * could be LOCAL, REMOTE or COPY
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkType type = 3;</code>
     *
     * <pre>
     * could be LOCAL, REMOTE or COPY
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType getType() {
      return type_;
    }

    public static final int WRITERNODEID_FIELD_NUMBER = 4;
    private java.lang.Object writerNodeId_;
    /**
     * <code>optional string writerNodeId = 4;</code>
     *
     * <pre>
     * node id of the writer, CM will pick up one SS on the same node for the writer
     * not required for REMOTE chunk
     * </pre>
     */
    public boolean hasWriterNodeId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string writerNodeId = 4;</code>
     *
     * <pre>
     * node id of the writer, CM will pick up one SS on the same node for the writer
     * not required for REMOTE chunk
     * </pre>
     */
    public java.lang.String getWriterNodeId() {
      java.lang.Object ref = writerNodeId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          writerNodeId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string writerNodeId = 4;</code>
     *
     * <pre>
     * node id of the writer, CM will pick up one SS on the same node for the writer
     * not required for REMOTE chunk
     * </pre>
     */
    public com.google.protobuf.ByteString
        getWriterNodeIdBytes() {
      java.lang.Object ref = writerNodeId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        writerNodeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRIMARY_FIELD_NUMBER = 5;
    private java.lang.Object primary_;
    /**
     * <code>optional string primary = 5;</code>
     *
     * <pre>
     * zone of primary, present if type is COPY
     * </pre>
     */
    public boolean hasPrimary() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string primary = 5;</code>
     *
     * <pre>
     * zone of primary, present if type is COPY
     * </pre>
     */
    public java.lang.String getPrimary() {
      java.lang.Object ref = primary_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          primary_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string primary = 5;</code>
     *
     * <pre>
     * zone of primary, present if type is COPY
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPrimaryBytes() {
      java.lang.Object ref = primary_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        primary_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WRITERID_FIELD_NUMBER = 6;
    private java.lang.Object writerId_;
    /**
     * <code>optional string writerId = 6;</code>
     *
     * <pre>
     * writer id, as there could be multiple writers on the same node
     * </pre>
     */
    public boolean hasWriterId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string writerId = 6;</code>
     *
     * <pre>
     * writer id, as there could be multiple writers on the same node
     * </pre>
     */
    public java.lang.String getWriterId() {
      java.lang.Object ref = writerId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          writerId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string writerId = 6;</code>
     *
     * <pre>
     * writer id, as there could be multiple writers on the same node
     * </pre>
     */
    public com.google.protobuf.ByteString
        getWriterIdBytes() {
      java.lang.Object ref = writerId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        writerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HINTS_FIELD_NUMBER = 7;
    private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation> hints_;
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
     *
     * <pre>
     * simply use SSLocation though it has some redundant fields
     * </pre>
     */
    public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation> getHintsList() {
      return hints_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
     *
     * <pre>
     * simply use SSLocation though it has some redundant fields
     * </pre>
     */
    public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder> 
        getHintsOrBuilderList() {
      return hints_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
     *
     * <pre>
     * simply use SSLocation though it has some redundant fields
     * </pre>
     */
    public int getHintsCount() {
      return hints_.size();
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
     *
     * <pre>
     * simply use SSLocation though it has some redundant fields
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation getHints(int index) {
      return hints_.get(index);
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
     *
     * <pre>
     * simply use SSLocation though it has some redundant fields
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder getHintsOrBuilder(
        int index) {
      return hints_.get(index);
    }

    public static final int UNLIMITEDSIZE_FIELD_NUMBER = 8;
    private boolean unlimitedSize_;
    /**
     * <code>optional bool unlimitedSize = 8 [default = false];</code>
     *
     * <pre>
     * if the chunk is for file access (thus size is unlimited)
     * </pre>
     */
    public boolean hasUnlimitedSize() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool unlimitedSize = 8 [default = false];</code>
     *
     * <pre>
     * if the chunk is for file access (thus size is unlimited)
     * </pre>
     */
    public boolean getUnlimitedSize() {
      return unlimitedSize_;
    }

    public static final int REPGROUP_FIELD_NUMBER = 9;
    private java.lang.Object repGroup_;
    /**
     * <code>optional string repGroup = 9;</code>
     *
     * <pre>
     * replication group
     * </pre>
     */
    public boolean hasRepGroup() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string repGroup = 9;</code>
     *
     * <pre>
     * replication group
     * </pre>
     */
    public java.lang.String getRepGroup() {
      java.lang.Object ref = repGroup_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          repGroup_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string repGroup = 9;</code>
     *
     * <pre>
     * replication group
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRepGroupBytes() {
      java.lang.Object ref = repGroup_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        repGroup_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FSDEVICEID_FIELD_NUMBER = 10;
    private java.lang.Object fsDeviceId_;
    /**
     * <code>optional string fsDeviceId = 10;</code>
     *
     * <pre>
     * file system device Id is used for file access mode where chunk needs to be created on a specific device
     * so this needs to be passed from client to CM to SSM
     * </pre>
     */
    public boolean hasFsDeviceId() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string fsDeviceId = 10;</code>
     *
     * <pre>
     * file system device Id is used for file access mode where chunk needs to be created on a specific device
     * so this needs to be passed from client to CM to SSM
     * </pre>
     */
    public java.lang.String getFsDeviceId() {
      java.lang.Object ref = fsDeviceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fsDeviceId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string fsDeviceId = 10;</code>
     *
     * <pre>
     * file system device Id is used for file access mode where chunk needs to be created on a specific device
     * so this needs to be passed from client to CM to SSM
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFsDeviceIdBytes() {
      java.lang.Object ref = fsDeviceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fsDeviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILEPATH_FIELD_NUMBER = 11;
    private java.lang.Object filePath_;
    /**
     * <code>optional string filePath = 11;</code>
     */
    public boolean hasFilePath() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string filePath = 11;</code>
     */
    public java.lang.String getFilePath() {
      java.lang.Object ref = filePath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          filePath_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string filePath = 11;</code>
     */
    public com.google.protobuf.ByteString
        getFilePathBytes() {
      java.lang.Object ref = filePath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filePath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILEOFFSET_FIELD_NUMBER = 12;
    private long fileOffset_;
    /**
     * <code>optional int64 fileOffset = 12;</code>
     */
    public boolean hasFileOffset() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int64 fileOffset = 12;</code>
     */
    public long getFileOffset() {
      return fileOffset_;
    }

    public static final int CHUNKSIZE_FIELD_NUMBER = 13;
    private int chunkSize_;
    /**
     * <code>optional int32 chunkSize = 13;</code>
     */
    public boolean hasChunkSize() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 chunkSize = 13;</code>
     */
    public int getChunkSize() {
      return chunkSize_;
    }

    public static final int NEGATIVEHINTS_FIELD_NUMBER = 14;
    private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation> negativeHints_;
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
     *
     * <pre>
     *negative hints for CM to create chunks
     * </pre>
     */
    public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation> getNegativeHintsList() {
      return negativeHints_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
     *
     * <pre>
     *negative hints for CM to create chunks
     * </pre>
     */
    public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder> 
        getNegativeHintsOrBuilderList() {
      return negativeHints_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
     *
     * <pre>
     *negative hints for CM to create chunks
     * </pre>
     */
    public int getNegativeHintsCount() {
      return negativeHints_.size();
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
     *
     * <pre>
     *negative hints for CM to create chunks
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation getNegativeHints(int index) {
      return negativeHints_.get(index);
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
     *
     * <pre>
     *negative hints for CM to create chunks
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder getNegativeHintsOrBuilder(
        int index) {
      return negativeHints_.get(index);
    }

    public static final int REPOCHUNKTYPE_FIELD_NUMBER = 15;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RepoChunkType repoChunkType_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RepoChunkType repoChunkType = 15;</code>
     */
    public boolean hasRepoChunkType() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RepoChunkType repoChunkType = 15;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RepoChunkType getRepoChunkType() {
      return repoChunkType_;
    }

    public static final int SKIPCHUNKSEQUENCENUMBER_FIELD_NUMBER = 16;
    private boolean skipChunkSequenceNumber_;
    /**
     * <code>optional bool skipChunkSequenceNumber = 16;</code>
     */
    public boolean hasSkipChunkSequenceNumber() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional bool skipChunkSequenceNumber = 16;</code>
     */
    public boolean getSkipChunkSequenceNumber() {
      return skipChunkSequenceNumber_;
    }

    public static final int CUSTOMSTATE_FIELD_NUMBER = 17;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCustomState customState_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCustomState customState = 17;</code>
     */
    public boolean hasCustomState() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCustomState customState = 17;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCustomState getCustomState() {
      return customState_;
    }

    public static final int DTTYPES_FIELD_NUMBER = 18;
    private com.google.protobuf.LazyStringList dtTypes_;
    /**
     * <code>repeated string dtTypes = 18;</code>
     *
     * <pre>
     *DT types stored in this chunk (for btree only)
     * </pre>
     */
    public com.google.protobuf.ProtocolStringList
        getDtTypesList() {
      return dtTypes_;
    }
    /**
     * <code>repeated string dtTypes = 18;</code>
     *
     * <pre>
     *DT types stored in this chunk (for btree only)
     * </pre>
     */
    public int getDtTypesCount() {
      return dtTypes_.size();
    }
    /**
     * <code>repeated string dtTypes = 18;</code>
     *
     * <pre>
     *DT types stored in this chunk (for btree only)
     * </pre>
     */
    public java.lang.String getDtTypes(int index) {
      return dtTypes_.get(index);
    }
    /**
     * <code>repeated string dtTypes = 18;</code>
     *
     * <pre>
     *DT types stored in this chunk (for btree only)
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDtTypesBytes(int index) {
      return dtTypes_.getByteString(index);
    }

    public static final int ALIGNMENTSIZE_FIELD_NUMBER = 19;
    private int alignmentSize_;
    /**
     * <code>optional int32 alignmentSize = 19;</code>
     */
    public boolean hasAlignmentSize() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 alignmentSize = 19;</code>
     */
    public int getAlignmentSize() {
      return alignmentSize_;
    }

    public static final int BTREECHUNKDATATYPE_FIELD_NUMBER = 20;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BTreeChunkDataType bTreeChunkDataType_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BTreeChunkDataType bTreeChunkDataType = 20 [default = GENERAL];</code>
     */
    public boolean hasBTreeChunkDataType() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BTreeChunkDataType bTreeChunkDataType = 20 [default = GENERAL];</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BTreeChunkDataType getBTreeChunkDataType() {
      return bTreeChunkDataType_;
    }

    public static final int ISPAGETABLE_FIELD_NUMBER = 21;
    private boolean isPageTable_;
    /**
     * <code>optional bool isPageTable = 21;</code>
     */
    public boolean hasIsPageTable() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional bool isPageTable = 21;</code>
     */
    public boolean getIsPageTable() {
      return isPageTable_;
    }

    public static final int MAXWRITEBLOCKSIZE_FIELD_NUMBER = 22;
    private int maxWriteBlockSize_;
    /**
     * <code>optional int32 maxWriteBlockSize = 22;</code>
     */
    public boolean hasMaxWriteBlockSize() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 maxWriteBlockSize = 22;</code>
     */
    public int getMaxWriteBlockSize() {
      return maxWriteBlockSize_;
    }

    public static final int STORAGEPOLICY_FIELD_NUMBER = 23;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy storagePolicy_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 23;</code>
     */
    public boolean hasStoragePolicy() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 23;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy getStoragePolicy() {
      return storagePolicy_;
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 23;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicyOrBuilder getStoragePolicyOrBuilder() {
      return storagePolicy_;
    }

    public static final int SOURCE_FIELD_NUMBER = 24;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Source source_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Source source = 24;</code>
     */
    public boolean hasSource() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Source source = 24;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Source getSource() {
      return source_;
    }

    public static final int INDEXGRANULARITY_FIELD_NUMBER = 25;
    private int indexGranularity_;
    /**
     * <code>optional int32 indexGranularity = 25;</code>
     *
     * <pre>
     * for chunk server
     * </pre>
     */
    public boolean hasIndexGranularity() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional int32 indexGranularity = 25;</code>
     *
     * <pre>
     * for chunk server
     * </pre>
     */
    public int getIndexGranularity() {
      return indexGranularity_;
    }

    public static final int CUSTOMCHUNKSIZE_FIELD_NUMBER = 26;
    private int customChunkSize_;
    /**
     * <code>optional int32 customChunkSize = 26;</code>
     */
    public boolean hasCustomChunkSize() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int32 customChunkSize = 26;</code>
     */
    public int getCustomChunkSize() {
      return customChunkSize_;
    }

    public static final int ECCODESCHEME_FIELD_NUMBER = 27;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme ecCodeScheme_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 27;</code>
     */
    public boolean hasEcCodeScheme() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 27;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme getEcCodeScheme() {
      return ecCodeScheme_;
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 27;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeSchemeOrBuilder getEcCodeSchemeOrBuilder() {
      return ecCodeScheme_;
    }

    public static final int SKIPREPOGC_FIELD_NUMBER = 28;
    private boolean skipRepoGC_;
    /**
     * <code>optional bool skipRepoGC = 28;</code>
     */
    public boolean hasSkipRepoGC() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional bool skipRepoGC = 28;</code>
     */
    public boolean getSkipRepoGC() {
      return skipRepoGC_;
    }

    public static final int ORIGINALKEY_FIELD_NUMBER = 29;
    private java.lang.Object originalKey_;
    /**
     * <code>optional string originalKey = 29;</code>
     */
    public boolean hasOriginalKey() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional string originalKey = 29;</code>
     */
    public java.lang.String getOriginalKey() {
      java.lang.Object ref = originalKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          originalKey_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string originalKey = 29;</code>
     */
    public com.google.protobuf.ByteString
        getOriginalKeyBytes() {
      java.lang.Object ref = originalKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        originalKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TAG_FIELD_NUMBER = 30;
    private long tag_;
    /**
     * <code>optional int64 tag = 30;</code>
     */
    public boolean hasTag() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional int64 tag = 30;</code>
     */
    public long getTag() {
      return tag_;
    }

    private void initFields() {
      chunkId_ = "";
      dataType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType.REPO;
      type_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType.LOCAL;
      writerNodeId_ = "";
      primary_ = "";
      writerId_ = "";
      hints_ = java.util.Collections.emptyList();
      unlimitedSize_ = false;
      repGroup_ = "";
      fsDeviceId_ = "";
      filePath_ = "";
      fileOffset_ = 0L;
      chunkSize_ = 0;
      negativeHints_ = java.util.Collections.emptyList();
      repoChunkType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RepoChunkType.TYPE_I;
      skipChunkSequenceNumber_ = false;
      customState_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCustomState.PARTIALGC_COPYFROM;
      dtTypes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      alignmentSize_ = 0;
      bTreeChunkDataType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BTreeChunkDataType.GENERAL;
      isPageTable_ = false;
      maxWriteBlockSize_ = 0;
      storagePolicy_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.getDefaultInstance();
      source_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Source.USER_INJECTED;
      indexGranularity_ = 0;
      customChunkSize_ = 0;
      ecCodeScheme_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.getDefaultInstance();
      skipRepoGC_ = false;
      originalKey_ = "";
      tag_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasChunkId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDataType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getHintsCount(); i++) {
        if (!getHints(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getNegativeHintsCount(); i++) {
        if (!getNegativeHints(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasStoragePolicy()) {
        if (!getStoragePolicy().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasEcCodeScheme()) {
        if (!getEcCodeScheme().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessage
        .ExtendableMessage<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getChunkIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, dataType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, type_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getWriterNodeIdBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getPrimaryBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getWriterIdBytes());
      }
      for (int i = 0; i < hints_.size(); i++) {
        output.writeMessage(7, hints_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(8, unlimitedSize_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(9, getRepGroupBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(10, getFsDeviceIdBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(11, getFilePathBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt64(12, fileOffset_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(13, chunkSize_);
      }
      for (int i = 0; i < negativeHints_.size(); i++) {
        output.writeMessage(14, negativeHints_.get(i));
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeEnum(15, repoChunkType_.getNumber());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBool(16, skipChunkSequenceNumber_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeEnum(17, customState_.getNumber());
      }
      for (int i = 0; i < dtTypes_.size(); i++) {
        output.writeBytes(18, dtTypes_.getByteString(i));
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(19, alignmentSize_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeEnum(20, bTreeChunkDataType_.getNumber());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeBool(21, isPageTable_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(22, maxWriteBlockSize_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeMessage(23, storagePolicy_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeEnum(24, source_.getNumber());
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(25, indexGranularity_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(26, customChunkSize_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeMessage(27, ecCodeScheme_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeBool(28, skipRepoGC_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeBytes(29, getOriginalKeyBytes());
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeInt64(30, tag_);
      }
      extensionWriter.writeUntil(536870912, output);
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getChunkIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, dataType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, type_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getWriterNodeIdBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getPrimaryBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getWriterIdBytes());
      }
      for (int i = 0; i < hints_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, hints_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, unlimitedSize_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getRepGroupBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getFsDeviceIdBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getFilePathBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(12, fileOffset_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, chunkSize_);
      }
      for (int i = 0; i < negativeHints_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, negativeHints_.get(i));
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(15, repoChunkType_.getNumber());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, skipChunkSequenceNumber_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(17, customState_.getNumber());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dtTypes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(dtTypes_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getDtTypesList().size();
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, alignmentSize_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(20, bTreeChunkDataType_.getNumber());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(21, isPageTable_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, maxWriteBlockSize_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, storagePolicy_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(24, source_.getNumber());
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, indexGranularity_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(26, customChunkSize_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(27, ecCodeScheme_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(28, skipRepoGC_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(29, getOriginalKeyBytes());
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(30, tag_);
      }
      size += extensionsSerializedSize();
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCreateRequest}
     *
     * <pre>
     * create LOCAL or COPY chunk
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.ExtendableBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCreateRequest)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkCreateRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkCreateRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHintsFieldBuilder();
          getNegativeHintsFieldBuilder();
          getStoragePolicyFieldBuilder();
          getEcCodeSchemeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        chunkId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        dataType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType.REPO;
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType.LOCAL;
        bitField0_ = (bitField0_ & ~0x00000004);
        writerNodeId_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        primary_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        writerId_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        if (hintsBuilder_ == null) {
          hints_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          hintsBuilder_.clear();
        }
        unlimitedSize_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        repGroup_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        fsDeviceId_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        filePath_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        fileOffset_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000800);
        chunkSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        if (negativeHintsBuilder_ == null) {
          negativeHints_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          negativeHintsBuilder_.clear();
        }
        repoChunkType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RepoChunkType.TYPE_I;
        bitField0_ = (bitField0_ & ~0x00004000);
        skipChunkSequenceNumber_ = false;
        bitField0_ = (bitField0_ & ~0x00008000);
        customState_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCustomState.PARTIALGC_COPYFROM;
        bitField0_ = (bitField0_ & ~0x00010000);
        dtTypes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00020000);
        alignmentSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        bTreeChunkDataType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BTreeChunkDataType.GENERAL;
        bitField0_ = (bitField0_ & ~0x00080000);
        isPageTable_ = false;
        bitField0_ = (bitField0_ & ~0x00100000);
        maxWriteBlockSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        if (storagePolicyBuilder_ == null) {
          storagePolicy_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.getDefaultInstance();
        } else {
          storagePolicyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00400000);
        source_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Source.USER_INJECTED;
        bitField0_ = (bitField0_ & ~0x00800000);
        indexGranularity_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        customChunkSize_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        if (ecCodeSchemeBuilder_ == null) {
          ecCodeScheme_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.getDefaultInstance();
        } else {
          ecCodeSchemeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x04000000);
        skipRepoGC_ = false;
        bitField0_ = (bitField0_ & ~0x08000000);
        originalKey_ = "";
        bitField0_ = (bitField0_ & ~0x10000000);
        tag_ = 0L;
        bitField0_ = (bitField0_ & ~0x20000000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkCreateRequest_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.chunkId_ = chunkId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dataType_ = dataType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.writerNodeId_ = writerNodeId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.primary_ = primary_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.writerId_ = writerId_;
        if (hintsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            hints_ = java.util.Collections.unmodifiableList(hints_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.hints_ = hints_;
        } else {
          result.hints_ = hintsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.unlimitedSize_ = unlimitedSize_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.repGroup_ = repGroup_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.fsDeviceId_ = fsDeviceId_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.filePath_ = filePath_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.fileOffset_ = fileOffset_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.chunkSize_ = chunkSize_;
        if (negativeHintsBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000)) {
            negativeHints_ = java.util.Collections.unmodifiableList(negativeHints_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.negativeHints_ = negativeHints_;
        } else {
          result.negativeHints_ = negativeHintsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.repoChunkType_ = repoChunkType_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.skipChunkSequenceNumber_ = skipChunkSequenceNumber_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.customState_ = customState_;
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          dtTypes_ = dtTypes_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00020000);
        }
        result.dtTypes_ = dtTypes_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.alignmentSize_ = alignmentSize_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.bTreeChunkDataType_ = bTreeChunkDataType_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.isPageTable_ = isPageTable_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.maxWriteBlockSize_ = maxWriteBlockSize_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00080000;
        }
        if (storagePolicyBuilder_ == null) {
          result.storagePolicy_ = storagePolicy_;
        } else {
          result.storagePolicy_ = storagePolicyBuilder_.build();
        }
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.source_ = source_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.indexGranularity_ = indexGranularity_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.customChunkSize_ = customChunkSize_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x00800000;
        }
        if (ecCodeSchemeBuilder_ == null) {
          result.ecCodeScheme_ = ecCodeScheme_;
        } else {
          result.ecCodeScheme_ = ecCodeSchemeBuilder_.build();
        }
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.skipRepoGC_ = skipRepoGC_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.originalKey_ = originalKey_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.tag_ = tag_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest.getDefaultInstance()) return this;
        if (other.hasChunkId()) {
          bitField0_ |= 0x00000001;
          chunkId_ = other.chunkId_;
          onChanged();
        }
        if (other.hasDataType()) {
          setDataType(other.getDataType());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasWriterNodeId()) {
          bitField0_ |= 0x00000008;
          writerNodeId_ = other.writerNodeId_;
          onChanged();
        }
        if (other.hasPrimary()) {
          bitField0_ |= 0x00000010;
          primary_ = other.primary_;
          onChanged();
        }
        if (other.hasWriterId()) {
          bitField0_ |= 0x00000020;
          writerId_ = other.writerId_;
          onChanged();
        }
        if (hintsBuilder_ == null) {
          if (!other.hints_.isEmpty()) {
            if (hints_.isEmpty()) {
              hints_ = other.hints_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureHintsIsMutable();
              hints_.addAll(other.hints_);
            }
            onChanged();
          }
        } else {
          if (!other.hints_.isEmpty()) {
            if (hintsBuilder_.isEmpty()) {
              hintsBuilder_.dispose();
              hintsBuilder_ = null;
              hints_ = other.hints_;
              bitField0_ = (bitField0_ & ~0x00000040);
              hintsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHintsFieldBuilder() : null;
            } else {
              hintsBuilder_.addAllMessages(other.hints_);
            }
          }
        }
        if (other.hasUnlimitedSize()) {
          setUnlimitedSize(other.getUnlimitedSize());
        }
        if (other.hasRepGroup()) {
          bitField0_ |= 0x00000100;
          repGroup_ = other.repGroup_;
          onChanged();
        }
        if (other.hasFsDeviceId()) {
          bitField0_ |= 0x00000200;
          fsDeviceId_ = other.fsDeviceId_;
          onChanged();
        }
        if (other.hasFilePath()) {
          bitField0_ |= 0x00000400;
          filePath_ = other.filePath_;
          onChanged();
        }
        if (other.hasFileOffset()) {
          setFileOffset(other.getFileOffset());
        }
        if (other.hasChunkSize()) {
          setChunkSize(other.getChunkSize());
        }
        if (negativeHintsBuilder_ == null) {
          if (!other.negativeHints_.isEmpty()) {
            if (negativeHints_.isEmpty()) {
              negativeHints_ = other.negativeHints_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureNegativeHintsIsMutable();
              negativeHints_.addAll(other.negativeHints_);
            }
            onChanged();
          }
        } else {
          if (!other.negativeHints_.isEmpty()) {
            if (negativeHintsBuilder_.isEmpty()) {
              negativeHintsBuilder_.dispose();
              negativeHintsBuilder_ = null;
              negativeHints_ = other.negativeHints_;
              bitField0_ = (bitField0_ & ~0x00002000);
              negativeHintsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getNegativeHintsFieldBuilder() : null;
            } else {
              negativeHintsBuilder_.addAllMessages(other.negativeHints_);
            }
          }
        }
        if (other.hasRepoChunkType()) {
          setRepoChunkType(other.getRepoChunkType());
        }
        if (other.hasSkipChunkSequenceNumber()) {
          setSkipChunkSequenceNumber(other.getSkipChunkSequenceNumber());
        }
        if (other.hasCustomState()) {
          setCustomState(other.getCustomState());
        }
        if (!other.dtTypes_.isEmpty()) {
          if (dtTypes_.isEmpty()) {
            dtTypes_ = other.dtTypes_;
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            ensureDtTypesIsMutable();
            dtTypes_.addAll(other.dtTypes_);
          }
          onChanged();
        }
        if (other.hasAlignmentSize()) {
          setAlignmentSize(other.getAlignmentSize());
        }
        if (other.hasBTreeChunkDataType()) {
          setBTreeChunkDataType(other.getBTreeChunkDataType());
        }
        if (other.hasIsPageTable()) {
          setIsPageTable(other.getIsPageTable());
        }
        if (other.hasMaxWriteBlockSize()) {
          setMaxWriteBlockSize(other.getMaxWriteBlockSize());
        }
        if (other.hasStoragePolicy()) {
          mergeStoragePolicy(other.getStoragePolicy());
        }
        if (other.hasSource()) {
          setSource(other.getSource());
        }
        if (other.hasIndexGranularity()) {
          setIndexGranularity(other.getIndexGranularity());
        }
        if (other.hasCustomChunkSize()) {
          setCustomChunkSize(other.getCustomChunkSize());
        }
        if (other.hasEcCodeScheme()) {
          mergeEcCodeScheme(other.getEcCodeScheme());
        }
        if (other.hasSkipRepoGC()) {
          setSkipRepoGC(other.getSkipRepoGC());
        }
        if (other.hasOriginalKey()) {
          bitField0_ |= 0x10000000;
          originalKey_ = other.originalKey_;
          onChanged();
        }
        if (other.hasTag()) {
          setTag(other.getTag());
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasChunkId()) {
          
          return false;
        }
        if (!hasDataType()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        for (int i = 0; i < getHintsCount(); i++) {
          if (!getHints(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getNegativeHintsCount(); i++) {
          if (!getNegativeHints(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasStoragePolicy()) {
          if (!getStoragePolicy().isInitialized()) {
            
            return false;
          }
        }
        if (hasEcCodeScheme()) {
          if (!getEcCodeScheme().isInitialized()) {
            
            return false;
          }
        }
        if (!extensionsAreInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object chunkId_ = "";
      /**
       * <code>required string chunkId = 1;</code>
       */
      public boolean hasChunkId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public java.lang.String getChunkId() {
        java.lang.Object ref = chunkId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            chunkId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getChunkIdBytes() {
        java.lang.Object ref = chunkId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          chunkId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder setChunkId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        chunkId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder clearChunkId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        chunkId_ = getDefaultInstance().getChunkId();
        onChanged();
        return this;
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder setChunkIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        chunkId_ = value;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType dataType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType.REPO;
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDataType dataType = 2;</code>
       */
      public boolean hasDataType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDataType dataType = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType getDataType() {
        return dataType_;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDataType dataType = 2;</code>
       */
      public Builder setDataType(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        dataType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDataType dataType = 2;</code>
       */
      public Builder clearDataType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dataType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType.REPO;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType type_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType.LOCAL;
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkType type = 3;</code>
       *
       * <pre>
       * could be LOCAL, REMOTE or COPY
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkType type = 3;</code>
       *
       * <pre>
       * could be LOCAL, REMOTE or COPY
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType getType() {
        return type_;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkType type = 3;</code>
       *
       * <pre>
       * could be LOCAL, REMOTE or COPY
       * </pre>
       */
      public Builder setType(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkType type = 3;</code>
       *
       * <pre>
       * could be LOCAL, REMOTE or COPY
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkType.LOCAL;
        onChanged();
        return this;
      }

      private java.lang.Object writerNodeId_ = "";
      /**
       * <code>optional string writerNodeId = 4;</code>
       *
       * <pre>
       * node id of the writer, CM will pick up one SS on the same node for the writer
       * not required for REMOTE chunk
       * </pre>
       */
      public boolean hasWriterNodeId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string writerNodeId = 4;</code>
       *
       * <pre>
       * node id of the writer, CM will pick up one SS on the same node for the writer
       * not required for REMOTE chunk
       * </pre>
       */
      public java.lang.String getWriterNodeId() {
        java.lang.Object ref = writerNodeId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            writerNodeId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string writerNodeId = 4;</code>
       *
       * <pre>
       * node id of the writer, CM will pick up one SS on the same node for the writer
       * not required for REMOTE chunk
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWriterNodeIdBytes() {
        java.lang.Object ref = writerNodeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          writerNodeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string writerNodeId = 4;</code>
       *
       * <pre>
       * node id of the writer, CM will pick up one SS on the same node for the writer
       * not required for REMOTE chunk
       * </pre>
       */
      public Builder setWriterNodeId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        writerNodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string writerNodeId = 4;</code>
       *
       * <pre>
       * node id of the writer, CM will pick up one SS on the same node for the writer
       * not required for REMOTE chunk
       * </pre>
       */
      public Builder clearWriterNodeId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        writerNodeId_ = getDefaultInstance().getWriterNodeId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string writerNodeId = 4;</code>
       *
       * <pre>
       * node id of the writer, CM will pick up one SS on the same node for the writer
       * not required for REMOTE chunk
       * </pre>
       */
      public Builder setWriterNodeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        writerNodeId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object primary_ = "";
      /**
       * <code>optional string primary = 5;</code>
       *
       * <pre>
       * zone of primary, present if type is COPY
       * </pre>
       */
      public boolean hasPrimary() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string primary = 5;</code>
       *
       * <pre>
       * zone of primary, present if type is COPY
       * </pre>
       */
      public java.lang.String getPrimary() {
        java.lang.Object ref = primary_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            primary_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string primary = 5;</code>
       *
       * <pre>
       * zone of primary, present if type is COPY
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPrimaryBytes() {
        java.lang.Object ref = primary_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          primary_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string primary = 5;</code>
       *
       * <pre>
       * zone of primary, present if type is COPY
       * </pre>
       */
      public Builder setPrimary(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        primary_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string primary = 5;</code>
       *
       * <pre>
       * zone of primary, present if type is COPY
       * </pre>
       */
      public Builder clearPrimary() {
        bitField0_ = (bitField0_ & ~0x00000010);
        primary_ = getDefaultInstance().getPrimary();
        onChanged();
        return this;
      }
      /**
       * <code>optional string primary = 5;</code>
       *
       * <pre>
       * zone of primary, present if type is COPY
       * </pre>
       */
      public Builder setPrimaryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        primary_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object writerId_ = "";
      /**
       * <code>optional string writerId = 6;</code>
       *
       * <pre>
       * writer id, as there could be multiple writers on the same node
       * </pre>
       */
      public boolean hasWriterId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string writerId = 6;</code>
       *
       * <pre>
       * writer id, as there could be multiple writers on the same node
       * </pre>
       */
      public java.lang.String getWriterId() {
        java.lang.Object ref = writerId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            writerId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string writerId = 6;</code>
       *
       * <pre>
       * writer id, as there could be multiple writers on the same node
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWriterIdBytes() {
        java.lang.Object ref = writerId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          writerId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string writerId = 6;</code>
       *
       * <pre>
       * writer id, as there could be multiple writers on the same node
       * </pre>
       */
      public Builder setWriterId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        writerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string writerId = 6;</code>
       *
       * <pre>
       * writer id, as there could be multiple writers on the same node
       * </pre>
       */
      public Builder clearWriterId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        writerId_ = getDefaultInstance().getWriterId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string writerId = 6;</code>
       *
       * <pre>
       * writer id, as there could be multiple writers on the same node
       * </pre>
       */
      public Builder setWriterIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        writerId_ = value;
        onChanged();
        return this;
      }

      private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation> hints_ =
        java.util.Collections.emptyList();
      private void ensureHintsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          hints_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation>(hints_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder> hintsBuilder_;

      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
       *
       * <pre>
       * simply use SSLocation though it has some redundant fields
       * </pre>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation> getHintsList() {
        if (hintsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(hints_);
        } else {
          return hintsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
       *
       * <pre>
       * simply use SSLocation though it has some redundant fields
       * </pre>
       */
      public int getHintsCount() {
        if (hintsBuilder_ == null) {
          return hints_.size();
        } else {
          return hintsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
       *
       * <pre>
       * simply use SSLocation though it has some redundant fields
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation getHints(int index) {
        if (hintsBuilder_ == null) {
          return hints_.get(index);
        } else {
          return hintsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
       *
       * <pre>
       * simply use SSLocation though it has some redundant fields
       * </pre>
       */
      public Builder setHints(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation value) {
        if (hintsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHintsIsMutable();
          hints_.set(index, value);
          onChanged();
        } else {
          hintsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
       *
       * <pre>
       * simply use SSLocation though it has some redundant fields
       * </pre>
       */
      public Builder setHints(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder builderForValue) {
        if (hintsBuilder_ == null) {
          ensureHintsIsMutable();
          hints_.set(index, builderForValue.build());
          onChanged();
        } else {
          hintsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
       *
       * <pre>
       * simply use SSLocation though it has some redundant fields
       * </pre>
       */
      public Builder addHints(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation value) {
        if (hintsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHintsIsMutable();
          hints_.add(value);
          onChanged();
        } else {
          hintsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
       *
       * <pre>
       * simply use SSLocation though it has some redundant fields
       * </pre>
       */
      public Builder addHints(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation value) {
        if (hintsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHintsIsMutable();
          hints_.add(index, value);
          onChanged();
        } else {
          hintsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
       *
       * <pre>
       * simply use SSLocation though it has some redundant fields
       * </pre>
       */
      public Builder addHints(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder builderForValue) {
        if (hintsBuilder_ == null) {
          ensureHintsIsMutable();
          hints_.add(builderForValue.build());
          onChanged();
        } else {
          hintsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
       *
       * <pre>
       * simply use SSLocation though it has some redundant fields
       * </pre>
       */
      public Builder addHints(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder builderForValue) {
        if (hintsBuilder_ == null) {
          ensureHintsIsMutable();
          hints_.add(index, builderForValue.build());
          onChanged();
        } else {
          hintsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
       *
       * <pre>
       * simply use SSLocation though it has some redundant fields
       * </pre>
       */
      public Builder addAllHints(
          java.lang.Iterable<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation> values) {
        if (hintsBuilder_ == null) {
          ensureHintsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, hints_);
          onChanged();
        } else {
          hintsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
       *
       * <pre>
       * simply use SSLocation though it has some redundant fields
       * </pre>
       */
      public Builder clearHints() {
        if (hintsBuilder_ == null) {
          hints_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          hintsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
       *
       * <pre>
       * simply use SSLocation though it has some redundant fields
       * </pre>
       */
      public Builder removeHints(int index) {
        if (hintsBuilder_ == null) {
          ensureHintsIsMutable();
          hints_.remove(index);
          onChanged();
        } else {
          hintsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
       *
       * <pre>
       * simply use SSLocation though it has some redundant fields
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder getHintsBuilder(
          int index) {
        return getHintsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
       *
       * <pre>
       * simply use SSLocation though it has some redundant fields
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder getHintsOrBuilder(
          int index) {
        if (hintsBuilder_ == null) {
          return hints_.get(index);  } else {
          return hintsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
       *
       * <pre>
       * simply use SSLocation though it has some redundant fields
       * </pre>
       */
      public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder> 
           getHintsOrBuilderList() {
        if (hintsBuilder_ != null) {
          return hintsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(hints_);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
       *
       * <pre>
       * simply use SSLocation though it has some redundant fields
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder addHintsBuilder() {
        return getHintsFieldBuilder().addBuilder(
            io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
       *
       * <pre>
       * simply use SSLocation though it has some redundant fields
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder addHintsBuilder(
          int index) {
        return getHintsFieldBuilder().addBuilder(
            index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation hints = 7;</code>
       *
       * <pre>
       * simply use SSLocation though it has some redundant fields
       * </pre>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder> 
           getHintsBuilderList() {
        return getHintsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder> 
          getHintsFieldBuilder() {
        if (hintsBuilder_ == null) {
          hintsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder>(
                  hints_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          hints_ = null;
        }
        return hintsBuilder_;
      }

      private boolean unlimitedSize_ ;
      /**
       * <code>optional bool unlimitedSize = 8 [default = false];</code>
       *
       * <pre>
       * if the chunk is for file access (thus size is unlimited)
       * </pre>
       */
      public boolean hasUnlimitedSize() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool unlimitedSize = 8 [default = false];</code>
       *
       * <pre>
       * if the chunk is for file access (thus size is unlimited)
       * </pre>
       */
      public boolean getUnlimitedSize() {
        return unlimitedSize_;
      }
      /**
       * <code>optional bool unlimitedSize = 8 [default = false];</code>
       *
       * <pre>
       * if the chunk is for file access (thus size is unlimited)
       * </pre>
       */
      public Builder setUnlimitedSize(boolean value) {
        bitField0_ |= 0x00000080;
        unlimitedSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool unlimitedSize = 8 [default = false];</code>
       *
       * <pre>
       * if the chunk is for file access (thus size is unlimited)
       * </pre>
       */
      public Builder clearUnlimitedSize() {
        bitField0_ = (bitField0_ & ~0x00000080);
        unlimitedSize_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object repGroup_ = "";
      /**
       * <code>optional string repGroup = 9;</code>
       *
       * <pre>
       * replication group
       * </pre>
       */
      public boolean hasRepGroup() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string repGroup = 9;</code>
       *
       * <pre>
       * replication group
       * </pre>
       */
      public java.lang.String getRepGroup() {
        java.lang.Object ref = repGroup_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            repGroup_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string repGroup = 9;</code>
       *
       * <pre>
       * replication group
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRepGroupBytes() {
        java.lang.Object ref = repGroup_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          repGroup_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string repGroup = 9;</code>
       *
       * <pre>
       * replication group
       * </pre>
       */
      public Builder setRepGroup(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        repGroup_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string repGroup = 9;</code>
       *
       * <pre>
       * replication group
       * </pre>
       */
      public Builder clearRepGroup() {
        bitField0_ = (bitField0_ & ~0x00000100);
        repGroup_ = getDefaultInstance().getRepGroup();
        onChanged();
        return this;
      }
      /**
       * <code>optional string repGroup = 9;</code>
       *
       * <pre>
       * replication group
       * </pre>
       */
      public Builder setRepGroupBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        repGroup_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object fsDeviceId_ = "";
      /**
       * <code>optional string fsDeviceId = 10;</code>
       *
       * <pre>
       * file system device Id is used for file access mode where chunk needs to be created on a specific device
       * so this needs to be passed from client to CM to SSM
       * </pre>
       */
      public boolean hasFsDeviceId() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string fsDeviceId = 10;</code>
       *
       * <pre>
       * file system device Id is used for file access mode where chunk needs to be created on a specific device
       * so this needs to be passed from client to CM to SSM
       * </pre>
       */
      public java.lang.String getFsDeviceId() {
        java.lang.Object ref = fsDeviceId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fsDeviceId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string fsDeviceId = 10;</code>
       *
       * <pre>
       * file system device Id is used for file access mode where chunk needs to be created on a specific device
       * so this needs to be passed from client to CM to SSM
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFsDeviceIdBytes() {
        java.lang.Object ref = fsDeviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fsDeviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string fsDeviceId = 10;</code>
       *
       * <pre>
       * file system device Id is used for file access mode where chunk needs to be created on a specific device
       * so this needs to be passed from client to CM to SSM
       * </pre>
       */
      public Builder setFsDeviceId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        fsDeviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string fsDeviceId = 10;</code>
       *
       * <pre>
       * file system device Id is used for file access mode where chunk needs to be created on a specific device
       * so this needs to be passed from client to CM to SSM
       * </pre>
       */
      public Builder clearFsDeviceId() {
        bitField0_ = (bitField0_ & ~0x00000200);
        fsDeviceId_ = getDefaultInstance().getFsDeviceId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string fsDeviceId = 10;</code>
       *
       * <pre>
       * file system device Id is used for file access mode where chunk needs to be created on a specific device
       * so this needs to be passed from client to CM to SSM
       * </pre>
       */
      public Builder setFsDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        fsDeviceId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object filePath_ = "";
      /**
       * <code>optional string filePath = 11;</code>
       */
      public boolean hasFilePath() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string filePath = 11;</code>
       */
      public java.lang.String getFilePath() {
        java.lang.Object ref = filePath_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            filePath_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string filePath = 11;</code>
       */
      public com.google.protobuf.ByteString
          getFilePathBytes() {
        java.lang.Object ref = filePath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filePath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string filePath = 11;</code>
       */
      public Builder setFilePath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        filePath_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string filePath = 11;</code>
       */
      public Builder clearFilePath() {
        bitField0_ = (bitField0_ & ~0x00000400);
        filePath_ = getDefaultInstance().getFilePath();
        onChanged();
        return this;
      }
      /**
       * <code>optional string filePath = 11;</code>
       */
      public Builder setFilePathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        filePath_ = value;
        onChanged();
        return this;
      }

      private long fileOffset_ ;
      /**
       * <code>optional int64 fileOffset = 12;</code>
       */
      public boolean hasFileOffset() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int64 fileOffset = 12;</code>
       */
      public long getFileOffset() {
        return fileOffset_;
      }
      /**
       * <code>optional int64 fileOffset = 12;</code>
       */
      public Builder setFileOffset(long value) {
        bitField0_ |= 0x00000800;
        fileOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 fileOffset = 12;</code>
       */
      public Builder clearFileOffset() {
        bitField0_ = (bitField0_ & ~0x00000800);
        fileOffset_ = 0L;
        onChanged();
        return this;
      }

      private int chunkSize_ ;
      /**
       * <code>optional int32 chunkSize = 13;</code>
       */
      public boolean hasChunkSize() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 chunkSize = 13;</code>
       */
      public int getChunkSize() {
        return chunkSize_;
      }
      /**
       * <code>optional int32 chunkSize = 13;</code>
       */
      public Builder setChunkSize(int value) {
        bitField0_ |= 0x00001000;
        chunkSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 chunkSize = 13;</code>
       */
      public Builder clearChunkSize() {
        bitField0_ = (bitField0_ & ~0x00001000);
        chunkSize_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation> negativeHints_ =
        java.util.Collections.emptyList();
      private void ensureNegativeHintsIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          negativeHints_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation>(negativeHints_);
          bitField0_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder> negativeHintsBuilder_;

      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
       *
       * <pre>
       *negative hints for CM to create chunks
       * </pre>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation> getNegativeHintsList() {
        if (negativeHintsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(negativeHints_);
        } else {
          return negativeHintsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
       *
       * <pre>
       *negative hints for CM to create chunks
       * </pre>
       */
      public int getNegativeHintsCount() {
        if (negativeHintsBuilder_ == null) {
          return negativeHints_.size();
        } else {
          return negativeHintsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
       *
       * <pre>
       *negative hints for CM to create chunks
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation getNegativeHints(int index) {
        if (negativeHintsBuilder_ == null) {
          return negativeHints_.get(index);
        } else {
          return negativeHintsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
       *
       * <pre>
       *negative hints for CM to create chunks
       * </pre>
       */
      public Builder setNegativeHints(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation value) {
        if (negativeHintsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNegativeHintsIsMutable();
          negativeHints_.set(index, value);
          onChanged();
        } else {
          negativeHintsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
       *
       * <pre>
       *negative hints for CM to create chunks
       * </pre>
       */
      public Builder setNegativeHints(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder builderForValue) {
        if (negativeHintsBuilder_ == null) {
          ensureNegativeHintsIsMutable();
          negativeHints_.set(index, builderForValue.build());
          onChanged();
        } else {
          negativeHintsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
       *
       * <pre>
       *negative hints for CM to create chunks
       * </pre>
       */
      public Builder addNegativeHints(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation value) {
        if (negativeHintsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNegativeHintsIsMutable();
          negativeHints_.add(value);
          onChanged();
        } else {
          negativeHintsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
       *
       * <pre>
       *negative hints for CM to create chunks
       * </pre>
       */
      public Builder addNegativeHints(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation value) {
        if (negativeHintsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNegativeHintsIsMutable();
          negativeHints_.add(index, value);
          onChanged();
        } else {
          negativeHintsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
       *
       * <pre>
       *negative hints for CM to create chunks
       * </pre>
       */
      public Builder addNegativeHints(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder builderForValue) {
        if (negativeHintsBuilder_ == null) {
          ensureNegativeHintsIsMutable();
          negativeHints_.add(builderForValue.build());
          onChanged();
        } else {
          negativeHintsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
       *
       * <pre>
       *negative hints for CM to create chunks
       * </pre>
       */
      public Builder addNegativeHints(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder builderForValue) {
        if (negativeHintsBuilder_ == null) {
          ensureNegativeHintsIsMutable();
          negativeHints_.add(index, builderForValue.build());
          onChanged();
        } else {
          negativeHintsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
       *
       * <pre>
       *negative hints for CM to create chunks
       * </pre>
       */
      public Builder addAllNegativeHints(
          java.lang.Iterable<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation> values) {
        if (negativeHintsBuilder_ == null) {
          ensureNegativeHintsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, negativeHints_);
          onChanged();
        } else {
          negativeHintsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
       *
       * <pre>
       *negative hints for CM to create chunks
       * </pre>
       */
      public Builder clearNegativeHints() {
        if (negativeHintsBuilder_ == null) {
          negativeHints_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
        } else {
          negativeHintsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
       *
       * <pre>
       *negative hints for CM to create chunks
       * </pre>
       */
      public Builder removeNegativeHints(int index) {
        if (negativeHintsBuilder_ == null) {
          ensureNegativeHintsIsMutable();
          negativeHints_.remove(index);
          onChanged();
        } else {
          negativeHintsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
       *
       * <pre>
       *negative hints for CM to create chunks
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder getNegativeHintsBuilder(
          int index) {
        return getNegativeHintsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
       *
       * <pre>
       *negative hints for CM to create chunks
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder getNegativeHintsOrBuilder(
          int index) {
        if (negativeHintsBuilder_ == null) {
          return negativeHints_.get(index);  } else {
          return negativeHintsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
       *
       * <pre>
       *negative hints for CM to create chunks
       * </pre>
       */
      public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder> 
           getNegativeHintsOrBuilderList() {
        if (negativeHintsBuilder_ != null) {
          return negativeHintsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(negativeHints_);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
       *
       * <pre>
       *negative hints for CM to create chunks
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder addNegativeHintsBuilder() {
        return getNegativeHintsFieldBuilder().addBuilder(
            io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
       *
       * <pre>
       *negative hints for CM to create chunks
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder addNegativeHintsBuilder(
          int index) {
        return getNegativeHintsFieldBuilder().addBuilder(
            index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SSLocation negativeHints = 14;</code>
       *
       * <pre>
       *negative hints for CM to create chunks
       * </pre>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder> 
           getNegativeHintsBuilderList() {
        return getNegativeHintsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder> 
          getNegativeHintsFieldBuilder() {
        if (negativeHintsBuilder_ == null) {
          negativeHintsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocation.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SSLocationOrBuilder>(
                  negativeHints_,
                  ((bitField0_ & 0x00002000) == 0x00002000),
                  getParentForChildren(),
                  isClean());
          negativeHints_ = null;
        }
        return negativeHintsBuilder_;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RepoChunkType repoChunkType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RepoChunkType.TYPE_I;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RepoChunkType repoChunkType = 15;</code>
       */
      public boolean hasRepoChunkType() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RepoChunkType repoChunkType = 15;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RepoChunkType getRepoChunkType() {
        return repoChunkType_;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RepoChunkType repoChunkType = 15;</code>
       */
      public Builder setRepoChunkType(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RepoChunkType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00004000;
        repoChunkType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.RepoChunkType repoChunkType = 15;</code>
       */
      public Builder clearRepoChunkType() {
        bitField0_ = (bitField0_ & ~0x00004000);
        repoChunkType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.RepoChunkType.TYPE_I;
        onChanged();
        return this;
      }

      private boolean skipChunkSequenceNumber_ ;
      /**
       * <code>optional bool skipChunkSequenceNumber = 16;</code>
       */
      public boolean hasSkipChunkSequenceNumber() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional bool skipChunkSequenceNumber = 16;</code>
       */
      public boolean getSkipChunkSequenceNumber() {
        return skipChunkSequenceNumber_;
      }
      /**
       * <code>optional bool skipChunkSequenceNumber = 16;</code>
       */
      public Builder setSkipChunkSequenceNumber(boolean value) {
        bitField0_ |= 0x00008000;
        skipChunkSequenceNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool skipChunkSequenceNumber = 16;</code>
       */
      public Builder clearSkipChunkSequenceNumber() {
        bitField0_ = (bitField0_ & ~0x00008000);
        skipChunkSequenceNumber_ = false;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCustomState customState_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCustomState.PARTIALGC_COPYFROM;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCustomState customState = 17;</code>
       */
      public boolean hasCustomState() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCustomState customState = 17;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCustomState getCustomState() {
        return customState_;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCustomState customState = 17;</code>
       */
      public Builder setCustomState(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCustomState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00010000;
        customState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCustomState customState = 17;</code>
       */
      public Builder clearCustomState() {
        bitField0_ = (bitField0_ & ~0x00010000);
        customState_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCustomState.PARTIALGC_COPYFROM;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList dtTypes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureDtTypesIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          dtTypes_ = new com.google.protobuf.LazyStringArrayList(dtTypes_);
          bitField0_ |= 0x00020000;
         }
      }
      /**
       * <code>repeated string dtTypes = 18;</code>
       *
       * <pre>
       *DT types stored in this chunk (for btree only)
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getDtTypesList() {
        return dtTypes_.getUnmodifiableView();
      }
      /**
       * <code>repeated string dtTypes = 18;</code>
       *
       * <pre>
       *DT types stored in this chunk (for btree only)
       * </pre>
       */
      public int getDtTypesCount() {
        return dtTypes_.size();
      }
      /**
       * <code>repeated string dtTypes = 18;</code>
       *
       * <pre>
       *DT types stored in this chunk (for btree only)
       * </pre>
       */
      public java.lang.String getDtTypes(int index) {
        return dtTypes_.get(index);
      }
      /**
       * <code>repeated string dtTypes = 18;</code>
       *
       * <pre>
       *DT types stored in this chunk (for btree only)
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDtTypesBytes(int index) {
        return dtTypes_.getByteString(index);
      }
      /**
       * <code>repeated string dtTypes = 18;</code>
       *
       * <pre>
       *DT types stored in this chunk (for btree only)
       * </pre>
       */
      public Builder setDtTypes(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDtTypesIsMutable();
        dtTypes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string dtTypes = 18;</code>
       *
       * <pre>
       *DT types stored in this chunk (for btree only)
       * </pre>
       */
      public Builder addDtTypes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDtTypesIsMutable();
        dtTypes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string dtTypes = 18;</code>
       *
       * <pre>
       *DT types stored in this chunk (for btree only)
       * </pre>
       */
      public Builder addAllDtTypes(
          java.lang.Iterable<java.lang.String> values) {
        ensureDtTypesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dtTypes_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string dtTypes = 18;</code>
       *
       * <pre>
       *DT types stored in this chunk (for btree only)
       * </pre>
       */
      public Builder clearDtTypes() {
        dtTypes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string dtTypes = 18;</code>
       *
       * <pre>
       *DT types stored in this chunk (for btree only)
       * </pre>
       */
      public Builder addDtTypesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDtTypesIsMutable();
        dtTypes_.add(value);
        onChanged();
        return this;
      }

      private int alignmentSize_ ;
      /**
       * <code>optional int32 alignmentSize = 19;</code>
       */
      public boolean hasAlignmentSize() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 alignmentSize = 19;</code>
       */
      public int getAlignmentSize() {
        return alignmentSize_;
      }
      /**
       * <code>optional int32 alignmentSize = 19;</code>
       */
      public Builder setAlignmentSize(int value) {
        bitField0_ |= 0x00040000;
        alignmentSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 alignmentSize = 19;</code>
       */
      public Builder clearAlignmentSize() {
        bitField0_ = (bitField0_ & ~0x00040000);
        alignmentSize_ = 0;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BTreeChunkDataType bTreeChunkDataType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BTreeChunkDataType.GENERAL;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BTreeChunkDataType bTreeChunkDataType = 20 [default = GENERAL];</code>
       */
      public boolean hasBTreeChunkDataType() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BTreeChunkDataType bTreeChunkDataType = 20 [default = GENERAL];</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BTreeChunkDataType getBTreeChunkDataType() {
        return bTreeChunkDataType_;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BTreeChunkDataType bTreeChunkDataType = 20 [default = GENERAL];</code>
       */
      public Builder setBTreeChunkDataType(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BTreeChunkDataType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00080000;
        bTreeChunkDataType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.BTreeChunkDataType bTreeChunkDataType = 20 [default = GENERAL];</code>
       */
      public Builder clearBTreeChunkDataType() {
        bitField0_ = (bitField0_ & ~0x00080000);
        bTreeChunkDataType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.BTreeChunkDataType.GENERAL;
        onChanged();
        return this;
      }

      private boolean isPageTable_ ;
      /**
       * <code>optional bool isPageTable = 21;</code>
       */
      public boolean hasIsPageTable() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional bool isPageTable = 21;</code>
       */
      public boolean getIsPageTable() {
        return isPageTable_;
      }
      /**
       * <code>optional bool isPageTable = 21;</code>
       */
      public Builder setIsPageTable(boolean value) {
        bitField0_ |= 0x00100000;
        isPageTable_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isPageTable = 21;</code>
       */
      public Builder clearIsPageTable() {
        bitField0_ = (bitField0_ & ~0x00100000);
        isPageTable_ = false;
        onChanged();
        return this;
      }

      private int maxWriteBlockSize_ ;
      /**
       * <code>optional int32 maxWriteBlockSize = 22;</code>
       */
      public boolean hasMaxWriteBlockSize() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 maxWriteBlockSize = 22;</code>
       */
      public int getMaxWriteBlockSize() {
        return maxWriteBlockSize_;
      }
      /**
       * <code>optional int32 maxWriteBlockSize = 22;</code>
       */
      public Builder setMaxWriteBlockSize(int value) {
        bitField0_ |= 0x00200000;
        maxWriteBlockSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxWriteBlockSize = 22;</code>
       */
      public Builder clearMaxWriteBlockSize() {
        bitField0_ = (bitField0_ & ~0x00200000);
        maxWriteBlockSize_ = 0;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy storagePolicy_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicyOrBuilder> storagePolicyBuilder_;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 23;</code>
       */
      public boolean hasStoragePolicy() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 23;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy getStoragePolicy() {
        if (storagePolicyBuilder_ == null) {
          return storagePolicy_;
        } else {
          return storagePolicyBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 23;</code>
       */
      public Builder setStoragePolicy(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy value) {
        if (storagePolicyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          storagePolicy_ = value;
          onChanged();
        } else {
          storagePolicyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 23;</code>
       */
      public Builder setStoragePolicy(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.Builder builderForValue) {
        if (storagePolicyBuilder_ == null) {
          storagePolicy_ = builderForValue.build();
          onChanged();
        } else {
          storagePolicyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 23;</code>
       */
      public Builder mergeStoragePolicy(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy value) {
        if (storagePolicyBuilder_ == null) {
          if (((bitField0_ & 0x00400000) == 0x00400000) &&
              storagePolicy_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.getDefaultInstance()) {
            storagePolicy_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.newBuilder(storagePolicy_).mergeFrom(value).buildPartial();
          } else {
            storagePolicy_ = value;
          }
          onChanged();
        } else {
          storagePolicyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 23;</code>
       */
      public Builder clearStoragePolicy() {
        if (storagePolicyBuilder_ == null) {
          storagePolicy_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.getDefaultInstance();
          onChanged();
        } else {
          storagePolicyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00400000);
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 23;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.Builder getStoragePolicyBuilder() {
        bitField0_ |= 0x00400000;
        onChanged();
        return getStoragePolicyFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 23;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicyOrBuilder getStoragePolicyOrBuilder() {
        if (storagePolicyBuilder_ != null) {
          return storagePolicyBuilder_.getMessageOrBuilder();
        } else {
          return storagePolicy_;
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.StoragePolicy storagePolicy = 23;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicyOrBuilder> 
          getStoragePolicyFieldBuilder() {
        if (storagePolicyBuilder_ == null) {
          storagePolicyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicy.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.StoragePolicyOrBuilder>(
                  getStoragePolicy(),
                  getParentForChildren(),
                  isClean());
          storagePolicy_ = null;
        }
        return storagePolicyBuilder_;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Source source_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Source.USER_INJECTED;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Source source = 24;</code>
       */
      public boolean hasSource() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Source source = 24;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Source getSource() {
        return source_;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Source source = 24;</code>
       */
      public Builder setSource(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Source value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00800000;
        source_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Source source = 24;</code>
       */
      public Builder clearSource() {
        bitField0_ = (bitField0_ & ~0x00800000);
        source_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Source.USER_INJECTED;
        onChanged();
        return this;
      }

      private int indexGranularity_ ;
      /**
       * <code>optional int32 indexGranularity = 25;</code>
       *
       * <pre>
       * for chunk server
       * </pre>
       */
      public boolean hasIndexGranularity() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int32 indexGranularity = 25;</code>
       *
       * <pre>
       * for chunk server
       * </pre>
       */
      public int getIndexGranularity() {
        return indexGranularity_;
      }
      /**
       * <code>optional int32 indexGranularity = 25;</code>
       *
       * <pre>
       * for chunk server
       * </pre>
       */
      public Builder setIndexGranularity(int value) {
        bitField0_ |= 0x01000000;
        indexGranularity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 indexGranularity = 25;</code>
       *
       * <pre>
       * for chunk server
       * </pre>
       */
      public Builder clearIndexGranularity() {
        bitField0_ = (bitField0_ & ~0x01000000);
        indexGranularity_ = 0;
        onChanged();
        return this;
      }

      private int customChunkSize_ ;
      /**
       * <code>optional int32 customChunkSize = 26;</code>
       */
      public boolean hasCustomChunkSize() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int32 customChunkSize = 26;</code>
       */
      public int getCustomChunkSize() {
        return customChunkSize_;
      }
      /**
       * <code>optional int32 customChunkSize = 26;</code>
       */
      public Builder setCustomChunkSize(int value) {
        bitField0_ |= 0x02000000;
        customChunkSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 customChunkSize = 26;</code>
       */
      public Builder clearCustomChunkSize() {
        bitField0_ = (bitField0_ & ~0x02000000);
        customChunkSize_ = 0;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme ecCodeScheme_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeSchemeOrBuilder> ecCodeSchemeBuilder_;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 27;</code>
       */
      public boolean hasEcCodeScheme() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 27;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme getEcCodeScheme() {
        if (ecCodeSchemeBuilder_ == null) {
          return ecCodeScheme_;
        } else {
          return ecCodeSchemeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 27;</code>
       */
      public Builder setEcCodeScheme(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme value) {
        if (ecCodeSchemeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ecCodeScheme_ = value;
          onChanged();
        } else {
          ecCodeSchemeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 27;</code>
       */
      public Builder setEcCodeScheme(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.Builder builderForValue) {
        if (ecCodeSchemeBuilder_ == null) {
          ecCodeScheme_ = builderForValue.build();
          onChanged();
        } else {
          ecCodeSchemeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 27;</code>
       */
      public Builder mergeEcCodeScheme(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme value) {
        if (ecCodeSchemeBuilder_ == null) {
          if (((bitField0_ & 0x04000000) == 0x04000000) &&
              ecCodeScheme_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.getDefaultInstance()) {
            ecCodeScheme_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.newBuilder(ecCodeScheme_).mergeFrom(value).buildPartial();
          } else {
            ecCodeScheme_ = value;
          }
          onChanged();
        } else {
          ecCodeSchemeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 27;</code>
       */
      public Builder clearEcCodeScheme() {
        if (ecCodeSchemeBuilder_ == null) {
          ecCodeScheme_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.getDefaultInstance();
          onChanged();
        } else {
          ecCodeSchemeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x04000000);
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 27;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.Builder getEcCodeSchemeBuilder() {
        bitField0_ |= 0x04000000;
        onChanged();
        return getEcCodeSchemeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 27;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeSchemeOrBuilder getEcCodeSchemeOrBuilder() {
        if (ecCodeSchemeBuilder_ != null) {
          return ecCodeSchemeBuilder_.getMessageOrBuilder();
        } else {
          return ecCodeScheme_;
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.EcCodeScheme ecCodeScheme = 27;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeSchemeOrBuilder> 
          getEcCodeSchemeFieldBuilder() {
        if (ecCodeSchemeBuilder_ == null) {
          ecCodeSchemeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeScheme.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.EcCodeSchemeOrBuilder>(
                  getEcCodeScheme(),
                  getParentForChildren(),
                  isClean());
          ecCodeScheme_ = null;
        }
        return ecCodeSchemeBuilder_;
      }

      private boolean skipRepoGC_ ;
      /**
       * <code>optional bool skipRepoGC = 28;</code>
       */
      public boolean hasSkipRepoGC() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional bool skipRepoGC = 28;</code>
       */
      public boolean getSkipRepoGC() {
        return skipRepoGC_;
      }
      /**
       * <code>optional bool skipRepoGC = 28;</code>
       */
      public Builder setSkipRepoGC(boolean value) {
        bitField0_ |= 0x08000000;
        skipRepoGC_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool skipRepoGC = 28;</code>
       */
      public Builder clearSkipRepoGC() {
        bitField0_ = (bitField0_ & ~0x08000000);
        skipRepoGC_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object originalKey_ = "";
      /**
       * <code>optional string originalKey = 29;</code>
       */
      public boolean hasOriginalKey() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional string originalKey = 29;</code>
       */
      public java.lang.String getOriginalKey() {
        java.lang.Object ref = originalKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            originalKey_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string originalKey = 29;</code>
       */
      public com.google.protobuf.ByteString
          getOriginalKeyBytes() {
        java.lang.Object ref = originalKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          originalKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string originalKey = 29;</code>
       */
      public Builder setOriginalKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x10000000;
        originalKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string originalKey = 29;</code>
       */
      public Builder clearOriginalKey() {
        bitField0_ = (bitField0_ & ~0x10000000);
        originalKey_ = getDefaultInstance().getOriginalKey();
        onChanged();
        return this;
      }
      /**
       * <code>optional string originalKey = 29;</code>
       */
      public Builder setOriginalKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x10000000;
        originalKey_ = value;
        onChanged();
        return this;
      }

      private long tag_ ;
      /**
       * <code>optional int64 tag = 30;</code>
       */
      public boolean hasTag() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int64 tag = 30;</code>
       */
      public long getTag() {
        return tag_;
      }
      /**
       * <code>optional int64 tag = 30;</code>
       */
      public Builder setTag(long value) {
        bitField0_ |= 0x20000000;
        tag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 tag = 30;</code>
       */
      public Builder clearTag() {
        bitField0_ = (bitField0_ & ~0x20000000);
        tag_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCreateRequest)
    }

    static {
      defaultInstance = new ChunkCreateRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCreateRequest)
  }

  public interface ReplaceBlockRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ReplaceBlockRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string chunkId = 1;</code>
     */
    boolean hasChunkId();
    /**
     * <code>required string chunkId = 1;</code>
     */
    java.lang.String getChunkId();
    /**
     * <code>required string chunkId = 1;</code>
     */
    com.google.protobuf.ByteString
        getChunkIdBytes();

    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDataType dataType = 2;</code>
     */
    boolean hasDataType();
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDataType dataType = 2;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType getDataType();

    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segmentInfo = 3;</code>
     */
    boolean hasSegmentInfo();
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segmentInfo = 3;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo getSegmentInfo();
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segmentInfo = 3;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder getSegmentInfoOrBuilder();

    /**
     * <code>optional string writerNodeId = 4;</code>
     *
     * <pre>
     * node id of the writer, CM will pick up one SS on the same node for the writer
     * </pre>
     */
    boolean hasWriterNodeId();
    /**
     * <code>optional string writerNodeId = 4;</code>
     *
     * <pre>
     * node id of the writer, CM will pick up one SS on the same node for the writer
     * </pre>
     */
    java.lang.String getWriterNodeId();
    /**
     * <code>optional string writerNodeId = 4;</code>
     *
     * <pre>
     * node id of the writer, CM will pick up one SS on the same node for the writer
     * </pre>
     */
    com.google.protobuf.ByteString
        getWriterNodeIdBytes();

    /**
     * <code>optional string writerId = 5;</code>
     *
     * <pre>
     * writer id, as there could be multiple writers on the same node
     * </pre>
     */
    boolean hasWriterId();
    /**
     * <code>optional string writerId = 5;</code>
     *
     * <pre>
     * writer id, as there could be multiple writers on the same node
     * </pre>
     */
    java.lang.String getWriterId();
    /**
     * <code>optional string writerId = 5;</code>
     *
     * <pre>
     * writer id, as there could be multiple writers on the same node
     * </pre>
     */
    com.google.protobuf.ByteString
        getWriterIdBytes();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ReplaceBlockRequest}
   */
  public static final class ReplaceBlockRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ReplaceBlockRequest)
      ReplaceBlockRequestOrBuilder {
    // Use ReplaceBlockRequest.newBuilder() to construct.
    private ReplaceBlockRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ReplaceBlockRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ReplaceBlockRequest defaultInstance;
    public static ReplaceBlockRequest getDefaultInstance() {
      return defaultInstance;
    }

    public ReplaceBlockRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ReplaceBlockRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              chunkId_ = bs;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                dataType_ = value;
              }
              break;
            }
            case 26: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = segmentInfo_.toBuilder();
              }
              segmentInfo_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(segmentInfo_);
                segmentInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              writerNodeId_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              writerId_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ReplaceBlockRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ReplaceBlockRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<ReplaceBlockRequest> PARSER =
        new com.google.protobuf.AbstractParser<ReplaceBlockRequest>() {
      public ReplaceBlockRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ReplaceBlockRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ReplaceBlockRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CHUNKID_FIELD_NUMBER = 1;
    private java.lang.Object chunkId_;
    /**
     * <code>required string chunkId = 1;</code>
     */
    public boolean hasChunkId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string chunkId = 1;</code>
     */
    public java.lang.String getChunkId() {
      java.lang.Object ref = chunkId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          chunkId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string chunkId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getChunkIdBytes() {
      java.lang.Object ref = chunkId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        chunkId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATATYPE_FIELD_NUMBER = 2;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType dataType_;
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDataType dataType = 2;</code>
     */
    public boolean hasDataType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDataType dataType = 2;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType getDataType() {
      return dataType_;
    }

    public static final int SEGMENTINFO_FIELD_NUMBER = 3;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo segmentInfo_;
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segmentInfo = 3;</code>
     */
    public boolean hasSegmentInfo() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segmentInfo = 3;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo getSegmentInfo() {
      return segmentInfo_;
    }
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segmentInfo = 3;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder getSegmentInfoOrBuilder() {
      return segmentInfo_;
    }

    public static final int WRITERNODEID_FIELD_NUMBER = 4;
    private java.lang.Object writerNodeId_;
    /**
     * <code>optional string writerNodeId = 4;</code>
     *
     * <pre>
     * node id of the writer, CM will pick up one SS on the same node for the writer
     * </pre>
     */
    public boolean hasWriterNodeId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string writerNodeId = 4;</code>
     *
     * <pre>
     * node id of the writer, CM will pick up one SS on the same node for the writer
     * </pre>
     */
    public java.lang.String getWriterNodeId() {
      java.lang.Object ref = writerNodeId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          writerNodeId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string writerNodeId = 4;</code>
     *
     * <pre>
     * node id of the writer, CM will pick up one SS on the same node for the writer
     * </pre>
     */
    public com.google.protobuf.ByteString
        getWriterNodeIdBytes() {
      java.lang.Object ref = writerNodeId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        writerNodeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WRITERID_FIELD_NUMBER = 5;
    private java.lang.Object writerId_;
    /**
     * <code>optional string writerId = 5;</code>
     *
     * <pre>
     * writer id, as there could be multiple writers on the same node
     * </pre>
     */
    public boolean hasWriterId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string writerId = 5;</code>
     *
     * <pre>
     * writer id, as there could be multiple writers on the same node
     * </pre>
     */
    public java.lang.String getWriterId() {
      java.lang.Object ref = writerId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          writerId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string writerId = 5;</code>
     *
     * <pre>
     * writer id, as there could be multiple writers on the same node
     * </pre>
     */
    public com.google.protobuf.ByteString
        getWriterIdBytes() {
      java.lang.Object ref = writerId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        writerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      chunkId_ = "";
      dataType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType.REPO;
      segmentInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.getDefaultInstance();
      writerNodeId_ = "";
      writerId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasChunkId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDataType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSegmentInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSegmentInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getChunkIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, dataType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, segmentInfo_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getWriterNodeIdBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getWriterIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getChunkIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, dataType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, segmentInfo_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getWriterNodeIdBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getWriterIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ReplaceBlockRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ReplaceBlockRequest)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ReplaceBlockRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ReplaceBlockRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSegmentInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        chunkId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        dataType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType.REPO;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (segmentInfoBuilder_ == null) {
          segmentInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.getDefaultInstance();
        } else {
          segmentInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        writerNodeId_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        writerId_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ReplaceBlockRequest_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.chunkId_ = chunkId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dataType_ = dataType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (segmentInfoBuilder_ == null) {
          result.segmentInfo_ = segmentInfo_;
        } else {
          result.segmentInfo_ = segmentInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.writerNodeId_ = writerNodeId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.writerId_ = writerId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest.getDefaultInstance()) return this;
        if (other.hasChunkId()) {
          bitField0_ |= 0x00000001;
          chunkId_ = other.chunkId_;
          onChanged();
        }
        if (other.hasDataType()) {
          setDataType(other.getDataType());
        }
        if (other.hasSegmentInfo()) {
          mergeSegmentInfo(other.getSegmentInfo());
        }
        if (other.hasWriterNodeId()) {
          bitField0_ |= 0x00000008;
          writerNodeId_ = other.writerNodeId_;
          onChanged();
        }
        if (other.hasWriterId()) {
          bitField0_ |= 0x00000010;
          writerId_ = other.writerId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasChunkId()) {
          
          return false;
        }
        if (!hasDataType()) {
          
          return false;
        }
        if (!hasSegmentInfo()) {
          
          return false;
        }
        if (!getSegmentInfo().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object chunkId_ = "";
      /**
       * <code>required string chunkId = 1;</code>
       */
      public boolean hasChunkId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public java.lang.String getChunkId() {
        java.lang.Object ref = chunkId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            chunkId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getChunkIdBytes() {
        java.lang.Object ref = chunkId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          chunkId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder setChunkId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        chunkId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder clearChunkId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        chunkId_ = getDefaultInstance().getChunkId();
        onChanged();
        return this;
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder setChunkIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        chunkId_ = value;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType dataType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType.REPO;
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDataType dataType = 2;</code>
       */
      public boolean hasDataType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDataType dataType = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType getDataType() {
        return dataType_;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDataType dataType = 2;</code>
       */
      public Builder setDataType(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        dataType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDataType dataType = 2;</code>
       */
      public Builder clearDataType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dataType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDataType.REPO;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo segmentInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder> segmentInfoBuilder_;
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segmentInfo = 3;</code>
       */
      public boolean hasSegmentInfo() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segmentInfo = 3;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo getSegmentInfo() {
        if (segmentInfoBuilder_ == null) {
          return segmentInfo_;
        } else {
          return segmentInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segmentInfo = 3;</code>
       */
      public Builder setSegmentInfo(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo value) {
        if (segmentInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          segmentInfo_ = value;
          onChanged();
        } else {
          segmentInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segmentInfo = 3;</code>
       */
      public Builder setSegmentInfo(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder builderForValue) {
        if (segmentInfoBuilder_ == null) {
          segmentInfo_ = builderForValue.build();
          onChanged();
        } else {
          segmentInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segmentInfo = 3;</code>
       */
      public Builder mergeSegmentInfo(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo value) {
        if (segmentInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              segmentInfo_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.getDefaultInstance()) {
            segmentInfo_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.newBuilder(segmentInfo_).mergeFrom(value).buildPartial();
          } else {
            segmentInfo_ = value;
          }
          onChanged();
        } else {
          segmentInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segmentInfo = 3;</code>
       */
      public Builder clearSegmentInfo() {
        if (segmentInfoBuilder_ == null) {
          segmentInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.getDefaultInstance();
          onChanged();
        } else {
          segmentInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segmentInfo = 3;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder getSegmentInfoBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getSegmentInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segmentInfo = 3;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder getSegmentInfoOrBuilder() {
        if (segmentInfoBuilder_ != null) {
          return segmentInfoBuilder_.getMessageOrBuilder();
        } else {
          return segmentInfo_;
        }
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segmentInfo = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder> 
          getSegmentInfoFieldBuilder() {
        if (segmentInfoBuilder_ == null) {
          segmentInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder>(
                  getSegmentInfo(),
                  getParentForChildren(),
                  isClean());
          segmentInfo_ = null;
        }
        return segmentInfoBuilder_;
      }

      private java.lang.Object writerNodeId_ = "";
      /**
       * <code>optional string writerNodeId = 4;</code>
       *
       * <pre>
       * node id of the writer, CM will pick up one SS on the same node for the writer
       * </pre>
       */
      public boolean hasWriterNodeId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string writerNodeId = 4;</code>
       *
       * <pre>
       * node id of the writer, CM will pick up one SS on the same node for the writer
       * </pre>
       */
      public java.lang.String getWriterNodeId() {
        java.lang.Object ref = writerNodeId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            writerNodeId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string writerNodeId = 4;</code>
       *
       * <pre>
       * node id of the writer, CM will pick up one SS on the same node for the writer
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWriterNodeIdBytes() {
        java.lang.Object ref = writerNodeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          writerNodeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string writerNodeId = 4;</code>
       *
       * <pre>
       * node id of the writer, CM will pick up one SS on the same node for the writer
       * </pre>
       */
      public Builder setWriterNodeId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        writerNodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string writerNodeId = 4;</code>
       *
       * <pre>
       * node id of the writer, CM will pick up one SS on the same node for the writer
       * </pre>
       */
      public Builder clearWriterNodeId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        writerNodeId_ = getDefaultInstance().getWriterNodeId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string writerNodeId = 4;</code>
       *
       * <pre>
       * node id of the writer, CM will pick up one SS on the same node for the writer
       * </pre>
       */
      public Builder setWriterNodeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        writerNodeId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object writerId_ = "";
      /**
       * <code>optional string writerId = 5;</code>
       *
       * <pre>
       * writer id, as there could be multiple writers on the same node
       * </pre>
       */
      public boolean hasWriterId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string writerId = 5;</code>
       *
       * <pre>
       * writer id, as there could be multiple writers on the same node
       * </pre>
       */
      public java.lang.String getWriterId() {
        java.lang.Object ref = writerId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            writerId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string writerId = 5;</code>
       *
       * <pre>
       * writer id, as there could be multiple writers on the same node
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWriterIdBytes() {
        java.lang.Object ref = writerId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          writerId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string writerId = 5;</code>
       *
       * <pre>
       * writer id, as there could be multiple writers on the same node
       * </pre>
       */
      public Builder setWriterId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        writerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string writerId = 5;</code>
       *
       * <pre>
       * writer id, as there could be multiple writers on the same node
       * </pre>
       */
      public Builder clearWriterId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        writerId_ = getDefaultInstance().getWriterId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string writerId = 5;</code>
       *
       * <pre>
       * writer id, as there could be multiple writers on the same node
       * </pre>
       */
      public Builder setWriterIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        writerId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ReplaceBlockRequest)
    }

    static {
      defaultInstance = new ReplaceBlockRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ReplaceBlockRequest)
  }

  public interface ReplaceBlockResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ReplaceBlockResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    boolean hasStatus();
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus getStatus();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    boolean hasChunkInfo();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo getChunkInfo();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder getChunkInfoOrBuilder();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ReplaceBlockResponse}
   */
  public static final class ReplaceBlockResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ReplaceBlockResponse)
      ReplaceBlockResponseOrBuilder {
    // Use ReplaceBlockResponse.newBuilder() to construct.
    private ReplaceBlockResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ReplaceBlockResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ReplaceBlockResponse defaultInstance;
    public static ReplaceBlockResponse getDefaultInstance() {
      return defaultInstance;
    }

    public ReplaceBlockResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ReplaceBlockResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                status_ = value;
              }
              break;
            }
            case 18: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = chunkInfo_.toBuilder();
              }
              chunkInfo_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(chunkInfo_);
                chunkInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ReplaceBlockResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ReplaceBlockResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<ReplaceBlockResponse> PARSER =
        new com.google.protobuf.AbstractParser<ReplaceBlockResponse>() {
      public ReplaceBlockResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ReplaceBlockResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ReplaceBlockResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STATUS_FIELD_NUMBER = 1;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus status_;
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus getStatus() {
      return status_;
    }

    public static final int CHUNKINFO_FIELD_NUMBER = 2;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo chunkInfo_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    public boolean hasChunkInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo getChunkInfo() {
      return chunkInfo_;
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder getChunkInfoOrBuilder() {
      return chunkInfo_;
    }

    private void initFields() {
      status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
      chunkInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasChunkInfo()) {
        if (!getChunkInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, chunkInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, chunkInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ReplaceBlockResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ReplaceBlockResponse)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ReplaceBlockResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ReplaceBlockResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getChunkInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (chunkInfoBuilder_ == null) {
          chunkInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
        } else {
          chunkInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ReplaceBlockResponse_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (chunkInfoBuilder_ == null) {
          result.chunkInfo_ = chunkInfo_;
        } else {
          result.chunkInfo_ = chunkInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasChunkInfo()) {
          mergeChunkInfo(other.getChunkInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStatus()) {
          
          return false;
        }
        if (hasChunkInfo()) {
          if (!getChunkInfo().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ReplaceBlockResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus getStatus() {
        return status_;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public Builder setStatus(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo chunkInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder> chunkInfoBuilder_;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public boolean hasChunkInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo getChunkInfo() {
        if (chunkInfoBuilder_ == null) {
          return chunkInfo_;
        } else {
          return chunkInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public Builder setChunkInfo(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo value) {
        if (chunkInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          chunkInfo_ = value;
          onChanged();
        } else {
          chunkInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public Builder setChunkInfo(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder builderForValue) {
        if (chunkInfoBuilder_ == null) {
          chunkInfo_ = builderForValue.build();
          onChanged();
        } else {
          chunkInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public Builder mergeChunkInfo(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo value) {
        if (chunkInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              chunkInfo_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance()) {
            chunkInfo_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.newBuilder(chunkInfo_).mergeFrom(value).buildPartial();
          } else {
            chunkInfo_ = value;
          }
          onChanged();
        } else {
          chunkInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public Builder clearChunkInfo() {
        if (chunkInfoBuilder_ == null) {
          chunkInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
          onChanged();
        } else {
          chunkInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder getChunkInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getChunkInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder getChunkInfoOrBuilder() {
        if (chunkInfoBuilder_ != null) {
          return chunkInfoBuilder_.getMessageOrBuilder();
        } else {
          return chunkInfo_;
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder> 
          getChunkInfoFieldBuilder() {
        if (chunkInfoBuilder_ == null) {
          chunkInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder>(
                  getChunkInfo(),
                  getParentForChildren(),
                  isClean());
          chunkInfo_ = null;
        }
        return chunkInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ReplaceBlockResponse)
    }

    static {
      defaultInstance = new ReplaceBlockResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ReplaceBlockResponse)
  }

  public interface IngestSystemUnderTransformationRepoChunkRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.IngestSystemUnderTransformationRepoChunkRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string transformationId = 1;</code>
     */
    boolean hasTransformationId();
    /**
     * <code>required string transformationId = 1;</code>
     */
    java.lang.String getTransformationId();
    /**
     * <code>required string transformationId = 1;</code>
     */
    com.google.protobuf.ByteString
        getTransformationIdBytes();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.IngestSystemUnderTransformationRepoChunkRequest}
   */
  public static final class IngestSystemUnderTransformationRepoChunkRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.IngestSystemUnderTransformationRepoChunkRequest)
      IngestSystemUnderTransformationRepoChunkRequestOrBuilder {
    // Use IngestSystemUnderTransformationRepoChunkRequest.newBuilder() to construct.
    private IngestSystemUnderTransformationRepoChunkRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private IngestSystemUnderTransformationRepoChunkRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final IngestSystemUnderTransformationRepoChunkRequest defaultInstance;
    public static IngestSystemUnderTransformationRepoChunkRequest getDefaultInstance() {
      return defaultInstance;
    }

    public IngestSystemUnderTransformationRepoChunkRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private IngestSystemUnderTransformationRepoChunkRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              transformationId_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_IngestSystemUnderTransformationRepoChunkRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_IngestSystemUnderTransformationRepoChunkRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<IngestSystemUnderTransformationRepoChunkRequest> PARSER =
        new com.google.protobuf.AbstractParser<IngestSystemUnderTransformationRepoChunkRequest>() {
      public IngestSystemUnderTransformationRepoChunkRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IngestSystemUnderTransformationRepoChunkRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<IngestSystemUnderTransformationRepoChunkRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TRANSFORMATIONID_FIELD_NUMBER = 1;
    private java.lang.Object transformationId_;
    /**
     * <code>required string transformationId = 1;</code>
     */
    public boolean hasTransformationId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string transformationId = 1;</code>
     */
    public java.lang.String getTransformationId() {
      java.lang.Object ref = transformationId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          transformationId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string transformationId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTransformationIdBytes() {
      java.lang.Object ref = transformationId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        transformationId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      transformationId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTransformationId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTransformationIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTransformationIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.IngestSystemUnderTransformationRepoChunkRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.IngestSystemUnderTransformationRepoChunkRequest)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_IngestSystemUnderTransformationRepoChunkRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_IngestSystemUnderTransformationRepoChunkRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        transformationId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_IngestSystemUnderTransformationRepoChunkRequest_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.transformationId_ = transformationId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest.getDefaultInstance()) return this;
        if (other.hasTransformationId()) {
          bitField0_ |= 0x00000001;
          transformationId_ = other.transformationId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTransformationId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object transformationId_ = "";
      /**
       * <code>required string transformationId = 1;</code>
       */
      public boolean hasTransformationId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string transformationId = 1;</code>
       */
      public java.lang.String getTransformationId() {
        java.lang.Object ref = transformationId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            transformationId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string transformationId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTransformationIdBytes() {
        java.lang.Object ref = transformationId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          transformationId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string transformationId = 1;</code>
       */
      public Builder setTransformationId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        transformationId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string transformationId = 1;</code>
       */
      public Builder clearTransformationId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        transformationId_ = getDefaultInstance().getTransformationId();
        onChanged();
        return this;
      }
      /**
       * <code>required string transformationId = 1;</code>
       */
      public Builder setTransformationIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        transformationId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.IngestSystemUnderTransformationRepoChunkRequest)
    }

    static {
      defaultInstance = new IngestSystemUnderTransformationRepoChunkRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.IngestSystemUnderTransformationRepoChunkRequest)
    public static final int INGESTSYSTEMUNDERTRANSFORMATIONREPOCHUNKREQUEST_FIELD_NUMBER = 101;
    /**
     * <code>extend .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCreateRequest { ... }</code>
     */
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateRequest,
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest> ingestSystemUnderTransformationRepoChunkRequest = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest.getDefaultInstance(),
          0,
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest.class,
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.IngestSystemUnderTransformationRepoChunkRequest.getDefaultInstance());
  }

  public interface ChunkCreateResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCreateResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    boolean hasStatus();
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus getStatus();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    boolean hasChunkInfo();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo getChunkInfo();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder getChunkInfoOrBuilder();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCreateResponse}
   */
  public static final class ChunkCreateResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCreateResponse)
      ChunkCreateResponseOrBuilder {
    // Use ChunkCreateResponse.newBuilder() to construct.
    private ChunkCreateResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ChunkCreateResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ChunkCreateResponse defaultInstance;
    public static ChunkCreateResponse getDefaultInstance() {
      return defaultInstance;
    }

    public ChunkCreateResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ChunkCreateResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                status_ = value;
              }
              break;
            }
            case 18: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = chunkInfo_.toBuilder();
              }
              chunkInfo_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(chunkInfo_);
                chunkInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkCreateResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkCreateResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<ChunkCreateResponse> PARSER =
        new com.google.protobuf.AbstractParser<ChunkCreateResponse>() {
      public ChunkCreateResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChunkCreateResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ChunkCreateResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STATUS_FIELD_NUMBER = 1;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus status_;
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus getStatus() {
      return status_;
    }

    public static final int CHUNKINFO_FIELD_NUMBER = 2;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo chunkInfo_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    public boolean hasChunkInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo getChunkInfo() {
      return chunkInfo_;
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder getChunkInfoOrBuilder() {
      return chunkInfo_;
    }

    private void initFields() {
      status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
      chunkInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasChunkInfo()) {
        if (!getChunkInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, chunkInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, chunkInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCreateResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCreateResponse)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkCreateResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkCreateResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getChunkInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (chunkInfoBuilder_ == null) {
          chunkInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
        } else {
          chunkInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkCreateResponse_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (chunkInfoBuilder_ == null) {
          result.chunkInfo_ = chunkInfo_;
        } else {
          result.chunkInfo_ = chunkInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasChunkInfo()) {
          mergeChunkInfo(other.getChunkInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStatus()) {
          
          return false;
        }
        if (hasChunkInfo()) {
          if (!getChunkInfo().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkCreateResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus getStatus() {
        return status_;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public Builder setStatus(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo chunkInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder> chunkInfoBuilder_;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public boolean hasChunkInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo getChunkInfo() {
        if (chunkInfoBuilder_ == null) {
          return chunkInfo_;
        } else {
          return chunkInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public Builder setChunkInfo(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo value) {
        if (chunkInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          chunkInfo_ = value;
          onChanged();
        } else {
          chunkInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public Builder setChunkInfo(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder builderForValue) {
        if (chunkInfoBuilder_ == null) {
          chunkInfo_ = builderForValue.build();
          onChanged();
        } else {
          chunkInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public Builder mergeChunkInfo(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo value) {
        if (chunkInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              chunkInfo_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance()) {
            chunkInfo_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.newBuilder(chunkInfo_).mergeFrom(value).buildPartial();
          } else {
            chunkInfo_ = value;
          }
          onChanged();
        } else {
          chunkInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public Builder clearChunkInfo() {
        if (chunkInfoBuilder_ == null) {
          chunkInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
          onChanged();
        } else {
          chunkInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder getChunkInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getChunkInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder getChunkInfoOrBuilder() {
        if (chunkInfoBuilder_ != null) {
          return chunkInfoBuilder_.getMessageOrBuilder();
        } else {
          return chunkInfo_;
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder> 
          getChunkInfoFieldBuilder() {
        if (chunkInfoBuilder_ == null) {
          chunkInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder>(
                  getChunkInfo(),
                  getParentForChildren(),
                  isClean());
          chunkInfo_ = null;
        }
        return chunkInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCreateResponse)
    }

    static {
      defaultInstance = new ChunkCreateResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkCreateResponse)
  }

  public interface ChunkDeleteRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDeleteRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string chunkId = 1;</code>
     */
    boolean hasChunkId();
    /**
     * <code>required string chunkId = 1;</code>
     */
    java.lang.String getChunkId();
    /**
     * <code>required string chunkId = 1;</code>
     */
    com.google.protobuf.ByteString
        getChunkIdBytes();

    /**
     * <code>optional bool forceFlag = 2;</code>
     *
     * <pre>
     *force flag for delete chunk request.
     *if the flag is set, on-going unsealed geo replication will be canceled
     *geo delete will start.
     * </pre>
     */
    boolean hasForceFlag();
    /**
     * <code>optional bool forceFlag = 2;</code>
     *
     * <pre>
     *force flag for delete chunk request.
     *if the flag is set, on-going unsealed geo replication will be canceled
     *geo delete will start.
     * </pre>
     */
    boolean getForceFlag();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDeleteRequest}
   */
  public static final class ChunkDeleteRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDeleteRequest)
      ChunkDeleteRequestOrBuilder {
    // Use ChunkDeleteRequest.newBuilder() to construct.
    private ChunkDeleteRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ChunkDeleteRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ChunkDeleteRequest defaultInstance;
    public static ChunkDeleteRequest getDefaultInstance() {
      return defaultInstance;
    }

    public ChunkDeleteRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ChunkDeleteRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              chunkId_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              forceFlag_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkDeleteRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkDeleteRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<ChunkDeleteRequest> PARSER =
        new com.google.protobuf.AbstractParser<ChunkDeleteRequest>() {
      public ChunkDeleteRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChunkDeleteRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ChunkDeleteRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CHUNKID_FIELD_NUMBER = 1;
    private java.lang.Object chunkId_;
    /**
     * <code>required string chunkId = 1;</code>
     */
    public boolean hasChunkId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string chunkId = 1;</code>
     */
    public java.lang.String getChunkId() {
      java.lang.Object ref = chunkId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          chunkId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string chunkId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getChunkIdBytes() {
      java.lang.Object ref = chunkId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        chunkId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FORCEFLAG_FIELD_NUMBER = 2;
    private boolean forceFlag_;
    /**
     * <code>optional bool forceFlag = 2;</code>
     *
     * <pre>
     *force flag for delete chunk request.
     *if the flag is set, on-going unsealed geo replication will be canceled
     *geo delete will start.
     * </pre>
     */
    public boolean hasForceFlag() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool forceFlag = 2;</code>
     *
     * <pre>
     *force flag for delete chunk request.
     *if the flag is set, on-going unsealed geo replication will be canceled
     *geo delete will start.
     * </pre>
     */
    public boolean getForceFlag() {
      return forceFlag_;
    }

    private void initFields() {
      chunkId_ = "";
      forceFlag_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasChunkId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getChunkIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, forceFlag_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getChunkIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, forceFlag_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDeleteRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDeleteRequest)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkDeleteRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkDeleteRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        chunkId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        forceFlag_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkDeleteRequest_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.chunkId_ = chunkId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.forceFlag_ = forceFlag_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest.getDefaultInstance()) return this;
        if (other.hasChunkId()) {
          bitField0_ |= 0x00000001;
          chunkId_ = other.chunkId_;
          onChanged();
        }
        if (other.hasForceFlag()) {
          setForceFlag(other.getForceFlag());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasChunkId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object chunkId_ = "";
      /**
       * <code>required string chunkId = 1;</code>
       */
      public boolean hasChunkId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public java.lang.String getChunkId() {
        java.lang.Object ref = chunkId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            chunkId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getChunkIdBytes() {
        java.lang.Object ref = chunkId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          chunkId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder setChunkId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        chunkId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder clearChunkId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        chunkId_ = getDefaultInstance().getChunkId();
        onChanged();
        return this;
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder setChunkIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        chunkId_ = value;
        onChanged();
        return this;
      }

      private boolean forceFlag_ ;
      /**
       * <code>optional bool forceFlag = 2;</code>
       *
       * <pre>
       *force flag for delete chunk request.
       *if the flag is set, on-going unsealed geo replication will be canceled
       *geo delete will start.
       * </pre>
       */
      public boolean hasForceFlag() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool forceFlag = 2;</code>
       *
       * <pre>
       *force flag for delete chunk request.
       *if the flag is set, on-going unsealed geo replication will be canceled
       *geo delete will start.
       * </pre>
       */
      public boolean getForceFlag() {
        return forceFlag_;
      }
      /**
       * <code>optional bool forceFlag = 2;</code>
       *
       * <pre>
       *force flag for delete chunk request.
       *if the flag is set, on-going unsealed geo replication will be canceled
       *geo delete will start.
       * </pre>
       */
      public Builder setForceFlag(boolean value) {
        bitField0_ |= 0x00000002;
        forceFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool forceFlag = 2;</code>
       *
       * <pre>
       *force flag for delete chunk request.
       *if the flag is set, on-going unsealed geo replication will be canceled
       *geo delete will start.
       * </pre>
       */
      public Builder clearForceFlag() {
        bitField0_ = (bitField0_ & ~0x00000002);
        forceFlag_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDeleteRequest)
    }

    static {
      defaultInstance = new ChunkDeleteRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDeleteRequest)
  }

  public interface ChunkDeleteResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDeleteResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    boolean hasStatus();
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus getStatus();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDeleteResponse}
   */
  public static final class ChunkDeleteResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDeleteResponse)
      ChunkDeleteResponseOrBuilder {
    // Use ChunkDeleteResponse.newBuilder() to construct.
    private ChunkDeleteResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ChunkDeleteResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ChunkDeleteResponse defaultInstance;
    public static ChunkDeleteResponse getDefaultInstance() {
      return defaultInstance;
    }

    public ChunkDeleteResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ChunkDeleteResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                status_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkDeleteResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkDeleteResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<ChunkDeleteResponse> PARSER =
        new com.google.protobuf.AbstractParser<ChunkDeleteResponse>() {
      public ChunkDeleteResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChunkDeleteResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ChunkDeleteResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STATUS_FIELD_NUMBER = 1;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus status_;
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus getStatus() {
      return status_;
    }

    private void initFields() {
      status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, status_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDeleteResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDeleteResponse)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkDeleteResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkDeleteResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkDeleteResponse_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStatus()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkDeleteResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus getStatus() {
        return status_;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public Builder setStatus(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDeleteResponse)
    }

    static {
      defaultInstance = new ChunkDeleteResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkDeleteResponse)
  }

  public interface ChunkObjectDeleteRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkObjectDeleteRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string chunkId = 1;</code>
     */
    boolean hasChunkId();
    /**
     * <code>required string chunkId = 1;</code>
     */
    java.lang.String getChunkId();
    /**
     * <code>required string chunkId = 1;</code>
     */
    com.google.protobuf.ByteString
        getChunkIdBytes();

    /**
     * <code>optional int32 freeBlockDelaySeconds = 2;</code>
     */
    boolean hasFreeBlockDelaySeconds();
    /**
     * <code>optional int32 freeBlockDelaySeconds = 2;</code>
     */
    int getFreeBlockDelaySeconds();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkObjectDeleteRequest}
   */
  public static final class ChunkObjectDeleteRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkObjectDeleteRequest)
      ChunkObjectDeleteRequestOrBuilder {
    // Use ChunkObjectDeleteRequest.newBuilder() to construct.
    private ChunkObjectDeleteRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ChunkObjectDeleteRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ChunkObjectDeleteRequest defaultInstance;
    public static ChunkObjectDeleteRequest getDefaultInstance() {
      return defaultInstance;
    }

    public ChunkObjectDeleteRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ChunkObjectDeleteRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              chunkId_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              freeBlockDelaySeconds_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkObjectDeleteRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkObjectDeleteRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<ChunkObjectDeleteRequest> PARSER =
        new com.google.protobuf.AbstractParser<ChunkObjectDeleteRequest>() {
      public ChunkObjectDeleteRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChunkObjectDeleteRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ChunkObjectDeleteRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CHUNKID_FIELD_NUMBER = 1;
    private java.lang.Object chunkId_;
    /**
     * <code>required string chunkId = 1;</code>
     */
    public boolean hasChunkId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string chunkId = 1;</code>
     */
    public java.lang.String getChunkId() {
      java.lang.Object ref = chunkId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          chunkId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string chunkId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getChunkIdBytes() {
      java.lang.Object ref = chunkId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        chunkId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FREEBLOCKDELAYSECONDS_FIELD_NUMBER = 2;
    private int freeBlockDelaySeconds_;
    /**
     * <code>optional int32 freeBlockDelaySeconds = 2;</code>
     */
    public boolean hasFreeBlockDelaySeconds() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 freeBlockDelaySeconds = 2;</code>
     */
    public int getFreeBlockDelaySeconds() {
      return freeBlockDelaySeconds_;
    }

    private void initFields() {
      chunkId_ = "";
      freeBlockDelaySeconds_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasChunkId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getChunkIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, freeBlockDelaySeconds_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getChunkIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, freeBlockDelaySeconds_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkObjectDeleteRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkObjectDeleteRequest)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkObjectDeleteRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkObjectDeleteRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        chunkId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        freeBlockDelaySeconds_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkObjectDeleteRequest_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.chunkId_ = chunkId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.freeBlockDelaySeconds_ = freeBlockDelaySeconds_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest.getDefaultInstance()) return this;
        if (other.hasChunkId()) {
          bitField0_ |= 0x00000001;
          chunkId_ = other.chunkId_;
          onChanged();
        }
        if (other.hasFreeBlockDelaySeconds()) {
          setFreeBlockDelaySeconds(other.getFreeBlockDelaySeconds());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasChunkId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object chunkId_ = "";
      /**
       * <code>required string chunkId = 1;</code>
       */
      public boolean hasChunkId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public java.lang.String getChunkId() {
        java.lang.Object ref = chunkId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            chunkId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getChunkIdBytes() {
        java.lang.Object ref = chunkId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          chunkId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder setChunkId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        chunkId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder clearChunkId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        chunkId_ = getDefaultInstance().getChunkId();
        onChanged();
        return this;
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder setChunkIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        chunkId_ = value;
        onChanged();
        return this;
      }

      private int freeBlockDelaySeconds_ ;
      /**
       * <code>optional int32 freeBlockDelaySeconds = 2;</code>
       */
      public boolean hasFreeBlockDelaySeconds() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 freeBlockDelaySeconds = 2;</code>
       */
      public int getFreeBlockDelaySeconds() {
        return freeBlockDelaySeconds_;
      }
      /**
       * <code>optional int32 freeBlockDelaySeconds = 2;</code>
       */
      public Builder setFreeBlockDelaySeconds(int value) {
        bitField0_ |= 0x00000002;
        freeBlockDelaySeconds_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 freeBlockDelaySeconds = 2;</code>
       */
      public Builder clearFreeBlockDelaySeconds() {
        bitField0_ = (bitField0_ & ~0x00000002);
        freeBlockDelaySeconds_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkObjectDeleteRequest)
    }

    static {
      defaultInstance = new ChunkObjectDeleteRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkObjectDeleteRequest)
  }

  public interface ChunkObjectDeleteResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkObjectDeleteResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    boolean hasStatus();
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus getStatus();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkObjectDeleteResponse}
   */
  public static final class ChunkObjectDeleteResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkObjectDeleteResponse)
      ChunkObjectDeleteResponseOrBuilder {
    // Use ChunkObjectDeleteResponse.newBuilder() to construct.
    private ChunkObjectDeleteResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ChunkObjectDeleteResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ChunkObjectDeleteResponse defaultInstance;
    public static ChunkObjectDeleteResponse getDefaultInstance() {
      return defaultInstance;
    }

    public ChunkObjectDeleteResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ChunkObjectDeleteResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                status_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkObjectDeleteResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkObjectDeleteResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<ChunkObjectDeleteResponse> PARSER =
        new com.google.protobuf.AbstractParser<ChunkObjectDeleteResponse>() {
      public ChunkObjectDeleteResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChunkObjectDeleteResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ChunkObjectDeleteResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STATUS_FIELD_NUMBER = 1;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus status_;
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus getStatus() {
      return status_;
    }

    private void initFields() {
      status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, status_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkObjectDeleteResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkObjectDeleteResponse)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkObjectDeleteResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkObjectDeleteResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkObjectDeleteResponse_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStatus()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkObjectDeleteResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus getStatus() {
        return status_;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public Builder setStatus(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkObjectDeleteResponse)
    }

    static {
      defaultInstance = new ChunkObjectDeleteResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkObjectDeleteResponse)
  }

  public interface ChunkSealRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string chunkId = 1;</code>
     */
    boolean hasChunkId();
    /**
     * <code>required string chunkId = 1;</code>
     */
    java.lang.String getChunkId();
    /**
     * <code>required string chunkId = 1;</code>
     */
    com.google.protobuf.ByteString
        getChunkIdBytes();

    /**
     * <code>required int32 length = 2;</code>
     */
    boolean hasLength();
    /**
     * <code>required int32 length = 2;</code>
     */
    int getLength();

    /**
     * <code>optional string client = 3;</code>
     *
     * <pre>
     * track caller that issue the seal request
     * deprecated, moved to FileOperationPayload
     * </pre>
     */
    boolean hasClient();
    /**
     * <code>optional string client = 3;</code>
     *
     * <pre>
     * track caller that issue the seal request
     * deprecated, moved to FileOperationPayload
     * </pre>
     */
    java.lang.String getClient();
    /**
     * <code>optional string client = 3;</code>
     *
     * <pre>
     * track caller that issue the seal request
     * deprecated, moved to FileOperationPayload
     * </pre>
     */
    com.google.protobuf.ByteString
        getClientBytes();

    /**
     * <code>optional bool isEcInClient = 4;</code>
     *
     * <pre>
     * indicate if client (BFW) will do EC or not
     * </pre>
     */
    boolean hasIsEcInClient();
    /**
     * <code>optional bool isEcInClient = 4;</code>
     *
     * <pre>
     * indicate if client (BFW) will do EC or not
     * </pre>
     */
    boolean getIsEcInClient();

    /**
     * <code>optional bool checkTask = 5 [default = false];</code>
     */
    boolean hasCheckTask();
    /**
     * <code>optional bool checkTask = 5 [default = false];</code>
     */
    boolean getCheckTask();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealRequest}
   */
  public static final class ChunkSealRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealRequest)
      ChunkSealRequestOrBuilder {
    // Use ChunkSealRequest.newBuilder() to construct.
    private ChunkSealRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ChunkSealRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ChunkSealRequest defaultInstance;
    public static ChunkSealRequest getDefaultInstance() {
      return defaultInstance;
    }

    public ChunkSealRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ChunkSealRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              chunkId_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              length_ = input.readInt32();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              client_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              isEcInClient_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              checkTask_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<ChunkSealRequest> PARSER =
        new com.google.protobuf.AbstractParser<ChunkSealRequest>() {
      public ChunkSealRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChunkSealRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ChunkSealRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CHUNKID_FIELD_NUMBER = 1;
    private java.lang.Object chunkId_;
    /**
     * <code>required string chunkId = 1;</code>
     */
    public boolean hasChunkId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string chunkId = 1;</code>
     */
    public java.lang.String getChunkId() {
      java.lang.Object ref = chunkId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          chunkId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string chunkId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getChunkIdBytes() {
      java.lang.Object ref = chunkId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        chunkId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LENGTH_FIELD_NUMBER = 2;
    private int length_;
    /**
     * <code>required int32 length = 2;</code>
     */
    public boolean hasLength() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 length = 2;</code>
     */
    public int getLength() {
      return length_;
    }

    public static final int CLIENT_FIELD_NUMBER = 3;
    private java.lang.Object client_;
    /**
     * <code>optional string client = 3;</code>
     *
     * <pre>
     * track caller that issue the seal request
     * deprecated, moved to FileOperationPayload
     * </pre>
     */
    public boolean hasClient() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string client = 3;</code>
     *
     * <pre>
     * track caller that issue the seal request
     * deprecated, moved to FileOperationPayload
     * </pre>
     */
    public java.lang.String getClient() {
      java.lang.Object ref = client_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          client_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string client = 3;</code>
     *
     * <pre>
     * track caller that issue the seal request
     * deprecated, moved to FileOperationPayload
     * </pre>
     */
    public com.google.protobuf.ByteString
        getClientBytes() {
      java.lang.Object ref = client_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        client_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ISECINCLIENT_FIELD_NUMBER = 4;
    private boolean isEcInClient_;
    /**
     * <code>optional bool isEcInClient = 4;</code>
     *
     * <pre>
     * indicate if client (BFW) will do EC or not
     * </pre>
     */
    public boolean hasIsEcInClient() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool isEcInClient = 4;</code>
     *
     * <pre>
     * indicate if client (BFW) will do EC or not
     * </pre>
     */
    public boolean getIsEcInClient() {
      return isEcInClient_;
    }

    public static final int CHECKTASK_FIELD_NUMBER = 5;
    private boolean checkTask_;
    /**
     * <code>optional bool checkTask = 5 [default = false];</code>
     */
    public boolean hasCheckTask() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool checkTask = 5 [default = false];</code>
     */
    public boolean getCheckTask() {
      return checkTask_;
    }

    private void initFields() {
      chunkId_ = "";
      length_ = 0;
      client_ = "";
      isEcInClient_ = false;
      checkTask_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasChunkId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLength()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getChunkIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, length_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getClientBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, isEcInClient_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, checkTask_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getChunkIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, length_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getClientBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isEcInClient_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, checkTask_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealRequest)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        chunkId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        length_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        client_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        isEcInClient_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        checkTask_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealRequest_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.chunkId_ = chunkId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.length_ = length_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.client_ = client_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.isEcInClient_ = isEcInClient_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.checkTask_ = checkTask_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest.getDefaultInstance()) return this;
        if (other.hasChunkId()) {
          bitField0_ |= 0x00000001;
          chunkId_ = other.chunkId_;
          onChanged();
        }
        if (other.hasLength()) {
          setLength(other.getLength());
        }
        if (other.hasClient()) {
          bitField0_ |= 0x00000004;
          client_ = other.client_;
          onChanged();
        }
        if (other.hasIsEcInClient()) {
          setIsEcInClient(other.getIsEcInClient());
        }
        if (other.hasCheckTask()) {
          setCheckTask(other.getCheckTask());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasChunkId()) {
          
          return false;
        }
        if (!hasLength()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object chunkId_ = "";
      /**
       * <code>required string chunkId = 1;</code>
       */
      public boolean hasChunkId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public java.lang.String getChunkId() {
        java.lang.Object ref = chunkId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            chunkId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getChunkIdBytes() {
        java.lang.Object ref = chunkId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          chunkId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder setChunkId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        chunkId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder clearChunkId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        chunkId_ = getDefaultInstance().getChunkId();
        onChanged();
        return this;
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder setChunkIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        chunkId_ = value;
        onChanged();
        return this;
      }

      private int length_ ;
      /**
       * <code>required int32 length = 2;</code>
       */
      public boolean hasLength() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 length = 2;</code>
       */
      public int getLength() {
        return length_;
      }
      /**
       * <code>required int32 length = 2;</code>
       */
      public Builder setLength(int value) {
        bitField0_ |= 0x00000002;
        length_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 length = 2;</code>
       */
      public Builder clearLength() {
        bitField0_ = (bitField0_ & ~0x00000002);
        length_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object client_ = "";
      /**
       * <code>optional string client = 3;</code>
       *
       * <pre>
       * track caller that issue the seal request
       * deprecated, moved to FileOperationPayload
       * </pre>
       */
      public boolean hasClient() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string client = 3;</code>
       *
       * <pre>
       * track caller that issue the seal request
       * deprecated, moved to FileOperationPayload
       * </pre>
       */
      public java.lang.String getClient() {
        java.lang.Object ref = client_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            client_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string client = 3;</code>
       *
       * <pre>
       * track caller that issue the seal request
       * deprecated, moved to FileOperationPayload
       * </pre>
       */
      public com.google.protobuf.ByteString
          getClientBytes() {
        java.lang.Object ref = client_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          client_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string client = 3;</code>
       *
       * <pre>
       * track caller that issue the seal request
       * deprecated, moved to FileOperationPayload
       * </pre>
       */
      public Builder setClient(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        client_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string client = 3;</code>
       *
       * <pre>
       * track caller that issue the seal request
       * deprecated, moved to FileOperationPayload
       * </pre>
       */
      public Builder clearClient() {
        bitField0_ = (bitField0_ & ~0x00000004);
        client_ = getDefaultInstance().getClient();
        onChanged();
        return this;
      }
      /**
       * <code>optional string client = 3;</code>
       *
       * <pre>
       * track caller that issue the seal request
       * deprecated, moved to FileOperationPayload
       * </pre>
       */
      public Builder setClientBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        client_ = value;
        onChanged();
        return this;
      }

      private boolean isEcInClient_ ;
      /**
       * <code>optional bool isEcInClient = 4;</code>
       *
       * <pre>
       * indicate if client (BFW) will do EC or not
       * </pre>
       */
      public boolean hasIsEcInClient() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool isEcInClient = 4;</code>
       *
       * <pre>
       * indicate if client (BFW) will do EC or not
       * </pre>
       */
      public boolean getIsEcInClient() {
        return isEcInClient_;
      }
      /**
       * <code>optional bool isEcInClient = 4;</code>
       *
       * <pre>
       * indicate if client (BFW) will do EC or not
       * </pre>
       */
      public Builder setIsEcInClient(boolean value) {
        bitField0_ |= 0x00000008;
        isEcInClient_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isEcInClient = 4;</code>
       *
       * <pre>
       * indicate if client (BFW) will do EC or not
       * </pre>
       */
      public Builder clearIsEcInClient() {
        bitField0_ = (bitField0_ & ~0x00000008);
        isEcInClient_ = false;
        onChanged();
        return this;
      }

      private boolean checkTask_ ;
      /**
       * <code>optional bool checkTask = 5 [default = false];</code>
       */
      public boolean hasCheckTask() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool checkTask = 5 [default = false];</code>
       */
      public boolean getCheckTask() {
        return checkTask_;
      }
      /**
       * <code>optional bool checkTask = 5 [default = false];</code>
       */
      public Builder setCheckTask(boolean value) {
        bitField0_ |= 0x00000010;
        checkTask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool checkTask = 5 [default = false];</code>
       */
      public Builder clearCheckTask() {
        bitField0_ = (bitField0_ & ~0x00000010);
        checkTask_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealRequest)
    }

    static {
      defaultInstance = new ChunkSealRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealRequest)
  }

  public interface ChunkSealResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    boolean hasStatus();
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus getStatus();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     *
     * <pre>
     * if the chunk is successfully sealed, bring back the new ChunkInfo
     * </pre>
     */
    boolean hasChunkInfo();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     *
     * <pre>
     * if the chunk is successfully sealed, bring back the new ChunkInfo
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo getChunkInfo();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     *
     * <pre>
     * if the chunk is successfully sealed, bring back the new ChunkInfo
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder getChunkInfoOrBuilder();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealResponse}
   */
  public static final class ChunkSealResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealResponse)
      ChunkSealResponseOrBuilder {
    // Use ChunkSealResponse.newBuilder() to construct.
    private ChunkSealResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ChunkSealResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ChunkSealResponse defaultInstance;
    public static ChunkSealResponse getDefaultInstance() {
      return defaultInstance;
    }

    public ChunkSealResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ChunkSealResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                status_ = value;
              }
              break;
            }
            case 18: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = chunkInfo_.toBuilder();
              }
              chunkInfo_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(chunkInfo_);
                chunkInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<ChunkSealResponse> PARSER =
        new com.google.protobuf.AbstractParser<ChunkSealResponse>() {
      public ChunkSealResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChunkSealResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ChunkSealResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STATUS_FIELD_NUMBER = 1;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus status_;
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus getStatus() {
      return status_;
    }

    public static final int CHUNKINFO_FIELD_NUMBER = 2;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo chunkInfo_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     *
     * <pre>
     * if the chunk is successfully sealed, bring back the new ChunkInfo
     * </pre>
     */
    public boolean hasChunkInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     *
     * <pre>
     * if the chunk is successfully sealed, bring back the new ChunkInfo
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo getChunkInfo() {
      return chunkInfo_;
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     *
     * <pre>
     * if the chunk is successfully sealed, bring back the new ChunkInfo
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder getChunkInfoOrBuilder() {
      return chunkInfo_;
    }

    private void initFields() {
      status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
      chunkInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasChunkInfo()) {
        if (!getChunkInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, chunkInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, chunkInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealResponse)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getChunkInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (chunkInfoBuilder_ == null) {
          chunkInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
        } else {
          chunkInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealResponse_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (chunkInfoBuilder_ == null) {
          result.chunkInfo_ = chunkInfo_;
        } else {
          result.chunkInfo_ = chunkInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasChunkInfo()) {
          mergeChunkInfo(other.getChunkInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStatus()) {
          
          return false;
        }
        if (hasChunkInfo()) {
          if (!getChunkInfo().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus getStatus() {
        return status_;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public Builder setStatus(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo chunkInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder> chunkInfoBuilder_;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       *
       * <pre>
       * if the chunk is successfully sealed, bring back the new ChunkInfo
       * </pre>
       */
      public boolean hasChunkInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       *
       * <pre>
       * if the chunk is successfully sealed, bring back the new ChunkInfo
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo getChunkInfo() {
        if (chunkInfoBuilder_ == null) {
          return chunkInfo_;
        } else {
          return chunkInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       *
       * <pre>
       * if the chunk is successfully sealed, bring back the new ChunkInfo
       * </pre>
       */
      public Builder setChunkInfo(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo value) {
        if (chunkInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          chunkInfo_ = value;
          onChanged();
        } else {
          chunkInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       *
       * <pre>
       * if the chunk is successfully sealed, bring back the new ChunkInfo
       * </pre>
       */
      public Builder setChunkInfo(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder builderForValue) {
        if (chunkInfoBuilder_ == null) {
          chunkInfo_ = builderForValue.build();
          onChanged();
        } else {
          chunkInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       *
       * <pre>
       * if the chunk is successfully sealed, bring back the new ChunkInfo
       * </pre>
       */
      public Builder mergeChunkInfo(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo value) {
        if (chunkInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              chunkInfo_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance()) {
            chunkInfo_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.newBuilder(chunkInfo_).mergeFrom(value).buildPartial();
          } else {
            chunkInfo_ = value;
          }
          onChanged();
        } else {
          chunkInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       *
       * <pre>
       * if the chunk is successfully sealed, bring back the new ChunkInfo
       * </pre>
       */
      public Builder clearChunkInfo() {
        if (chunkInfoBuilder_ == null) {
          chunkInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
          onChanged();
        } else {
          chunkInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       *
       * <pre>
       * if the chunk is successfully sealed, bring back the new ChunkInfo
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder getChunkInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getChunkInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       *
       * <pre>
       * if the chunk is successfully sealed, bring back the new ChunkInfo
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder getChunkInfoOrBuilder() {
        if (chunkInfoBuilder_ != null) {
          return chunkInfoBuilder_.getMessageOrBuilder();
        } else {
          return chunkInfo_;
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       *
       * <pre>
       * if the chunk is successfully sealed, bring back the new ChunkInfo
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder> 
          getChunkInfoFieldBuilder() {
        if (chunkInfoBuilder_ == null) {
          chunkInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder>(
                  getChunkInfo(),
                  getParentForChildren(),
                  isClean());
          chunkInfo_ = null;
        }
        return chunkInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealResponse)
    }

    static {
      defaultInstance = new ChunkSealResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealResponse)
  }

  public interface ClientEcEncodeCompletionRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ClientEcEncodeCompletionRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string chunkId = 1;</code>
     */
    boolean hasChunkId();
    /**
     * <code>required string chunkId = 1;</code>
     */
    java.lang.String getChunkId();
    /**
     * <code>required string chunkId = 1;</code>
     */
    com.google.protobuf.ByteString
        getChunkIdBytes();

    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
     *
     * <pre>
     * updated segment info
     * </pre>
     */
    java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo> 
        getSegmentsList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
     *
     * <pre>
     * updated segment info
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo getSegments(int index);
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
     *
     * <pre>
     * updated segment info
     * </pre>
     */
    int getSegmentsCount();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
     *
     * <pre>
     * updated segment info
     * </pre>
     */
    java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder> 
        getSegmentsOrBuilderList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
     *
     * <pre>
     * updated segment info
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder getSegmentsOrBuilder(
        int index);

    /**
     * <code>required int32 sealLength = 3;</code>
     *
     * <pre>
     * seal length
     * </pre>
     */
    boolean hasSealLength();
    /**
     * <code>required int32 sealLength = 3;</code>
     *
     * <pre>
     * seal length
     * </pre>
     */
    int getSealLength();

    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy ecCopy = 4;</code>
     *
     * <pre>
     * copy to mark for ec completion
     * </pre>
     */
    boolean hasEcCopy();
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy ecCopy = 4;</code>
     *
     * <pre>
     * copy to mark for ec completion
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy getEcCopy();
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy ecCopy = 4;</code>
     *
     * <pre>
     * copy to mark for ec completion
     * </pre>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder getEcCopyOrBuilder();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ClientEcEncodeCompletionRequest}
   *
   * <pre>
   * issued from client to notify encode is done
   * </pre>
   */
  public static final class ClientEcEncodeCompletionRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ClientEcEncodeCompletionRequest)
      ClientEcEncodeCompletionRequestOrBuilder {
    // Use ClientEcEncodeCompletionRequest.newBuilder() to construct.
    private ClientEcEncodeCompletionRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClientEcEncodeCompletionRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClientEcEncodeCompletionRequest defaultInstance;
    public static ClientEcEncodeCompletionRequest getDefaultInstance() {
      return defaultInstance;
    }

    public ClientEcEncodeCompletionRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClientEcEncodeCompletionRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              chunkId_ = bs;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                segments_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo>();
                mutable_bitField0_ |= 0x00000002;
              }
              segments_.add(input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              sealLength_ = input.readInt32();
              break;
            }
            case 34: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = ecCopy_.toBuilder();
              }
              ecCopy_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ecCopy_);
                ecCopy_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          segments_ = java.util.Collections.unmodifiableList(segments_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ClientEcEncodeCompletionRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ClientEcEncodeCompletionRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<ClientEcEncodeCompletionRequest> PARSER =
        new com.google.protobuf.AbstractParser<ClientEcEncodeCompletionRequest>() {
      public ClientEcEncodeCompletionRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClientEcEncodeCompletionRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClientEcEncodeCompletionRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CHUNKID_FIELD_NUMBER = 1;
    private java.lang.Object chunkId_;
    /**
     * <code>required string chunkId = 1;</code>
     */
    public boolean hasChunkId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string chunkId = 1;</code>
     */
    public java.lang.String getChunkId() {
      java.lang.Object ref = chunkId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          chunkId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string chunkId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getChunkIdBytes() {
      java.lang.Object ref = chunkId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        chunkId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SEGMENTS_FIELD_NUMBER = 2;
    private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo> segments_;
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
     *
     * <pre>
     * updated segment info
     * </pre>
     */
    public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo> getSegmentsList() {
      return segments_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
     *
     * <pre>
     * updated segment info
     * </pre>
     */
    public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder> 
        getSegmentsOrBuilderList() {
      return segments_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
     *
     * <pre>
     * updated segment info
     * </pre>
     */
    public int getSegmentsCount() {
      return segments_.size();
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
     *
     * <pre>
     * updated segment info
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo getSegments(int index) {
      return segments_.get(index);
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
     *
     * <pre>
     * updated segment info
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder getSegmentsOrBuilder(
        int index) {
      return segments_.get(index);
    }

    public static final int SEALLENGTH_FIELD_NUMBER = 3;
    private int sealLength_;
    /**
     * <code>required int32 sealLength = 3;</code>
     *
     * <pre>
     * seal length
     * </pre>
     */
    public boolean hasSealLength() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 sealLength = 3;</code>
     *
     * <pre>
     * seal length
     * </pre>
     */
    public int getSealLength() {
      return sealLength_;
    }

    public static final int ECCOPY_FIELD_NUMBER = 4;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy ecCopy_;
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy ecCopy = 4;</code>
     *
     * <pre>
     * copy to mark for ec completion
     * </pre>
     */
    public boolean hasEcCopy() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy ecCopy = 4;</code>
     *
     * <pre>
     * copy to mark for ec completion
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy getEcCopy() {
      return ecCopy_;
    }
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy ecCopy = 4;</code>
     *
     * <pre>
     * copy to mark for ec completion
     * </pre>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder getEcCopyOrBuilder() {
      return ecCopy_;
    }

    private void initFields() {
      chunkId_ = "";
      segments_ = java.util.Collections.emptyList();
      sealLength_ = 0;
      ecCopy_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasChunkId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSealLength()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEcCopy()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSegmentsCount(); i++) {
        if (!getSegments(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getEcCopy().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getChunkIdBytes());
      }
      for (int i = 0; i < segments_.size(); i++) {
        output.writeMessage(2, segments_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, sealLength_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(4, ecCopy_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getChunkIdBytes());
      }
      for (int i = 0; i < segments_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, segments_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, sealLength_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, ecCopy_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ClientEcEncodeCompletionRequest}
     *
     * <pre>
     * issued from client to notify encode is done
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ClientEcEncodeCompletionRequest)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ClientEcEncodeCompletionRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ClientEcEncodeCompletionRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSegmentsFieldBuilder();
          getEcCopyFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        chunkId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (segmentsBuilder_ == null) {
          segments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          segmentsBuilder_.clear();
        }
        sealLength_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (ecCopyBuilder_ == null) {
          ecCopy_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.getDefaultInstance();
        } else {
          ecCopyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ClientEcEncodeCompletionRequest_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.chunkId_ = chunkId_;
        if (segmentsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            segments_ = java.util.Collections.unmodifiableList(segments_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.segments_ = segments_;
        } else {
          result.segments_ = segmentsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sealLength_ = sealLength_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        if (ecCopyBuilder_ == null) {
          result.ecCopy_ = ecCopy_;
        } else {
          result.ecCopy_ = ecCopyBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest.getDefaultInstance()) return this;
        if (other.hasChunkId()) {
          bitField0_ |= 0x00000001;
          chunkId_ = other.chunkId_;
          onChanged();
        }
        if (segmentsBuilder_ == null) {
          if (!other.segments_.isEmpty()) {
            if (segments_.isEmpty()) {
              segments_ = other.segments_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSegmentsIsMutable();
              segments_.addAll(other.segments_);
            }
            onChanged();
          }
        } else {
          if (!other.segments_.isEmpty()) {
            if (segmentsBuilder_.isEmpty()) {
              segmentsBuilder_.dispose();
              segmentsBuilder_ = null;
              segments_ = other.segments_;
              bitField0_ = (bitField0_ & ~0x00000002);
              segmentsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSegmentsFieldBuilder() : null;
            } else {
              segmentsBuilder_.addAllMessages(other.segments_);
            }
          }
        }
        if (other.hasSealLength()) {
          setSealLength(other.getSealLength());
        }
        if (other.hasEcCopy()) {
          mergeEcCopy(other.getEcCopy());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasChunkId()) {
          
          return false;
        }
        if (!hasSealLength()) {
          
          return false;
        }
        if (!hasEcCopy()) {
          
          return false;
        }
        for (int i = 0; i < getSegmentsCount(); i++) {
          if (!getSegments(i).isInitialized()) {
            
            return false;
          }
        }
        if (!getEcCopy().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object chunkId_ = "";
      /**
       * <code>required string chunkId = 1;</code>
       */
      public boolean hasChunkId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public java.lang.String getChunkId() {
        java.lang.Object ref = chunkId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            chunkId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getChunkIdBytes() {
        java.lang.Object ref = chunkId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          chunkId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder setChunkId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        chunkId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder clearChunkId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        chunkId_ = getDefaultInstance().getChunkId();
        onChanged();
        return this;
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder setChunkIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        chunkId_ = value;
        onChanged();
        return this;
      }

      private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo> segments_ =
        java.util.Collections.emptyList();
      private void ensureSegmentsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          segments_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo>(segments_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder> segmentsBuilder_;

      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       *
       * <pre>
       * updated segment info
       * </pre>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo> getSegmentsList() {
        if (segmentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(segments_);
        } else {
          return segmentsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       *
       * <pre>
       * updated segment info
       * </pre>
       */
      public int getSegmentsCount() {
        if (segmentsBuilder_ == null) {
          return segments_.size();
        } else {
          return segmentsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       *
       * <pre>
       * updated segment info
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo getSegments(int index) {
        if (segmentsBuilder_ == null) {
          return segments_.get(index);
        } else {
          return segmentsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       *
       * <pre>
       * updated segment info
       * </pre>
       */
      public Builder setSegments(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo value) {
        if (segmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSegmentsIsMutable();
          segments_.set(index, value);
          onChanged();
        } else {
          segmentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       *
       * <pre>
       * updated segment info
       * </pre>
       */
      public Builder setSegments(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder builderForValue) {
        if (segmentsBuilder_ == null) {
          ensureSegmentsIsMutable();
          segments_.set(index, builderForValue.build());
          onChanged();
        } else {
          segmentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       *
       * <pre>
       * updated segment info
       * </pre>
       */
      public Builder addSegments(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo value) {
        if (segmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSegmentsIsMutable();
          segments_.add(value);
          onChanged();
        } else {
          segmentsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       *
       * <pre>
       * updated segment info
       * </pre>
       */
      public Builder addSegments(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo value) {
        if (segmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSegmentsIsMutable();
          segments_.add(index, value);
          onChanged();
        } else {
          segmentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       *
       * <pre>
       * updated segment info
       * </pre>
       */
      public Builder addSegments(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder builderForValue) {
        if (segmentsBuilder_ == null) {
          ensureSegmentsIsMutable();
          segments_.add(builderForValue.build());
          onChanged();
        } else {
          segmentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       *
       * <pre>
       * updated segment info
       * </pre>
       */
      public Builder addSegments(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder builderForValue) {
        if (segmentsBuilder_ == null) {
          ensureSegmentsIsMutable();
          segments_.add(index, builderForValue.build());
          onChanged();
        } else {
          segmentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       *
       * <pre>
       * updated segment info
       * </pre>
       */
      public Builder addAllSegments(
          java.lang.Iterable<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo> values) {
        if (segmentsBuilder_ == null) {
          ensureSegmentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, segments_);
          onChanged();
        } else {
          segmentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       *
       * <pre>
       * updated segment info
       * </pre>
       */
      public Builder clearSegments() {
        if (segmentsBuilder_ == null) {
          segments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          segmentsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       *
       * <pre>
       * updated segment info
       * </pre>
       */
      public Builder removeSegments(int index) {
        if (segmentsBuilder_ == null) {
          ensureSegmentsIsMutable();
          segments_.remove(index);
          onChanged();
        } else {
          segmentsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       *
       * <pre>
       * updated segment info
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder getSegmentsBuilder(
          int index) {
        return getSegmentsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       *
       * <pre>
       * updated segment info
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder getSegmentsOrBuilder(
          int index) {
        if (segmentsBuilder_ == null) {
          return segments_.get(index);  } else {
          return segmentsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       *
       * <pre>
       * updated segment info
       * </pre>
       */
      public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder> 
           getSegmentsOrBuilderList() {
        if (segmentsBuilder_ != null) {
          return segmentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(segments_);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       *
       * <pre>
       * updated segment info
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder addSegmentsBuilder() {
        return getSegmentsFieldBuilder().addBuilder(
            io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       *
       * <pre>
       * updated segment info
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder addSegmentsBuilder(
          int index) {
        return getSegmentsFieldBuilder().addBuilder(
            index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.SegmentInfo segments = 2;</code>
       *
       * <pre>
       * updated segment info
       * </pre>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder> 
           getSegmentsBuilderList() {
        return getSegmentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder> 
          getSegmentsFieldBuilder() {
        if (segmentsBuilder_ == null) {
          segmentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.SegmentInfoOrBuilder>(
                  segments_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          segments_ = null;
        }
        return segmentsBuilder_;
      }

      private int sealLength_ ;
      /**
       * <code>required int32 sealLength = 3;</code>
       *
       * <pre>
       * seal length
       * </pre>
       */
      public boolean hasSealLength() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 sealLength = 3;</code>
       *
       * <pre>
       * seal length
       * </pre>
       */
      public int getSealLength() {
        return sealLength_;
      }
      /**
       * <code>required int32 sealLength = 3;</code>
       *
       * <pre>
       * seal length
       * </pre>
       */
      public Builder setSealLength(int value) {
        bitField0_ |= 0x00000004;
        sealLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 sealLength = 3;</code>
       *
       * <pre>
       * seal length
       * </pre>
       */
      public Builder clearSealLength() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sealLength_ = 0;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy ecCopy_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder> ecCopyBuilder_;
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy ecCopy = 4;</code>
       *
       * <pre>
       * copy to mark for ec completion
       * </pre>
       */
      public boolean hasEcCopy() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy ecCopy = 4;</code>
       *
       * <pre>
       * copy to mark for ec completion
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy getEcCopy() {
        if (ecCopyBuilder_ == null) {
          return ecCopy_;
        } else {
          return ecCopyBuilder_.getMessage();
        }
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy ecCopy = 4;</code>
       *
       * <pre>
       * copy to mark for ec completion
       * </pre>
       */
      public Builder setEcCopy(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy value) {
        if (ecCopyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ecCopy_ = value;
          onChanged();
        } else {
          ecCopyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy ecCopy = 4;</code>
       *
       * <pre>
       * copy to mark for ec completion
       * </pre>
       */
      public Builder setEcCopy(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder builderForValue) {
        if (ecCopyBuilder_ == null) {
          ecCopy_ = builderForValue.build();
          onChanged();
        } else {
          ecCopyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy ecCopy = 4;</code>
       *
       * <pre>
       * copy to mark for ec completion
       * </pre>
       */
      public Builder mergeEcCopy(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy value) {
        if (ecCopyBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              ecCopy_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.getDefaultInstance()) {
            ecCopy_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.newBuilder(ecCopy_).mergeFrom(value).buildPartial();
          } else {
            ecCopy_ = value;
          }
          onChanged();
        } else {
          ecCopyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy ecCopy = 4;</code>
       *
       * <pre>
       * copy to mark for ec completion
       * </pre>
       */
      public Builder clearEcCopy() {
        if (ecCopyBuilder_ == null) {
          ecCopy_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.getDefaultInstance();
          onChanged();
        } else {
          ecCopyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy ecCopy = 4;</code>
       *
       * <pre>
       * copy to mark for ec completion
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder getEcCopyBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getEcCopyFieldBuilder().getBuilder();
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy ecCopy = 4;</code>
       *
       * <pre>
       * copy to mark for ec completion
       * </pre>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder getEcCopyOrBuilder() {
        if (ecCopyBuilder_ != null) {
          return ecCopyBuilder_.getMessageOrBuilder();
        } else {
          return ecCopy_;
        }
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.Copy ecCopy = 4;</code>
       *
       * <pre>
       * copy to mark for ec completion
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder> 
          getEcCopyFieldBuilder() {
        if (ecCopyBuilder_ == null) {
          ecCopyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.Copy.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.CopyOrBuilder>(
                  getEcCopy(),
                  getParentForChildren(),
                  isClean());
          ecCopy_ = null;
        }
        return ecCopyBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ClientEcEncodeCompletionRequest)
    }

    static {
      defaultInstance = new ClientEcEncodeCompletionRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ClientEcEncodeCompletionRequest)
  }

  public interface ClientEcEncodeCompletionResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ClientEcEncodeCompletionResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    boolean hasStatus();
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus getStatus();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    boolean hasChunkInfo();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo getChunkInfo();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder getChunkInfoOrBuilder();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ClientEcEncodeCompletionResponse}
   */
  public static final class ClientEcEncodeCompletionResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ClientEcEncodeCompletionResponse)
      ClientEcEncodeCompletionResponseOrBuilder {
    // Use ClientEcEncodeCompletionResponse.newBuilder() to construct.
    private ClientEcEncodeCompletionResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClientEcEncodeCompletionResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClientEcEncodeCompletionResponse defaultInstance;
    public static ClientEcEncodeCompletionResponse getDefaultInstance() {
      return defaultInstance;
    }

    public ClientEcEncodeCompletionResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClientEcEncodeCompletionResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                status_ = value;
              }
              break;
            }
            case 18: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = chunkInfo_.toBuilder();
              }
              chunkInfo_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(chunkInfo_);
                chunkInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ClientEcEncodeCompletionResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ClientEcEncodeCompletionResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<ClientEcEncodeCompletionResponse> PARSER =
        new com.google.protobuf.AbstractParser<ClientEcEncodeCompletionResponse>() {
      public ClientEcEncodeCompletionResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClientEcEncodeCompletionResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClientEcEncodeCompletionResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STATUS_FIELD_NUMBER = 1;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus status_;
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus getStatus() {
      return status_;
    }

    public static final int CHUNKINFO_FIELD_NUMBER = 2;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo chunkInfo_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    public boolean hasChunkInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo getChunkInfo() {
      return chunkInfo_;
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder getChunkInfoOrBuilder() {
      return chunkInfo_;
    }

    private void initFields() {
      status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
      chunkInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasChunkInfo()) {
        if (!getChunkInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, chunkInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, chunkInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ClientEcEncodeCompletionResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ClientEcEncodeCompletionResponse)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ClientEcEncodeCompletionResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ClientEcEncodeCompletionResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getChunkInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (chunkInfoBuilder_ == null) {
          chunkInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
        } else {
          chunkInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ClientEcEncodeCompletionResponse_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (chunkInfoBuilder_ == null) {
          result.chunkInfo_ = chunkInfo_;
        } else {
          result.chunkInfo_ = chunkInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasChunkInfo()) {
          mergeChunkInfo(other.getChunkInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStatus()) {
          
          return false;
        }
        if (hasChunkInfo()) {
          if (!getChunkInfo().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ClientEcEncodeCompletionResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus getStatus() {
        return status_;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public Builder setStatus(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo chunkInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder> chunkInfoBuilder_;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public boolean hasChunkInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo getChunkInfo() {
        if (chunkInfoBuilder_ == null) {
          return chunkInfo_;
        } else {
          return chunkInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public Builder setChunkInfo(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo value) {
        if (chunkInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          chunkInfo_ = value;
          onChanged();
        } else {
          chunkInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public Builder setChunkInfo(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder builderForValue) {
        if (chunkInfoBuilder_ == null) {
          chunkInfo_ = builderForValue.build();
          onChanged();
        } else {
          chunkInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public Builder mergeChunkInfo(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo value) {
        if (chunkInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              chunkInfo_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance()) {
            chunkInfo_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.newBuilder(chunkInfo_).mergeFrom(value).buildPartial();
          } else {
            chunkInfo_ = value;
          }
          onChanged();
        } else {
          chunkInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public Builder clearChunkInfo() {
        if (chunkInfoBuilder_ == null) {
          chunkInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
          onChanged();
        } else {
          chunkInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder getChunkInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getChunkInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder getChunkInfoOrBuilder() {
        if (chunkInfoBuilder_ != null) {
          return chunkInfoBuilder_.getMessageOrBuilder();
        } else {
          return chunkInfo_;
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder> 
          getChunkInfoFieldBuilder() {
        if (chunkInfoBuilder_ == null) {
          chunkInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder>(
                  getChunkInfo(),
                  getParentForChildren(),
                  isClean());
          chunkInfo_ = null;
        }
        return chunkInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ClientEcEncodeCompletionResponse)
    }

    static {
      defaultInstance = new ClientEcEncodeCompletionResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ClientEcEncodeCompletionResponse)
  }

  public interface ChunkQueryRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkQueryRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string chunkId = 1;</code>
     */
    boolean hasChunkId();
    /**
     * <code>required string chunkId = 1;</code>
     */
    java.lang.String getChunkId();
    /**
     * <code>required string chunkId = 1;</code>
     */
    com.google.protobuf.ByteString
        getChunkIdBytes();

    /**
     * <code>optional bool couldMiss = 2;</code>
     *
     * <pre>
     * if the chunk info not present is one of the expected valid case
     * (e.g., during geo replay)
     * </pre>
     */
    boolean hasCouldMiss();
    /**
     * <code>optional bool couldMiss = 2;</code>
     *
     * <pre>
     * if the chunk info not present is one of the expected valid case
     * (e.g., during geo replay)
     * </pre>
     */
    boolean getCouldMiss();

    /**
     * <code>optional bool isReadForDecode = 3;</code>
     *
     * <pre>
     * is this query for read remote, chunkInfo is present but chunk is in GEO_DELETING state,
     * chunk needs to be read from primary for xor decode
     * </pre>
     */
    boolean hasIsReadForDecode();
    /**
     * <code>optional bool isReadForDecode = 3;</code>
     *
     * <pre>
     * is this query for read remote, chunkInfo is present but chunk is in GEO_DELETING state,
     * chunk needs to be read from primary for xor decode
     * </pre>
     */
    boolean getIsReadForDecode();

    /**
     * <code>optional bool doBroadcast = 4;</code>
     */
    boolean hasDoBroadcast();
    /**
     * <code>optional bool doBroadcast = 4;</code>
     */
    boolean getDoBroadcast();

    /**
     * <code>optional string repGroup = 5;</code>
     */
    boolean hasRepGroup();
    /**
     * <code>optional string repGroup = 5;</code>
     */
    java.lang.String getRepGroup();
    /**
     * <code>optional string repGroup = 5;</code>
     */
    com.google.protobuf.ByteString
        getRepGroupBytes();

    /**
     * <code>optional bool isReadForSpillover = 6;</code>
     *
     * <pre>
     * DELETED chunk needs to be read from primary when check for spillover chunk
     * </pre>
     */
    boolean hasIsReadForSpillover();
    /**
     * <code>optional bool isReadForSpillover = 6;</code>
     *
     * <pre>
     * DELETED chunk needs to be read from primary when check for spillover chunk
     * </pre>
     */
    boolean getIsReadForSpillover();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkQueryRequest}
   */
  public static final class ChunkQueryRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkQueryRequest)
      ChunkQueryRequestOrBuilder {
    // Use ChunkQueryRequest.newBuilder() to construct.
    private ChunkQueryRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ChunkQueryRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ChunkQueryRequest defaultInstance;
    public static ChunkQueryRequest getDefaultInstance() {
      return defaultInstance;
    }

    public ChunkQueryRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ChunkQueryRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              chunkId_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              couldMiss_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              isReadForDecode_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              doBroadcast_ = input.readBool();
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              repGroup_ = bs;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              isReadForSpillover_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkQueryRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkQueryRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<ChunkQueryRequest> PARSER =
        new com.google.protobuf.AbstractParser<ChunkQueryRequest>() {
      public ChunkQueryRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChunkQueryRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ChunkQueryRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CHUNKID_FIELD_NUMBER = 1;
    private java.lang.Object chunkId_;
    /**
     * <code>required string chunkId = 1;</code>
     */
    public boolean hasChunkId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string chunkId = 1;</code>
     */
    public java.lang.String getChunkId() {
      java.lang.Object ref = chunkId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          chunkId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string chunkId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getChunkIdBytes() {
      java.lang.Object ref = chunkId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        chunkId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COULDMISS_FIELD_NUMBER = 2;
    private boolean couldMiss_;
    /**
     * <code>optional bool couldMiss = 2;</code>
     *
     * <pre>
     * if the chunk info not present is one of the expected valid case
     * (e.g., during geo replay)
     * </pre>
     */
    public boolean hasCouldMiss() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool couldMiss = 2;</code>
     *
     * <pre>
     * if the chunk info not present is one of the expected valid case
     * (e.g., during geo replay)
     * </pre>
     */
    public boolean getCouldMiss() {
      return couldMiss_;
    }

    public static final int ISREADFORDECODE_FIELD_NUMBER = 3;
    private boolean isReadForDecode_;
    /**
     * <code>optional bool isReadForDecode = 3;</code>
     *
     * <pre>
     * is this query for read remote, chunkInfo is present but chunk is in GEO_DELETING state,
     * chunk needs to be read from primary for xor decode
     * </pre>
     */
    public boolean hasIsReadForDecode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool isReadForDecode = 3;</code>
     *
     * <pre>
     * is this query for read remote, chunkInfo is present but chunk is in GEO_DELETING state,
     * chunk needs to be read from primary for xor decode
     * </pre>
     */
    public boolean getIsReadForDecode() {
      return isReadForDecode_;
    }

    public static final int DOBROADCAST_FIELD_NUMBER = 4;
    private boolean doBroadcast_;
    /**
     * <code>optional bool doBroadcast = 4;</code>
     */
    public boolean hasDoBroadcast() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool doBroadcast = 4;</code>
     */
    public boolean getDoBroadcast() {
      return doBroadcast_;
    }

    public static final int REPGROUP_FIELD_NUMBER = 5;
    private java.lang.Object repGroup_;
    /**
     * <code>optional string repGroup = 5;</code>
     */
    public boolean hasRepGroup() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string repGroup = 5;</code>
     */
    public java.lang.String getRepGroup() {
      java.lang.Object ref = repGroup_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          repGroup_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string repGroup = 5;</code>
     */
    public com.google.protobuf.ByteString
        getRepGroupBytes() {
      java.lang.Object ref = repGroup_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        repGroup_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ISREADFORSPILLOVER_FIELD_NUMBER = 6;
    private boolean isReadForSpillover_;
    /**
     * <code>optional bool isReadForSpillover = 6;</code>
     *
     * <pre>
     * DELETED chunk needs to be read from primary when check for spillover chunk
     * </pre>
     */
    public boolean hasIsReadForSpillover() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool isReadForSpillover = 6;</code>
     *
     * <pre>
     * DELETED chunk needs to be read from primary when check for spillover chunk
     * </pre>
     */
    public boolean getIsReadForSpillover() {
      return isReadForSpillover_;
    }

    private void initFields() {
      chunkId_ = "";
      couldMiss_ = false;
      isReadForDecode_ = false;
      doBroadcast_ = false;
      repGroup_ = "";
      isReadForSpillover_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasChunkId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getChunkIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, couldMiss_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, isReadForDecode_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, doBroadcast_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getRepGroupBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, isReadForSpillover_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getChunkIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, couldMiss_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isReadForDecode_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, doBroadcast_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getRepGroupBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, isReadForSpillover_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkQueryRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkQueryRequest)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkQueryRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkQueryRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        chunkId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        couldMiss_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        isReadForDecode_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        doBroadcast_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        repGroup_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        isReadForSpillover_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkQueryRequest_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.chunkId_ = chunkId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.couldMiss_ = couldMiss_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isReadForDecode_ = isReadForDecode_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.doBroadcast_ = doBroadcast_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.repGroup_ = repGroup_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.isReadForSpillover_ = isReadForSpillover_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest.getDefaultInstance()) return this;
        if (other.hasChunkId()) {
          bitField0_ |= 0x00000001;
          chunkId_ = other.chunkId_;
          onChanged();
        }
        if (other.hasCouldMiss()) {
          setCouldMiss(other.getCouldMiss());
        }
        if (other.hasIsReadForDecode()) {
          setIsReadForDecode(other.getIsReadForDecode());
        }
        if (other.hasDoBroadcast()) {
          setDoBroadcast(other.getDoBroadcast());
        }
        if (other.hasRepGroup()) {
          bitField0_ |= 0x00000010;
          repGroup_ = other.repGroup_;
          onChanged();
        }
        if (other.hasIsReadForSpillover()) {
          setIsReadForSpillover(other.getIsReadForSpillover());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasChunkId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object chunkId_ = "";
      /**
       * <code>required string chunkId = 1;</code>
       */
      public boolean hasChunkId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public java.lang.String getChunkId() {
        java.lang.Object ref = chunkId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            chunkId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getChunkIdBytes() {
        java.lang.Object ref = chunkId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          chunkId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder setChunkId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        chunkId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder clearChunkId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        chunkId_ = getDefaultInstance().getChunkId();
        onChanged();
        return this;
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder setChunkIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        chunkId_ = value;
        onChanged();
        return this;
      }

      private boolean couldMiss_ ;
      /**
       * <code>optional bool couldMiss = 2;</code>
       *
       * <pre>
       * if the chunk info not present is one of the expected valid case
       * (e.g., during geo replay)
       * </pre>
       */
      public boolean hasCouldMiss() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool couldMiss = 2;</code>
       *
       * <pre>
       * if the chunk info not present is one of the expected valid case
       * (e.g., during geo replay)
       * </pre>
       */
      public boolean getCouldMiss() {
        return couldMiss_;
      }
      /**
       * <code>optional bool couldMiss = 2;</code>
       *
       * <pre>
       * if the chunk info not present is one of the expected valid case
       * (e.g., during geo replay)
       * </pre>
       */
      public Builder setCouldMiss(boolean value) {
        bitField0_ |= 0x00000002;
        couldMiss_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool couldMiss = 2;</code>
       *
       * <pre>
       * if the chunk info not present is one of the expected valid case
       * (e.g., during geo replay)
       * </pre>
       */
      public Builder clearCouldMiss() {
        bitField0_ = (bitField0_ & ~0x00000002);
        couldMiss_ = false;
        onChanged();
        return this;
      }

      private boolean isReadForDecode_ ;
      /**
       * <code>optional bool isReadForDecode = 3;</code>
       *
       * <pre>
       * is this query for read remote, chunkInfo is present but chunk is in GEO_DELETING state,
       * chunk needs to be read from primary for xor decode
       * </pre>
       */
      public boolean hasIsReadForDecode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool isReadForDecode = 3;</code>
       *
       * <pre>
       * is this query for read remote, chunkInfo is present but chunk is in GEO_DELETING state,
       * chunk needs to be read from primary for xor decode
       * </pre>
       */
      public boolean getIsReadForDecode() {
        return isReadForDecode_;
      }
      /**
       * <code>optional bool isReadForDecode = 3;</code>
       *
       * <pre>
       * is this query for read remote, chunkInfo is present but chunk is in GEO_DELETING state,
       * chunk needs to be read from primary for xor decode
       * </pre>
       */
      public Builder setIsReadForDecode(boolean value) {
        bitField0_ |= 0x00000004;
        isReadForDecode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isReadForDecode = 3;</code>
       *
       * <pre>
       * is this query for read remote, chunkInfo is present but chunk is in GEO_DELETING state,
       * chunk needs to be read from primary for xor decode
       * </pre>
       */
      public Builder clearIsReadForDecode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isReadForDecode_ = false;
        onChanged();
        return this;
      }

      private boolean doBroadcast_ ;
      /**
       * <code>optional bool doBroadcast = 4;</code>
       */
      public boolean hasDoBroadcast() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool doBroadcast = 4;</code>
       */
      public boolean getDoBroadcast() {
        return doBroadcast_;
      }
      /**
       * <code>optional bool doBroadcast = 4;</code>
       */
      public Builder setDoBroadcast(boolean value) {
        bitField0_ |= 0x00000008;
        doBroadcast_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool doBroadcast = 4;</code>
       */
      public Builder clearDoBroadcast() {
        bitField0_ = (bitField0_ & ~0x00000008);
        doBroadcast_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object repGroup_ = "";
      /**
       * <code>optional string repGroup = 5;</code>
       */
      public boolean hasRepGroup() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string repGroup = 5;</code>
       */
      public java.lang.String getRepGroup() {
        java.lang.Object ref = repGroup_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            repGroup_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string repGroup = 5;</code>
       */
      public com.google.protobuf.ByteString
          getRepGroupBytes() {
        java.lang.Object ref = repGroup_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          repGroup_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string repGroup = 5;</code>
       */
      public Builder setRepGroup(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        repGroup_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string repGroup = 5;</code>
       */
      public Builder clearRepGroup() {
        bitField0_ = (bitField0_ & ~0x00000010);
        repGroup_ = getDefaultInstance().getRepGroup();
        onChanged();
        return this;
      }
      /**
       * <code>optional string repGroup = 5;</code>
       */
      public Builder setRepGroupBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        repGroup_ = value;
        onChanged();
        return this;
      }

      private boolean isReadForSpillover_ ;
      /**
       * <code>optional bool isReadForSpillover = 6;</code>
       *
       * <pre>
       * DELETED chunk needs to be read from primary when check for spillover chunk
       * </pre>
       */
      public boolean hasIsReadForSpillover() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool isReadForSpillover = 6;</code>
       *
       * <pre>
       * DELETED chunk needs to be read from primary when check for spillover chunk
       * </pre>
       */
      public boolean getIsReadForSpillover() {
        return isReadForSpillover_;
      }
      /**
       * <code>optional bool isReadForSpillover = 6;</code>
       *
       * <pre>
       * DELETED chunk needs to be read from primary when check for spillover chunk
       * </pre>
       */
      public Builder setIsReadForSpillover(boolean value) {
        bitField0_ |= 0x00000020;
        isReadForSpillover_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isReadForSpillover = 6;</code>
       *
       * <pre>
       * DELETED chunk needs to be read from primary when check for spillover chunk
       * </pre>
       */
      public Builder clearIsReadForSpillover() {
        bitField0_ = (bitField0_ & ~0x00000020);
        isReadForSpillover_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkQueryRequest)
    }

    static {
      defaultInstance = new ChunkQueryRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkQueryRequest)
  }

  public interface ChunkQueryResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkQueryResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    boolean hasStatus();
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus getStatus();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    boolean hasChunkInfo();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo getChunkInfo();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder getChunkInfoOrBuilder();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkQueryResponse}
   */
  public static final class ChunkQueryResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkQueryResponse)
      ChunkQueryResponseOrBuilder {
    // Use ChunkQueryResponse.newBuilder() to construct.
    private ChunkQueryResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ChunkQueryResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ChunkQueryResponse defaultInstance;
    public static ChunkQueryResponse getDefaultInstance() {
      return defaultInstance;
    }

    public ChunkQueryResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ChunkQueryResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                status_ = value;
              }
              break;
            }
            case 18: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = chunkInfo_.toBuilder();
              }
              chunkInfo_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(chunkInfo_);
                chunkInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkQueryResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkQueryResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<ChunkQueryResponse> PARSER =
        new com.google.protobuf.AbstractParser<ChunkQueryResponse>() {
      public ChunkQueryResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChunkQueryResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ChunkQueryResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STATUS_FIELD_NUMBER = 1;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus status_;
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus getStatus() {
      return status_;
    }

    public static final int CHUNKINFO_FIELD_NUMBER = 2;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo chunkInfo_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    public boolean hasChunkInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo getChunkInfo() {
      return chunkInfo_;
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder getChunkInfoOrBuilder() {
      return chunkInfo_;
    }

    private void initFields() {
      status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
      chunkInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasChunkInfo()) {
        if (!getChunkInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, chunkInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, chunkInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkQueryResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkQueryResponse)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkQueryResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkQueryResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getChunkInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (chunkInfoBuilder_ == null) {
          chunkInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
        } else {
          chunkInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkQueryResponse_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (chunkInfoBuilder_ == null) {
          result.chunkInfo_ = chunkInfo_;
        } else {
          result.chunkInfo_ = chunkInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasChunkInfo()) {
          mergeChunkInfo(other.getChunkInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStatus()) {
          
          return false;
        }
        if (hasChunkInfo()) {
          if (!getChunkInfo().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkQueryResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus getStatus() {
        return status_;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public Builder setStatus(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo chunkInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder> chunkInfoBuilder_;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public boolean hasChunkInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo getChunkInfo() {
        if (chunkInfoBuilder_ == null) {
          return chunkInfo_;
        } else {
          return chunkInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public Builder setChunkInfo(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo value) {
        if (chunkInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          chunkInfo_ = value;
          onChanged();
        } else {
          chunkInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public Builder setChunkInfo(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder builderForValue) {
        if (chunkInfoBuilder_ == null) {
          chunkInfo_ = builderForValue.build();
          onChanged();
        } else {
          chunkInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public Builder mergeChunkInfo(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo value) {
        if (chunkInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              chunkInfo_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance()) {
            chunkInfo_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.newBuilder(chunkInfo_).mergeFrom(value).buildPartial();
          } else {
            chunkInfo_ = value;
          }
          onChanged();
        } else {
          chunkInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public Builder clearChunkInfo() {
        if (chunkInfoBuilder_ == null) {
          chunkInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
          onChanged();
        } else {
          chunkInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder getChunkInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getChunkInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder getChunkInfoOrBuilder() {
        if (chunkInfoBuilder_ != null) {
          return chunkInfoBuilder_.getMessageOrBuilder();
        } else {
          return chunkInfo_;
        }
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder> 
          getChunkInfoFieldBuilder() {
        if (chunkInfoBuilder_ == null) {
          chunkInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder>(
                  getChunkInfo(),
                  getParentForChildren(),
                  isClean());
          chunkInfo_ = null;
        }
        return chunkInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkQueryResponse)
    }

    static {
      defaultInstance = new ChunkQueryResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkQueryResponse)
  }

  public interface ChunkSealLeaseExtendRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealLeaseExtendRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string chunkId = 1;</code>
     */
    boolean hasChunkId();
    /**
     * <code>required string chunkId = 1;</code>
     */
    java.lang.String getChunkId();
    /**
     * <code>required string chunkId = 1;</code>
     */
    com.google.protobuf.ByteString
        getChunkIdBytes();

    /**
     * <code>optional int32 lastKnownLength = 2;</code>
     */
    boolean hasLastKnownLength();
    /**
     * <code>optional int32 lastKnownLength = 2;</code>
     */
    int getLastKnownLength();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealLeaseExtendRequest}
   */
  public static final class ChunkSealLeaseExtendRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealLeaseExtendRequest)
      ChunkSealLeaseExtendRequestOrBuilder {
    // Use ChunkSealLeaseExtendRequest.newBuilder() to construct.
    private ChunkSealLeaseExtendRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ChunkSealLeaseExtendRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ChunkSealLeaseExtendRequest defaultInstance;
    public static ChunkSealLeaseExtendRequest getDefaultInstance() {
      return defaultInstance;
    }

    public ChunkSealLeaseExtendRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ChunkSealLeaseExtendRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              chunkId_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              lastKnownLength_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealLeaseExtendRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealLeaseExtendRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<ChunkSealLeaseExtendRequest> PARSER =
        new com.google.protobuf.AbstractParser<ChunkSealLeaseExtendRequest>() {
      public ChunkSealLeaseExtendRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChunkSealLeaseExtendRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ChunkSealLeaseExtendRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CHUNKID_FIELD_NUMBER = 1;
    private java.lang.Object chunkId_;
    /**
     * <code>required string chunkId = 1;</code>
     */
    public boolean hasChunkId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string chunkId = 1;</code>
     */
    public java.lang.String getChunkId() {
      java.lang.Object ref = chunkId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          chunkId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string chunkId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getChunkIdBytes() {
      java.lang.Object ref = chunkId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        chunkId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LASTKNOWNLENGTH_FIELD_NUMBER = 2;
    private int lastKnownLength_;
    /**
     * <code>optional int32 lastKnownLength = 2;</code>
     */
    public boolean hasLastKnownLength() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 lastKnownLength = 2;</code>
     */
    public int getLastKnownLength() {
      return lastKnownLength_;
    }

    private void initFields() {
      chunkId_ = "";
      lastKnownLength_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasChunkId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getChunkIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, lastKnownLength_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getChunkIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, lastKnownLength_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealLeaseExtendRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealLeaseExtendRequest)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealLeaseExtendRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealLeaseExtendRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        chunkId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        lastKnownLength_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealLeaseExtendRequest_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.chunkId_ = chunkId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.lastKnownLength_ = lastKnownLength_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest.getDefaultInstance()) return this;
        if (other.hasChunkId()) {
          bitField0_ |= 0x00000001;
          chunkId_ = other.chunkId_;
          onChanged();
        }
        if (other.hasLastKnownLength()) {
          setLastKnownLength(other.getLastKnownLength());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasChunkId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object chunkId_ = "";
      /**
       * <code>required string chunkId = 1;</code>
       */
      public boolean hasChunkId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public java.lang.String getChunkId() {
        java.lang.Object ref = chunkId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            chunkId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getChunkIdBytes() {
        java.lang.Object ref = chunkId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          chunkId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder setChunkId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        chunkId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder clearChunkId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        chunkId_ = getDefaultInstance().getChunkId();
        onChanged();
        return this;
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder setChunkIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        chunkId_ = value;
        onChanged();
        return this;
      }

      private int lastKnownLength_ ;
      /**
       * <code>optional int32 lastKnownLength = 2;</code>
       */
      public boolean hasLastKnownLength() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 lastKnownLength = 2;</code>
       */
      public int getLastKnownLength() {
        return lastKnownLength_;
      }
      /**
       * <code>optional int32 lastKnownLength = 2;</code>
       */
      public Builder setLastKnownLength(int value) {
        bitField0_ |= 0x00000002;
        lastKnownLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lastKnownLength = 2;</code>
       */
      public Builder clearLastKnownLength() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lastKnownLength_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealLeaseExtendRequest)
    }

    static {
      defaultInstance = new ChunkSealLeaseExtendRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealLeaseExtendRequest)
  }

  public interface ChunkSealLeaseExtendResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealLeaseExtendResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1;</code>
     */
    boolean hasStatus();
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus getStatus();

    /**
     * <code>optional int32 sealedLength = 2;</code>
     *
     * <pre>
     * if the chunk is already sealed, give the sealed length
     * </pre>
     */
    boolean hasSealedLength();
    /**
     * <code>optional int32 sealedLength = 2;</code>
     *
     * <pre>
     * if the chunk is already sealed, give the sealed length
     * </pre>
     */
    int getSealedLength();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealLeaseExtendResponse}
   */
  public static final class ChunkSealLeaseExtendResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealLeaseExtendResponse)
      ChunkSealLeaseExtendResponseOrBuilder {
    // Use ChunkSealLeaseExtendResponse.newBuilder() to construct.
    private ChunkSealLeaseExtendResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ChunkSealLeaseExtendResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ChunkSealLeaseExtendResponse defaultInstance;
    public static ChunkSealLeaseExtendResponse getDefaultInstance() {
      return defaultInstance;
    }

    public ChunkSealLeaseExtendResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ChunkSealLeaseExtendResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                status_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              sealedLength_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealLeaseExtendResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealLeaseExtendResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<ChunkSealLeaseExtendResponse> PARSER =
        new com.google.protobuf.AbstractParser<ChunkSealLeaseExtendResponse>() {
      public ChunkSealLeaseExtendResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChunkSealLeaseExtendResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ChunkSealLeaseExtendResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STATUS_FIELD_NUMBER = 1;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus status_;
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus getStatus() {
      return status_;
    }

    public static final int SEALEDLENGTH_FIELD_NUMBER = 2;
    private int sealedLength_;
    /**
     * <code>optional int32 sealedLength = 2;</code>
     *
     * <pre>
     * if the chunk is already sealed, give the sealed length
     * </pre>
     */
    public boolean hasSealedLength() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 sealedLength = 2;</code>
     *
     * <pre>
     * if the chunk is already sealed, give the sealed length
     * </pre>
     */
    public int getSealedLength() {
      return sealedLength_;
    }

    private void initFields() {
      status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
      sealedLength_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, sealedLength_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, sealedLength_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealLeaseExtendResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealLeaseExtendResponse)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealLeaseExtendResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealLeaseExtendResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        sealedLength_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealLeaseExtendResponse_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sealedLength_ = sealedLength_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasSealedLength()) {
          setSealedLength(other.getSealedLength());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStatus()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkSealLeaseExtendResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus getStatus() {
        return status_;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1;</code>
       */
      public Builder setStatus(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkOperationStatus status = 1;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkOperationStatus.SUCCESS;
        onChanged();
        return this;
      }

      private int sealedLength_ ;
      /**
       * <code>optional int32 sealedLength = 2;</code>
       *
       * <pre>
       * if the chunk is already sealed, give the sealed length
       * </pre>
       */
      public boolean hasSealedLength() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 sealedLength = 2;</code>
       *
       * <pre>
       * if the chunk is already sealed, give the sealed length
       * </pre>
       */
      public int getSealedLength() {
        return sealedLength_;
      }
      /**
       * <code>optional int32 sealedLength = 2;</code>
       *
       * <pre>
       * if the chunk is already sealed, give the sealed length
       * </pre>
       */
      public Builder setSealedLength(int value) {
        bitField0_ |= 0x00000002;
        sealedLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sealedLength = 2;</code>
       *
       * <pre>
       * if the chunk is already sealed, give the sealed length
       * </pre>
       */
      public Builder clearSealedLength() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sealedLength_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealLeaseExtendResponse)
    }

    static {
      defaultInstance = new ChunkSealLeaseExtendResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkSealLeaseExtendResponse)
  }

  public interface ChunkUpdateRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkUpdateRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string chunkId = 1;</code>
     */
    boolean hasChunkId();
    /**
     * <code>required string chunkId = 1;</code>
     */
    java.lang.String getChunkId();
    /**
     * <code>required string chunkId = 1;</code>
     */
    com.google.protobuf.ByteString
        getChunkIdBytes();

    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    boolean hasChunkInfo();
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo getChunkInfo();
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder getChunkInfoOrBuilder();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkUpdateRequest}
   */
  public static final class ChunkUpdateRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkUpdateRequest)
      ChunkUpdateRequestOrBuilder {
    // Use ChunkUpdateRequest.newBuilder() to construct.
    private ChunkUpdateRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ChunkUpdateRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ChunkUpdateRequest defaultInstance;
    public static ChunkUpdateRequest getDefaultInstance() {
      return defaultInstance;
    }

    public ChunkUpdateRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ChunkUpdateRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              chunkId_ = bs;
              break;
            }
            case 18: {
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = chunkInfo_.toBuilder();
              }
              chunkInfo_ = input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(chunkInfo_);
                chunkInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkUpdateRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkUpdateRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<ChunkUpdateRequest> PARSER =
        new com.google.protobuf.AbstractParser<ChunkUpdateRequest>() {
      public ChunkUpdateRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChunkUpdateRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ChunkUpdateRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CHUNKID_FIELD_NUMBER = 1;
    private java.lang.Object chunkId_;
    /**
     * <code>required string chunkId = 1;</code>
     */
    public boolean hasChunkId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string chunkId = 1;</code>
     */
    public java.lang.String getChunkId() {
      java.lang.Object ref = chunkId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          chunkId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string chunkId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getChunkIdBytes() {
      java.lang.Object ref = chunkId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        chunkId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHUNKINFO_FIELD_NUMBER = 2;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo chunkInfo_;
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    public boolean hasChunkInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo getChunkInfo() {
      return chunkInfo_;
    }
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder getChunkInfoOrBuilder() {
      return chunkInfo_;
    }

    private void initFields() {
      chunkId_ = "";
      chunkInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasChunkId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChunkInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getChunkInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getChunkIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, chunkInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getChunkIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, chunkInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkUpdateRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkUpdateRequest)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkUpdateRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkUpdateRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getChunkInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        chunkId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (chunkInfoBuilder_ == null) {
          chunkInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
        } else {
          chunkInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkUpdateRequest_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.chunkId_ = chunkId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (chunkInfoBuilder_ == null) {
          result.chunkInfo_ = chunkInfo_;
        } else {
          result.chunkInfo_ = chunkInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest.getDefaultInstance()) return this;
        if (other.hasChunkId()) {
          bitField0_ |= 0x00000001;
          chunkId_ = other.chunkId_;
          onChanged();
        }
        if (other.hasChunkInfo()) {
          mergeChunkInfo(other.getChunkInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasChunkId()) {
          
          return false;
        }
        if (!hasChunkInfo()) {
          
          return false;
        }
        if (!getChunkInfo().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkUpdateRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object chunkId_ = "";
      /**
       * <code>required string chunkId = 1;</code>
       */
      public boolean hasChunkId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public java.lang.String getChunkId() {
        java.lang.Object ref = chunkId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            chunkId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getChunkIdBytes() {
        java.lang.Object ref = chunkId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          chunkId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder setChunkId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        chunkId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder clearChunkId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        chunkId_ = getDefaultInstance().getChunkId();
        onChanged();
        return this;
      }
      /**
       * <code>required string chunkId = 1;</code>
       */
      public Builder setChunkIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        chunkId_ = value;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo chunkInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder> chunkInfoBuilder_;
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public boolean hasChunkInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo getChunkInfo() {
        if (chunkInfoBuilder_ == null) {
          return chunkInfo_;
        } else {
          return chunkInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public Builder setChunkInfo(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo value) {
        if (chunkInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          chunkInfo_ = value;
          onChanged();
        } else {
          chunkInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public Builder setChunkInfo(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder builderForValue) {
        if (chunkInfoBuilder_ == null) {
          chunkInfo_ = builderForValue.build();
          onChanged();
        } else {
          chunkInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public Builder mergeChunkInfo(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo value) {
        if (chunkInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              chunkInfo_ != io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance()) {
            chunkInfo_ =
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.newBuilder(chunkInfo_).mergeFrom(value).buildPartial();
          } else {
            chunkInfo_ = value;
          }
          onChanged();
        } else {
          chunkInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public Builder clearChunkInfo() {
        if (chunkInfoBuilder_ == null) {
          chunkInfo_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.getDefaultInstance();
          onChanged();
        } else {
          chunkInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder getChunkInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getChunkInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder getChunkInfoOrBuilder() {
        if (chunkInfoBuilder_ != null) {
          return chunkInfoBuilder_.getMessageOrBuilder();
        } else {
          return chunkInfo_;
        }
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkInfo chunkInfo = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder> 
          getChunkInfoFieldBuilder() {
        if (chunkInfoBuilder_ == null) {
          chunkInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfo.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.CmMessage.ChunkInfoOrBuilder>(
                  getChunkInfo(),
                  getParentForChildren(),
                  isClean());
          chunkInfo_ = null;
        }
        return chunkInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkUpdateRequest)
    }

    static {
      defaultInstance = new ChunkUpdateRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.cm.ChunkUpdateRequest)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_Uuid_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_Uuid_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SecondaryPair_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SecondaryPair_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_EcCodeScheme_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_EcCodeScheme_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SSLocation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SSLocation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_NFSLocation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_NFSLocation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_OBLocation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_OBLocation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SystemUnderTransformationLocation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SystemUnderTransformationLocation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SegmentInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SegmentInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeMapWithPairChunk_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeMapWithPairChunk_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ShippingRange_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ShippingRange_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ShippingProgress_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ShippingProgress_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_GeoProgress_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_GeoProgress_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_Copy_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_Copy_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeBasedChunkInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeBasedChunkInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_StoragePolicy_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_StoragePolicy_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkCreateRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkCreateRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ReplaceBlockRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ReplaceBlockRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ReplaceBlockResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ReplaceBlockResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_IngestSystemUnderTransformationRepoChunkRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_IngestSystemUnderTransformationRepoChunkRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkCreateResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkCreateResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkDeleteRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkDeleteRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkDeleteResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkDeleteResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkObjectDeleteRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkObjectDeleteRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkObjectDeleteResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkObjectDeleteResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ClientEcEncodeCompletionRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ClientEcEncodeCompletionRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ClientEcEncodeCompletionResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ClientEcEncodeCompletionResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkQueryRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkQueryRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkQueryResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkQueryResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealLeaseExtendRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealLeaseExtendRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealLeaseExtendResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealLeaseExtendResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkUpdateRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkUpdateRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013chunk.proto\022Aio.pravega.segmentstore.s" +
      "torage.impl.chunkstream.storageos.rpc.cm" +
      "\"+\n\004Uuid\022\021\n\thighBytes\030\001 \001(\006\022\020\n\010lowBytes\030" +
      "\002 \001(\006\"\226\001\n\rSecondaryPair\022\021\n\tsecondary\030\001 \001" +
      "(\t\022\022\n\nreplicated\030\002 \002(\010\022^\n\rsecondaryUuid\030" +
      "\003 \001(\0132G.io.pravega.segmentstore.storage." +
      "impl.chunkstream.storageos.rpc.cm.Uuid\"F" +
      "\n\014EcCodeScheme\022\032\n\022numberOfDataBlocks\030\001 \002" +
      "(\005\022\032\n\022numberOfCodeBlocks\030\002 \002(\005\"Z\n\tRangeI" +
      "nfo\022\023\n\013chunkOffset\030\001 \002(\005\022\026\n\016chunkEndOffs",
      "et\030\002 \002(\005\022\020\n\010filename\030\003 \002(\t\022\016\n\006offset\030\004 \002" +
      "(\003\"\336\004\n\nSSLocation\022\014\n\004ssId\030\001 \001(\t\022\023\n\013parti" +
      "tionId\030\002 \001(\t\022\020\n\010filename\030\003 \001(\t\022\016\n\006offset" +
      "\030\004 \001(\003\022^\n\006status\030\005 \002(\0162N.io.pravega.segm" +
      "entstore.storage.impl.chunkstream.storag" +
      "eos.rpc.cm.BlockStatus\022\020\n\010statusSn\030\006 \002(\003" +
      "\022q\n\016recoveryStatus\030\007 \001(\0162Y.io.pravega.se" +
      "gmentstore.storage.impl.chunkstream.stor" +
      "ageos.rpc.cm.LocationRecoveryStatus\022\\\n\006r" +
      "anges\030\010 \003(\0132L.io.pravega.segmentstore.st",
      "orage.impl.chunkstream.storageos.rpc.cm." +
      "RangeInfo\022\013\n\003tag\030\t \001(\003\022Y\n\010ssIdUuid\030\n \001(\013" +
      "2G.io.pravega.segmentstore.storage.impl." +
      "chunkstream.storageos.rpc.cm.Uuid\022`\n\017par" +
      "titionIdUuid\030\013 \001(\0132G.io.pravega.segments" +
      "tore.storage.impl.chunkstream.storageos." +
      "rpc.cm.Uuid\"A\n\013NFSLocation\022\020\n\010deviceId\030\001" +
      " \002(\t\022\020\n\010filename\030\002 \002(\t\022\016\n\006offset\030\003 \002(\003\"0" +
      "\n\nOBLocation\022\020\n\010deviceId\030\001 \002(\t\022\020\n\010object" +
      "Id\030\002 \002(\t\"N\n!SystemUnderTransformationLoc",
      "ation\022\030\n\020transformationId\030\001 \002(\t\022\017\n\007chunk" +
      "Id\030\002 \002(\t\"\210\007\n\013SegmentInfo\022e\n\014locationType" +
      "\030\001 \002(\0162O.io.pravega.segmentstore.storage" +
      ".impl.chunkstream.storageos.rpc.cm.Locat" +
      "ionType\022a\n\nssLocation\030\002 \001(\0132M.io.pravega" +
      ".segmentstore.storage.impl.chunkstream.s" +
      "torageos.rpc.cm.SSLocation\022c\n\013nfsLocatio" +
      "n\030\003 \001(\0132N.io.pravega.segmentstore.storag" +
      "e.impl.chunkstream.storageos.rpc.cm.NFSL" +
      "ocation\022a\n\nobLocation\030\004 \001(\0132M.io.pravega",
      ".segmentstore.storage.impl.chunkstream.s" +
      "torageos.rpc.cm.OBLocation\022\020\n\010checksum\030\005" +
      " \001(\t\022\016\n\006offset\030\006 \001(\005\022\021\n\tendOffset\030\007 \001(\005\022" +
      "\020\n\010sequence\030\010 \001(\005\022\025\n\rvirtualOffset\030\t \001(\005" +
      "\022\030\n\020virtualEndOffset\030\n \001(\005\022j\n\023migratingS" +
      "sLocation\030\013 \001(\0132M.io.pravega.segmentstor" +
      "e.storage.impl.chunkstream.storageos.rpc" +
      ".cm.SSLocation\022\031\n\021migrateSourceSsId\030\014 \001(" +
      "\t\022\027\n\017migrateSequence\030\r \001(\003\022\"\n\032migrationB" +
      "lockSafeFreeTime\030\016 \001(\003\022\031\n\021migrationCheck",
      "sum\030\017 \001(\t\022\217\001\n!systemUnderTransformationL" +
      "ocation\030d \001(\0132d.io.pravega.segmentstore." +
      "storage.impl.chunkstream.storageos.rpc.c" +
      "m.SystemUnderTransformationLocation\"\204\001\n\025" +
      "RangeMapWithPairChunk\022\023\n\013startOffset\030\001 \002" +
      "(\003\022\021\n\tendOffset\030\002 \002(\003\022\023\n\013pairChunkId\030\003 \002" +
      "(\t\022\027\n\017pairStartOffset\030\004 \002(\003\022\025\n\rpairEndOf" +
      "fset\030\005 \002(\003\"\232\002\n\rShippingRange\022\023\n\013startOff" +
      "set\030\001 \002(\003\022\021\n\tendOffset\030\002 \002(\003\022a\n\006status\030\003" +
      " \002(\0162Q.io.pravega.segmentstore.storage.i",
      "mpl.chunkstream.storageos.rpc.cm.Shippin" +
      "gStatus\022l\n\nrangePairs\030\004 \003(\0132X.io.pravega" +
      ".segmentstore.storage.impl.chunkstream.s" +
      "torageos.rpc.cm.RangeMapWithPairChunk\022\020\n" +
      "\010checksum\030\005 \001(\005\"\257\002\n\020ShippingProgress\022\017\n\007" +
      "version\030\001 \002(\005\022`\n\006ranges\030\002 \003(\0132P.io.prave" +
      "ga.segmentstore.storage.impl.chunkstream" +
      ".storageos.rpc.cm.ShippingRange\022\033\n\023pairS" +
      "hippedChunkIds\030\003 \003(\t\022#\n\033pairShippedChunk" +
      "GarbageBits\030\004 \003(\003\022\034\n\024pairShippingChunkId",
      "s\030\005 \003(\t\022$\n\034pairShippingChunkGarbageBits\030" +
      "\006 \003(\003\022\"\n\032currentPairShippingChunkId\030\007 \001(" +
      "\t\"\210\001\n\013GeoProgress\022\022\n\ntargetZone\030\001 \002(\t\022e\n" +
      "\010progress\030\003 \001(\0132S.io.pravega.segmentstor" +
      "e.storage.impl.chunkstream.storageos.rpc" +
      ".cm.ShippingProgress\"\226\004\n\004Copy\022\014\n\004isEc\030\001 " +
      "\002(\010\022`\n\010segments\030\002 \003(\0132N.io.pravega.segme" +
      "ntstore.storage.impl.chunkstream.storage" +
      "os.rpc.cm.SegmentInfo\022j\n\010ecStatus\030\003 \001(\0162" +
      "K.io.pravega.segmentstore.storage.impl.c",
      "hunkstream.storageos.rpc.cm.EcStatus:\013NO" +
      "T_STARTED\022e\n\014ecCodeScheme\030\004 \001(\0132O.io.pra" +
      "vega.segmentstore.storage.impl.chunkstre" +
      "am.storageos.rpc.cm.EcCodeScheme\022\024\n\014ecRe" +
      "tryCount\030\005 \001(\005\022!\n\031ecEncodePaddingToCapac" +
      "ity\030\006 \001(\010\022\023\n\013ecBlockSize\030\007 \001(\005\022\035\n\025isClie" +
      "ntCreatedEcCopy\030\010 \001(\010\022\"\n\023isEcEncodedByCl" +
      "ient\030\t \001(\010:\005false\022$\n\034isEcCopyFindSealLen" +
      "gthFailed\030\n \001(\010\022\024\n\014hasRedundant\030\013 \001(\010\"\217\002" +
      "\n\023RangeBasedChunkInfo\022\023\n\013startOffset\030\001 \002",
      "(\005\022\021\n\tendOffset\030\002 \002(\005\022Z\n\004type\030\003 \002(\0162L.io" +
      ".pravega.segmentstore.storage.impl.chunk" +
      "stream.storageos.rpc.cm.ChunkType\022\023\n\013par" +
      "ityChunk\030\004 \001(\t\022\024\n\014encodedChunk\030\005 \002(\t\022\031\n\021" +
      "targetStartOffset\030\006 \002(\005\022\027\n\017targetEndOffs" +
      "et\030\007 \002(\005\022\025\n\rvirtualOffset\030\010 \001(\005\"\347\027\n\tChun" +
      "kInfo\022^\n\006status\030\001 \002(\0162N.io.pravega.segme" +
      "ntstore.storage.impl.chunkstream.storage" +
      "os.rpc.cm.ChunkStatus\022b\n\010dataType\030\002 \002(\0162" +
      "P.io.pravega.segmentstore.storage.impl.c",
      "hunkstream.storageos.rpc.cm.ChunkDataTyp" +
      "e\022Z\n\004type\030\003 \002(\0162L.io.pravega.segmentstor" +
      "e.storage.impl.chunkstream.storageos.rpc" +
      ".cm.ChunkType\022\020\n\010repGroup\030\004 \001(\t\022\017\n\007prima" +
      "ry\030\005 \001(\t\022e\n\013secondaries\030\006 \003(\0132P.io.prave" +
      "ga.segmentstore.storage.impl.chunkstream" +
      ".storageos.rpc.cm.SecondaryPair\022\023\n\013parit" +
      "yChunk\030\007 \001(\t\022\025\n\rencodedChunks\030\010 \003(\t\022W\n\006c" +
      "opies\030\t \003(\0132G.io.pravega.segmentstore.st" +
      "orage.impl.chunkstream.storageos.rpc.cm.",
      "Copy\022\020\n\010capacity\030\n \001(\005\022\024\n\014sealedLength\030\013" +
      " \001(\005\022\024\n\014autoSealTime\030\014 \001(\003\022\022\n\nsealedTime" +
      "\030\r \001(\003\022\023\n\013isEcEncoded\030\016 \001(\010\022\022\n\nshouldSea" +
      "l\030\017 \001(\010\022\026\n\016sequenceNumber\030\020 \002(\003\022\"\n\032minNo" +
      "tSealedSequenceNumber\030\021 \002(\003\022\020\n\010checksum\030" +
      "\022 \001(\t\022\\\n\006shadow\030\023 \001(\0132L.io.pravega.segme" +
      "ntstore.storage.impl.chunkstream.storage" +
      "os.rpc.cm.ChunkInfo\022\024\n\014isEcRetiring\030\024 \001(" +
      "\010\022\022\n\nskipRepoGc\030\025 \001(\010\022 \n\030noBlockLevelVer" +
      "ification\030\026 \001(\010\022\026\n\016lastAccessTime\030\027 \001(\003\022",
      "\027\n\017lastKnownLength\030\030 \001(\005\022g\n\rrepoChunkTyp" +
      "e\030\031 \001(\0162P.io.pravega.segmentstore.storag" +
      "e.impl.chunkstream.storageos.rpc.cm.Repo" +
      "ChunkType\022b\n\nshadowCopy\030\032 \001(\0132N.io.prave" +
      "ga.segmentstore.storage.impl.chunkstream" +
      ".storageos.rpc.cm.SegmentInfo\022Z\n\tgeoCopi" +
      "es\030\033 \003(\0132G.io.pravega.segmentstore.stora" +
      "ge.impl.chunkstream.storageos.rpc.cm.Cop" +
      "y\022\024\n\014geoTrackTime\030\034 \001(\004\022c\n\013geoProgress\030\035" +
      " \003(\0132N.io.pravega.segmentstore.storage.i",
      "mpl.chunkstream.storageos.rpc.cm.GeoProg" +
      "ress\022\027\n\017originalPrimary\030\036 \001(\t\022\023\n\013deleted" +
      "Time\030\037 \001(\003\022h\n\013customState\030  \001(\0162S.io.pra" +
      "vega.segmentstore.storage.impl.chunkstre" +
      "am.storageos.rpc.cm.ChunkCustomState\022\024\n\014" +
      "failoverZone\030! \001(\t\022\021\n\tisGCReady\030\" \001(\010\022\017\n" +
      "\007dtTypes\030# \003(\t\022\025\n\ralignmentSize\030$ \001(\005\022^\n" +
      "\rencodedCopies\030% \003(\0132G.io.pravega.segmen" +
      "tstore.storage.impl.chunkstream.storageo" +
      "s.rpc.cm.Copy\022 \n\030checksumForEncodedCopie",
      "s\030& \001(\005\022\033\n\023usingXorGeoShipping\030\' \001(\010\022\030\n\020" +
      "freeShadowBlocks\030( \001(\010\022q\n\021chunkInfoByRan" +
      "ges\0302 \003(\0132V.io.pravega.segmentstore.stor" +
      "age.impl.chunkstream.storageos.rpc.cm.Ra" +
      "ngeBasedChunkInfo\022\033\n\023pendingEncodeChunks" +
      "\0303 \003(\t\022\031\n\021sealingInProgress\0304 \001(\010\022\033\n\023eve" +
      "rTryRemoveTypeII\0305 \001(\010\022\022\n\ncreateTime\0306 \001" +
      "(\003\022\036\n\026isGcVerificationNeeded\0307 \001(\010\022\025\n\ris" +
      "EcRedundant\0308 \001(\010\022]\n\014repGroupUuid\0309 \001(\0132" +
      "G.io.pravega.segmentstore.storage.impl.c",
      "hunkstream.storageos.rpc.cm.Uuid\022\\\n\013prim" +
      "aryUuid\030: \001(\0132G.io.pravega.segmentstore." +
      "storage.impl.chunkstream.storageos.rpc.c" +
      "m.Uuid\022`\n\017parityChunkUuid\030; \001(\0132G.io.pra" +
      "vega.segmentstore.storage.impl.chunkstre" +
      "am.storageos.rpc.cm.Uuid\022\"\n\032cmPendingFor" +
      "FreeSpaceStats\030< \001(\010\022\033\n\023partialSRCopiedD" +
      "ata\030= \001(\003\022z\n\022bTreeChunkDataType\030> \001(\0162U." +
      "io.pravega.segmentstore.storage.impl.chu" +
      "nkstream.storageos.rpc.cm.BTreeChunkData",
      "Type:\007GENERAL\022\023\n\013isPageTable\030? \001(\010\022\022\n\nsh" +
      "ouldShip\030@ \001(\010\022#\n\033maxKnownJournalReplayL" +
      "ength\030A \001(\005\022\r\n\005epoch\030B \001(\t\022\031\n\021maxWriteBl" +
      "ockSize\030C \001(\005\022g\n\rstoragePolicy\030D \001(\0132P.i" +
      "o.pravega.segmentstore.storage.impl.chun" +
      "kstream.storageos.rpc.cm.StoragePolicy\022\037" +
      "\n\027generatedSRPrecheckTask\030E \001(\010\022Y\n\006sourc" +
      "e\030F \001(\0162I.io.pravega.segmentstore.storag" +
      "e.impl.chunkstream.storageos.rpc.cm.Sour" +
      "ce\022#\n\033everForceCheckedReclaimable\030G \001(\010\022",
      "\024\n\014dataRepoFree\030H \001(\005\022\030\n\020indexGranularit" +
      "y\030I \001(\005\022\023\n\013originalKey\030J \001(\t\022\013\n\003tag\030K \001(" +
      "\003\"\375\001\n\rStoragePolicy\022\014\n\004name\030\001 \001(\t\022a\n\010ecS" +
      "cheme\030\002 \001(\0132O.io.pravega.segmentstore.st" +
      "orage.impl.chunkstream.storageos.rpc.cm." +
      "EcCodeScheme\022{\n\027placementSafeCheckLevel\030" +
      "\003 \001(\0162Z.io.pravega.segmentstore.storage." +
      "impl.chunkstream.storageos.rpc.cm.Placem" +
      "entSafeCheckLevel\"\305\013\n\022ChunkCreateRequest" +
      "\022\017\n\007chunkId\030\001 \002(\t\022b\n\010dataType\030\002 \002(\0162P.io",
      ".pravega.segmentstore.storage.impl.chunk" +
      "stream.storageos.rpc.cm.ChunkDataType\022Z\n" +
      "\004type\030\003 \002(\0162L.io.pravega.segmentstore.st" +
      "orage.impl.chunkstream.storageos.rpc.cm." +
      "ChunkType\022\024\n\014writerNodeId\030\004 \001(\t\022\017\n\007prima" +
      "ry\030\005 \001(\t\022\020\n\010writerId\030\006 \001(\t\022\\\n\005hints\030\007 \003(" +
      "\0132M.io.pravega.segmentstore.storage.impl" +
      ".chunkstream.storageos.rpc.cm.SSLocation" +
      "\022\034\n\runlimitedSize\030\010 \001(\010:\005false\022\020\n\010repGro" +
      "up\030\t \001(\t\022\022\n\nfsDeviceId\030\n \001(\t\022\020\n\010filePath",
      "\030\013 \001(\t\022\022\n\nfileOffset\030\014 \001(\003\022\021\n\tchunkSize\030" +
      "\r \001(\005\022d\n\rnegativeHints\030\016 \003(\0132M.io.praveg" +
      "a.segmentstore.storage.impl.chunkstream." +
      "storageos.rpc.cm.SSLocation\022g\n\rrepoChunk" +
      "Type\030\017 \001(\0162P.io.pravega.segmentstore.sto" +
      "rage.impl.chunkstream.storageos.rpc.cm.R" +
      "epoChunkType\022\037\n\027skipChunkSequenceNumber\030" +
      "\020 \001(\010\022h\n\013customState\030\021 \001(\0162S.io.pravega." +
      "segmentstore.storage.impl.chunkstream.st" +
      "orageos.rpc.cm.ChunkCustomState\022\017\n\007dtTyp",
      "es\030\022 \003(\t\022\025\n\ralignmentSize\030\023 \001(\005\022z\n\022bTree" +
      "ChunkDataType\030\024 \001(\0162U.io.pravega.segment" +
      "store.storage.impl.chunkstream.storageos" +
      ".rpc.cm.BTreeChunkDataType:\007GENERAL\022\023\n\013i" +
      "sPageTable\030\025 \001(\010\022\031\n\021maxWriteBlockSize\030\026 " +
      "\001(\005\022g\n\rstoragePolicy\030\027 \001(\0132P.io.pravega." +
      "segmentstore.storage.impl.chunkstream.st" +
      "orageos.rpc.cm.StoragePolicy\022Y\n\006source\030\030" +
      " \001(\0162I.io.pravega.segmentstore.storage.i" +
      "mpl.chunkstream.storageos.rpc.cm.Source\022",
      "\030\n\020indexGranularity\030\031 \001(\005\022\027\n\017customChunk" +
      "Size\030\032 \001(\005\022e\n\014ecCodeScheme\030\033 \001(\0132O.io.pr" +
      "avega.segmentstore.storage.impl.chunkstr" +
      "eam.storageos.rpc.cm.EcCodeScheme\022\022\n\nski" +
      "pRepoGC\030\034 \001(\010\022\023\n\013originalKey\030\035 \001(\t\022\013\n\003ta" +
      "g\030\036 \001(\003*\010\010d\020\200\200\200\200\002\"\227\002\n\023ReplaceBlockReques" +
      "t\022\017\n\007chunkId\030\001 \002(\t\022b\n\010dataType\030\002 \002(\0162P.i" +
      "o.pravega.segmentstore.storage.impl.chun" +
      "kstream.storageos.rpc.cm.ChunkDataType\022c" +
      "\n\013segmentInfo\030\003 \002(\0132N.io.pravega.segment",
      "store.storage.impl.chunkstream.storageos" +
      ".rpc.cm.SegmentInfo\022\024\n\014writerNodeId\030\004 \001(" +
      "\t\022\020\n\010writerId\030\005 \001(\t\"\351\001\n\024ReplaceBlockResp" +
      "onse\022p\n\006status\030\001 \002(\0162W.io.pravega.segmen" +
      "tstore.storage.impl.chunkstream.storageo" +
      "s.rpc.cm.ChunkOperationStatus:\007SUCCESS\022_" +
      "\n\tchunkInfo\030\002 \001(\0132L.io.pravega.segmentst" +
      "ore.storage.impl.chunkstream.storageos.r" +
      "pc.cm.ChunkInfo\"\320\002\n/IngestSystemUnderTra" +
      "nsformationRepoChunkRequest\022\030\n\020transform",
      "ationId\030\001 \002(\t2\202\002\n/ingestSystemUnderTrans" +
      "formationRepoChunkRequest\022U.io.pravega.s" +
      "egmentstore.storage.impl.chunkstream.sto" +
      "rageos.rpc.cm.ChunkCreateRequest\030e \001(\0132r" +
      ".io.pravega.segmentstore.storage.impl.ch" +
      "unkstream.storageos.rpc.cm.IngestSystemU" +
      "nderTransformationRepoChunkRequest\"\350\001\n\023C" +
      "hunkCreateResponse\022p\n\006status\030\001 \002(\0162W.io." +
      "pravega.segmentstore.storage.impl.chunks" +
      "tream.storageos.rpc.cm.ChunkOperationSta",
      "tus:\007SUCCESS\022_\n\tchunkInfo\030\002 \001(\0132L.io.pra" +
      "vega.segmentstore.storage.impl.chunkstre" +
      "am.storageos.rpc.cm.ChunkInfo\"8\n\022ChunkDe" +
      "leteRequest\022\017\n\007chunkId\030\001 \002(\t\022\021\n\tforceFla" +
      "g\030\002 \001(\010\"\207\001\n\023ChunkDeleteResponse\022p\n\006statu" +
      "s\030\001 \002(\0162W.io.pravega.segmentstore.storag" +
      "e.impl.chunkstream.storageos.rpc.cm.Chun" +
      "kOperationStatus:\007SUCCESS\"J\n\030ChunkObject" +
      "DeleteRequest\022\017\n\007chunkId\030\001 \002(\t\022\035\n\025freeBl" +
      "ockDelaySeconds\030\002 \001(\005\"\215\001\n\031ChunkObjectDel",
      "eteResponse\022p\n\006status\030\001 \002(\0162W.io.pravega" +
      ".segmentstore.storage.impl.chunkstream.s" +
      "torageos.rpc.cm.ChunkOperationStatus:\007SU" +
      "CCESS\"s\n\020ChunkSealRequest\022\017\n\007chunkId\030\001 \002" +
      "(\t\022\016\n\006length\030\002 \002(\005\022\016\n\006client\030\003 \001(\t\022\024\n\014is" +
      "EcInClient\030\004 \001(\010\022\030\n\tcheckTask\030\005 \001(\010:\005fal" +
      "se\"\346\001\n\021ChunkSealResponse\022p\n\006status\030\001 \002(\016" +
      "2W.io.pravega.segmentstore.storage.impl." +
      "chunkstream.storageos.rpc.cm.ChunkOperat" +
      "ionStatus:\007SUCCESS\022_\n\tchunkInfo\030\002 \001(\0132L.",
      "io.pravega.segmentstore.storage.impl.chu" +
      "nkstream.storageos.rpc.cm.ChunkInfo\"\201\002\n\037" +
      "ClientEcEncodeCompletionRequest\022\017\n\007chunk" +
      "Id\030\001 \002(\t\022`\n\010segments\030\002 \003(\0132N.io.pravega." +
      "segmentstore.storage.impl.chunkstream.st" +
      "orageos.rpc.cm.SegmentInfo\022\022\n\nsealLength" +
      "\030\003 \002(\005\022W\n\006ecCopy\030\004 \002(\0132G.io.pravega.segm" +
      "entstore.storage.impl.chunkstream.storag" +
      "eos.rpc.cm.Copy\"\365\001\n ClientEcEncodeComple" +
      "tionResponse\022p\n\006status\030\001 \002(\0162W.io.praveg",
      "a.segmentstore.storage.impl.chunkstream." +
      "storageos.rpc.cm.ChunkOperationStatus:\007S" +
      "UCCESS\022_\n\tchunkInfo\030\002 \001(\0132L.io.pravega.s" +
      "egmentstore.storage.impl.chunkstream.sto" +
      "rageos.rpc.cm.ChunkInfo\"\223\001\n\021ChunkQueryRe" +
      "quest\022\017\n\007chunkId\030\001 \002(\t\022\021\n\tcouldMiss\030\002 \001(" +
      "\010\022\027\n\017isReadForDecode\030\003 \001(\010\022\023\n\013doBroadcas" +
      "t\030\004 \001(\010\022\020\n\010repGroup\030\005 \001(\t\022\032\n\022isReadForSp" +
      "illover\030\006 \001(\010\"\347\001\n\022ChunkQueryResponse\022p\n\006" +
      "status\030\001 \002(\0162W.io.pravega.segmentstore.s",
      "torage.impl.chunkstream.storageos.rpc.cm" +
      ".ChunkOperationStatus:\007SUCCESS\022_\n\tchunkI" +
      "nfo\030\002 \001(\0132L.io.pravega.segmentstore.stor" +
      "age.impl.chunkstream.storageos.rpc.cm.Ch" +
      "unkInfo\"G\n\033ChunkSealLeaseExtendRequest\022\017" +
      "\n\007chunkId\030\001 \002(\t\022\027\n\017lastKnownLength\030\002 \001(\005" +
      "\"\235\001\n\034ChunkSealLeaseExtendResponse\022g\n\006sta" +
      "tus\030\001 \002(\0162W.io.pravega.segmentstore.stor" +
      "age.impl.chunkstream.storageos.rpc.cm.Ch" +
      "unkOperationStatus\022\024\n\014sealedLength\030\002 \001(\005",
      "\"\206\001\n\022ChunkUpdateRequest\022\017\n\007chunkId\030\001 \002(\t" +
      "\022_\n\tchunkInfo\030\002 \002(\0132L.io.pravega.segment" +
      "store.storage.impl.chunkstream.storageos" +
      ".rpc.cm.ChunkInfo*D\n\013BlockStatus\022\013\n\007HEAL" +
      "THY\020\000\022\016\n\nSUSPICIOUS\020\001\022\017\n\013MAINTENANCE\020\002\022\007" +
      "\n\003BAD\020\003*I\n\026LocationRecoveryStatus\022\022\n\016REC" +
      "ONSTRUCTING\020\000\022\014\n\010RETIRING\020\001\022\r\n\tCORRUPTED" +
      "\020\002*`\n\014LocationType\022\022\n\016STORAGE_SERVER\020\000\022\007" +
      "\n\003NFS\020\001\022\022\n\016OBJECT_BACKEND\020\002\022\037\n\033SYSTEM_UN" +
      "DER_TRANSFORMATION\020\n*G\n\010EcStatus\022\017\n\013NOT_",
      "STARTED\020\000\022\r\n\tCOMPLETED\020\001\022\014\n\010ENCODING\020\002\022\r" +
      "\n\tREDUNDANT\020\003*\314\001\n\016ShippingStatus\022\037\n\033GEO_" +
      "SHIPPING_STATUS_SUCCESS\020\001\022$\n GEO_SHIPPIN" +
      "G_STATUS_FAIL_TIMEOUT\020\002\0221\n-GEO_SHIPPING_" +
      "STATUS_FAIL_REMOTE_WRITE_FAILURE\020\003\022\037\n\033GE" +
      "O_SHIPPING_STATUS_COPYING\020\004\022\037\n\033GEO_SHIPP" +
      "ING_STATUS_UNKNOWN\020\005*R\n\013ChunkStatus\022\n\n\006A" +
      "CTIVE\020\000\022\n\n\006SEALED\020\001\022\014\n\010DELETING\020\002\022\020\n\014GEO" +
      "_DELETING\020\003\022\013\n\007DELETED\020\004*1\n\rChunkDataTyp" +
      "e\022\010\n\004REPO\020\000\022\013\n\007JOURNAL\020\001\022\t\n\005BTREE\020\002*E\n\tC",
      "hunkType\022\t\n\005LOCAL\020\000\022\n\n\006REMOTE\020\001\022\010\n\004COPY\020" +
      "\002\022\013\n\007ENCODED\020\003\022\n\n\006PARITY\020\004*(\n\rRepoChunkT" +
      "ype\022\n\n\006TYPE_I\020\000\022\013\n\007TYPE_II\020\001*@\n\022BTreeChu" +
      "nkDataType\022\013\n\007GENERAL\020\000\022\r\n\tLEAF_PAGE\020\001\022\016" +
      "\n\nINDEX_PAGE\020\002*\\\n\020ChunkCustomState\022\026\n\022PA" +
      "RTIALGC_COPYFROM\020\000\022\024\n\020PARTIALGC_COPYTO\020\001" +
      "\022\032\n\026PARTIALGC_NO_CANDIDATE\020\002*+\n\027Placemen" +
      "tSafeCheckLevel\022\006\n\002FD\020\000\022\010\n\004NODE\020\001*+\n\006Sou" +
      "rce\022\021\n\rUSER_INJECTED\020\000\022\016\n\nREPLICATED\020\001*\242" +
      "\004\n\024ChunkOperationStatus\022\013\n\007SUCCESS\020\000\022\022\n\016",
      "ERROR_INTERNAL\020\001\022\032\n\026ERROR_INVALID_ARGUME" +
      "NT\020\002\022\022\n\016ERROR_NO_SPACE\020\003\022\027\n\023ERROR_NO_SUC" +
      "H_CHUNK\020\004\022\025\n\021ERROR_SHOULD_SEAL\020\005\022!\n\035ERRO" +
      "R_NO_STORAGE_DEVICE_FOUND\020\006\022\027\n\023ERROR_NO_" +
      "ZONE_FOUND\020\007\022\030\n\024ERROR_ALREADY_SEALED\020\010\022 " +
      "\n\034ERROR_ALREADY_GEO_REPLICATED\020\t\022\026\n\022ERRO" +
      "R_RG_NOT_FOUND\020\n\022\037\n\033ERROR_ALLOCATE_BLOCK" +
      "_FAILED\020\013\022)\n%ERROR_UNSEALED_TOO_MUCH_COP" +
      "IES_FAILED\020\014\022\017\n\013IN_PROGRESS\020\r\022\032\n\026ERROR_A" +
      "LREADY_DELETING\020\016\022\033\n\027ERROR_INVALID_EC_SC",
      "HEME\020\017\022\032\n\026ERROR_ALREADY_GC_READY\020\020\022\031\n\025ER" +
      "ROR_ALREADY_SEALING\020\021\022\027\n\023ERROR_NOT_CANDI" +
      "DATE\020\022\022\023\n\017CHUNK_NOT_EXIST\020\023BP\nAio.praveg" +
      "a.segmentstore.storage.impl.chunkstream." +
      "storageos.rpc.cmB\tCmMessageP\000"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_Uuid_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_Uuid_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_Uuid_descriptor,
        new java.lang.String[] { "HighBytes", "LowBytes", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SecondaryPair_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SecondaryPair_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SecondaryPair_descriptor,
        new java.lang.String[] { "Secondary", "Replicated", "SecondaryUuid", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_EcCodeScheme_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_EcCodeScheme_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_EcCodeScheme_descriptor,
        new java.lang.String[] { "NumberOfDataBlocks", "NumberOfCodeBlocks", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeInfo_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeInfo_descriptor,
        new java.lang.String[] { "ChunkOffset", "ChunkEndOffset", "Filename", "Offset", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SSLocation_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SSLocation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SSLocation_descriptor,
        new java.lang.String[] { "SsId", "PartitionId", "Filename", "Offset", "Status", "StatusSn", "RecoveryStatus", "Ranges", "Tag", "SsIdUuid", "PartitionIdUuid", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_NFSLocation_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_NFSLocation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_NFSLocation_descriptor,
        new java.lang.String[] { "DeviceId", "Filename", "Offset", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_OBLocation_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_OBLocation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_OBLocation_descriptor,
        new java.lang.String[] { "DeviceId", "ObjectId", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SystemUnderTransformationLocation_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SystemUnderTransformationLocation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SystemUnderTransformationLocation_descriptor,
        new java.lang.String[] { "TransformationId", "ChunkId", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SegmentInfo_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SegmentInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_SegmentInfo_descriptor,
        new java.lang.String[] { "LocationType", "SsLocation", "NfsLocation", "ObLocation", "Checksum", "Offset", "EndOffset", "Sequence", "VirtualOffset", "VirtualEndOffset", "MigratingSsLocation", "MigrateSourceSsId", "MigrateSequence", "MigrationBlockSafeFreeTime", "MigrationChecksum", "SystemUnderTransformationLocation", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeMapWithPairChunk_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeMapWithPairChunk_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeMapWithPairChunk_descriptor,
        new java.lang.String[] { "StartOffset", "EndOffset", "PairChunkId", "PairStartOffset", "PairEndOffset", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ShippingRange_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ShippingRange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ShippingRange_descriptor,
        new java.lang.String[] { "StartOffset", "EndOffset", "Status", "RangePairs", "Checksum", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ShippingProgress_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ShippingProgress_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ShippingProgress_descriptor,
        new java.lang.String[] { "Version", "Ranges", "PairShippedChunkIds", "PairShippedChunkGarbageBits", "PairShippingChunkIds", "PairShippingChunkGarbageBits", "CurrentPairShippingChunkId", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_GeoProgress_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_GeoProgress_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_GeoProgress_descriptor,
        new java.lang.String[] { "TargetZone", "Progress", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_Copy_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_Copy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_Copy_descriptor,
        new java.lang.String[] { "IsEc", "Segments", "EcStatus", "EcCodeScheme", "EcRetryCount", "EcEncodePaddingToCapacity", "EcBlockSize", "IsClientCreatedEcCopy", "IsEcEncodedByClient", "IsEcCopyFindSealLengthFailed", "HasRedundant", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeBasedChunkInfo_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeBasedChunkInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_RangeBasedChunkInfo_descriptor,
        new java.lang.String[] { "StartOffset", "EndOffset", "Type", "ParityChunk", "EncodedChunk", "TargetStartOffset", "TargetEndOffset", "VirtualOffset", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkInfo_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkInfo_descriptor,
        new java.lang.String[] { "Status", "DataType", "Type", "RepGroup", "Primary", "Secondaries", "ParityChunk", "EncodedChunks", "Copies", "Capacity", "SealedLength", "AutoSealTime", "SealedTime", "IsEcEncoded", "ShouldSeal", "SequenceNumber", "MinNotSealedSequenceNumber", "Checksum", "Shadow", "IsEcRetiring", "SkipRepoGc", "NoBlockLevelVerification", "LastAccessTime", "LastKnownLength", "RepoChunkType", "ShadowCopy", "GeoCopies", "GeoTrackTime", "GeoProgress", "OriginalPrimary", "DeletedTime", "CustomState", "FailoverZone", "IsGCReady", "DtTypes", "AlignmentSize", "EncodedCopies", "ChecksumForEncodedCopies", "UsingXorGeoShipping", "FreeShadowBlocks", "ChunkInfoByRanges", "PendingEncodeChunks", "SealingInProgress", "EverTryRemoveTypeII", "CreateTime", "IsGcVerificationNeeded", "IsEcRedundant", "RepGroupUuid", "PrimaryUuid", "ParityChunkUuid", "CmPendingForFreeSpaceStats", "PartialSRCopiedData", "BTreeChunkDataType", "IsPageTable", "ShouldShip", "MaxKnownJournalReplayLength", "Epoch", "MaxWriteBlockSize", "StoragePolicy", "GeneratedSRPrecheckTask", "Source", "EverForceCheckedReclaimable", "DataRepoFree", "IndexGranularity", "OriginalKey", "Tag", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_StoragePolicy_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_StoragePolicy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_StoragePolicy_descriptor,
        new java.lang.String[] { "Name", "EcScheme", "PlacementSafeCheckLevel", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkCreateRequest_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkCreateRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkCreateRequest_descriptor,
        new java.lang.String[] { "ChunkId", "DataType", "Type", "WriterNodeId", "Primary", "WriterId", "Hints", "UnlimitedSize", "RepGroup", "FsDeviceId", "FilePath", "FileOffset", "ChunkSize", "NegativeHints", "RepoChunkType", "SkipChunkSequenceNumber", "CustomState", "DtTypes", "AlignmentSize", "BTreeChunkDataType", "IsPageTable", "MaxWriteBlockSize", "StoragePolicy", "Source", "IndexGranularity", "CustomChunkSize", "EcCodeScheme", "SkipRepoGC", "OriginalKey", "Tag", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ReplaceBlockRequest_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ReplaceBlockRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ReplaceBlockRequest_descriptor,
        new java.lang.String[] { "ChunkId", "DataType", "SegmentInfo", "WriterNodeId", "WriterId", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ReplaceBlockResponse_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ReplaceBlockResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ReplaceBlockResponse_descriptor,
        new java.lang.String[] { "Status", "ChunkInfo", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_IngestSystemUnderTransformationRepoChunkRequest_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_IngestSystemUnderTransformationRepoChunkRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_IngestSystemUnderTransformationRepoChunkRequest_descriptor,
        new java.lang.String[] { "TransformationId", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkCreateResponse_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkCreateResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkCreateResponse_descriptor,
        new java.lang.String[] { "Status", "ChunkInfo", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkDeleteRequest_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkDeleteRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkDeleteRequest_descriptor,
        new java.lang.String[] { "ChunkId", "ForceFlag", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkDeleteResponse_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkDeleteResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkDeleteResponse_descriptor,
        new java.lang.String[] { "Status", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkObjectDeleteRequest_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkObjectDeleteRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkObjectDeleteRequest_descriptor,
        new java.lang.String[] { "ChunkId", "FreeBlockDelaySeconds", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkObjectDeleteResponse_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkObjectDeleteResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkObjectDeleteResponse_descriptor,
        new java.lang.String[] { "Status", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealRequest_descriptor =
      getDescriptor().getMessageTypes().get(26);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealRequest_descriptor,
        new java.lang.String[] { "ChunkId", "Length", "Client", "IsEcInClient", "CheckTask", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealResponse_descriptor =
      getDescriptor().getMessageTypes().get(27);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealResponse_descriptor,
        new java.lang.String[] { "Status", "ChunkInfo", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ClientEcEncodeCompletionRequest_descriptor =
      getDescriptor().getMessageTypes().get(28);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ClientEcEncodeCompletionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ClientEcEncodeCompletionRequest_descriptor,
        new java.lang.String[] { "ChunkId", "Segments", "SealLength", "EcCopy", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ClientEcEncodeCompletionResponse_descriptor =
      getDescriptor().getMessageTypes().get(29);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ClientEcEncodeCompletionResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ClientEcEncodeCompletionResponse_descriptor,
        new java.lang.String[] { "Status", "ChunkInfo", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkQueryRequest_descriptor =
      getDescriptor().getMessageTypes().get(30);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkQueryRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkQueryRequest_descriptor,
        new java.lang.String[] { "ChunkId", "CouldMiss", "IsReadForDecode", "DoBroadcast", "RepGroup", "IsReadForSpillover", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkQueryResponse_descriptor =
      getDescriptor().getMessageTypes().get(31);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkQueryResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkQueryResponse_descriptor,
        new java.lang.String[] { "Status", "ChunkInfo", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealLeaseExtendRequest_descriptor =
      getDescriptor().getMessageTypes().get(32);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealLeaseExtendRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealLeaseExtendRequest_descriptor,
        new java.lang.String[] { "ChunkId", "LastKnownLength", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealLeaseExtendResponse_descriptor =
      getDescriptor().getMessageTypes().get(33);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealLeaseExtendResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkSealLeaseExtendResponse_descriptor,
        new java.lang.String[] { "Status", "SealedLength", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkUpdateRequest_descriptor =
      getDescriptor().getMessageTypes().get(34);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkUpdateRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_cm_ChunkUpdateRequest_descriptor,
        new java.lang.String[] { "ChunkId", "ChunkInfo", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
