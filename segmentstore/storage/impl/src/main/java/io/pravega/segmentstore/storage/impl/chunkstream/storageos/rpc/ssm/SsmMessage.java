// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ssm.proto

package io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm;

public final class SsmMessage {
  private SsmMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockOperationStatus}
   */
  public enum BlockOperationStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SUCCESS = 0;</code>
     *
     * <pre>
     * the common status
     * </pre>
     */
    SUCCESS(0, 0),
    /**
     * <code>ERROR_INTERNAL = 1;</code>
     */
    ERROR_INTERNAL(1, 1),
    /**
     * <code>ERROR_INVALID_ARGUMENT = 2;</code>
     */
    ERROR_INVALID_ARGUMENT(2, 2),
    /**
     * <code>ERROR_NO_SPACE = 3;</code>
     */
    ERROR_NO_SPACE(3, 3),
    /**
     * <code>ERROR_NOT_REFERENCED = 4;</code>
     */
    ERROR_NOT_REFERENCED(4, 4),
    /**
     * <code>ERROR_ALLOCATE_FAIL = 5;</code>
     */
    ERROR_ALLOCATE_FAIL(5, 5),
    /**
     * <code>ERROR_MIGRATION_CHUNK_DELETING_OR_DELETED = 6;</code>
     */
    ERROR_MIGRATION_CHUNK_DELETING_OR_DELETED(6, 6),
    /**
     * <code>ERROR_MIGRATION_CHUNK_LOCAL_ACTIVE = 7;</code>
     */
    ERROR_MIGRATION_CHUNK_LOCAL_ACTIVE(7, 7),
    /**
     * <code>ERROR_MIGRATION_CHUNK_EC_RETIRING = 8;</code>
     */
    ERROR_MIGRATION_CHUNK_EC_RETIRING(8, 8),
    /**
     * <code>ERROR_MIGRATION_CHUNK_EC_NOT_COMPLETE = 9;</code>
     */
    ERROR_MIGRATION_CHUNK_EC_NOT_COMPLETE(9, 9),
    /**
     * <code>ERROR_MIGRATION_SEGMENT_BAD = 10;</code>
     */
    ERROR_MIGRATION_SEGMENT_BAD(10, 10),
    /**
     * <code>ERROR_MIGRATION_CHUNK_REMOTE_ACTIVE = 11;</code>
     *
     * <pre>
     * not local &amp; active
     * </pre>
     */
    ERROR_MIGRATION_CHUNK_REMOTE_ACTIVE(11, 11),
    /**
     * <code>ERROR_MIGRATION_SOURCE_SEGMENT_GEO_CACHE = 12;</code>
     */
    ERROR_MIGRATION_SOURCE_SEGMENT_GEO_CACHE(12, 12),
    /**
     * <code>ERROR_MIGRATION_CHUNK_GEO_REPLICATING = 13;</code>
     */
    ERROR_MIGRATION_CHUNK_GEO_REPLICATING(13, 13),
    /**
     * <code>ERROR_MIGRATION_CHUNK_XOR_ENCODING = 14;</code>
     */
    ERROR_MIGRATION_CHUNK_XOR_ENCODING(14, 14),
    /**
     * <code>ERROR_MIGRATION_CHUNK_XOR_DECODING = 15;</code>
     */
    ERROR_MIGRATION_CHUNK_XOR_DECODING(15, 15),
    /**
     * <code>ERROR_MIGRATION_CHUNK_GEO_DELETING = 16;</code>
     */
    ERROR_MIGRATION_CHUNK_GEO_DELETING(16, 16),
    /**
     * <code>ERROR_MIGRATION_CHUNK_UNDER_TRANSFORMATION = 17;</code>
     */
    ERROR_MIGRATION_CHUNK_UNDER_TRANSFORMATION(17, 17),
    /**
     * <code>ERROR_INVALID_CHUNK_STATUS = 18;</code>
     */
    ERROR_INVALID_CHUNK_STATUS(18, 18),
    /**
     * <code>ERROR_MIGRATION_CHUNK_NOT_FOUND = 19;</code>
     */
    ERROR_MIGRATION_CHUNK_NOT_FOUND(19, 19),
    /**
     * <code>ERROR_MIGRATION_ALLOCATE_TIMEOUT = 20;</code>
     */
    ERROR_MIGRATION_ALLOCATE_TIMEOUT(20, 20),
    /**
     * <code>ERROR_MIGRATION_SOURCE_SEGMENT_HAS_RECOVERY_STATUS = 21;</code>
     */
    ERROR_MIGRATION_SOURCE_SEGMENT_HAS_RECOVERY_STATUS(21, 21),
    /**
     * <code>ERROR_MIGRATION_SOURCE_SEGMENT_NOT_VALID = 22;</code>
     */
    ERROR_MIGRATION_SOURCE_SEGMENT_NOT_VALID(22, 22),
    /**
     * <code>ERROR_MIGRATION_TARGET_SEGMENT_NOT_VALID = 23;</code>
     */
    ERROR_MIGRATION_TARGET_SEGMENT_NOT_VALID(23, 23),
    /**
     * <code>ERROR_MIGRATION_SOURCE_SEGMENT_NOT_FOUND = 24;</code>
     */
    ERROR_MIGRATION_SOURCE_SEGMENT_NOT_FOUND(24, 24),
    /**
     * <code>ERROR_MIGRATION_TARGET_SEGMENT_NOT_FOUND = 25;</code>
     */
    ERROR_MIGRATION_TARGET_SEGMENT_NOT_FOUND(25, 25),
    /**
     * <code>ERROR_MIGRATION_TASK_NOT_TRACKED = 26;</code>
     */
    ERROR_MIGRATION_TASK_NOT_TRACKED(26, 26),
    /**
     * <code>ERROR_MIGRATION_UPDATE_CHUNKINFO_FAIL = 27;</code>
     */
    ERROR_MIGRATION_UPDATE_CHUNKINFO_FAIL(27, 27),
    /**
     * <code>ERROR_MIGRATION_CHECKSUM_UNAVAILABLE = 28;</code>
     */
    ERROR_MIGRATION_CHECKSUM_UNAVAILABLE(28, 28),
    /**
     * <code>ERROR_MIGRATION_TARGET_SEGMENT_BLACKLISTED = 29;</code>
     */
    ERROR_MIGRATION_TARGET_SEGMENT_BLACKLISTED(29, 29),
    ;

    /**
     * <code>SUCCESS = 0;</code>
     *
     * <pre>
     * the common status
     * </pre>
     */
    public static final int SUCCESS_VALUE = 0;
    /**
     * <code>ERROR_INTERNAL = 1;</code>
     */
    public static final int ERROR_INTERNAL_VALUE = 1;
    /**
     * <code>ERROR_INVALID_ARGUMENT = 2;</code>
     */
    public static final int ERROR_INVALID_ARGUMENT_VALUE = 2;
    /**
     * <code>ERROR_NO_SPACE = 3;</code>
     */
    public static final int ERROR_NO_SPACE_VALUE = 3;
    /**
     * <code>ERROR_NOT_REFERENCED = 4;</code>
     */
    public static final int ERROR_NOT_REFERENCED_VALUE = 4;
    /**
     * <code>ERROR_ALLOCATE_FAIL = 5;</code>
     */
    public static final int ERROR_ALLOCATE_FAIL_VALUE = 5;
    /**
     * <code>ERROR_MIGRATION_CHUNK_DELETING_OR_DELETED = 6;</code>
     */
    public static final int ERROR_MIGRATION_CHUNK_DELETING_OR_DELETED_VALUE = 6;
    /**
     * <code>ERROR_MIGRATION_CHUNK_LOCAL_ACTIVE = 7;</code>
     */
    public static final int ERROR_MIGRATION_CHUNK_LOCAL_ACTIVE_VALUE = 7;
    /**
     * <code>ERROR_MIGRATION_CHUNK_EC_RETIRING = 8;</code>
     */
    public static final int ERROR_MIGRATION_CHUNK_EC_RETIRING_VALUE = 8;
    /**
     * <code>ERROR_MIGRATION_CHUNK_EC_NOT_COMPLETE = 9;</code>
     */
    public static final int ERROR_MIGRATION_CHUNK_EC_NOT_COMPLETE_VALUE = 9;
    /**
     * <code>ERROR_MIGRATION_SEGMENT_BAD = 10;</code>
     */
    public static final int ERROR_MIGRATION_SEGMENT_BAD_VALUE = 10;
    /**
     * <code>ERROR_MIGRATION_CHUNK_REMOTE_ACTIVE = 11;</code>
     *
     * <pre>
     * not local &amp; active
     * </pre>
     */
    public static final int ERROR_MIGRATION_CHUNK_REMOTE_ACTIVE_VALUE = 11;
    /**
     * <code>ERROR_MIGRATION_SOURCE_SEGMENT_GEO_CACHE = 12;</code>
     */
    public static final int ERROR_MIGRATION_SOURCE_SEGMENT_GEO_CACHE_VALUE = 12;
    /**
     * <code>ERROR_MIGRATION_CHUNK_GEO_REPLICATING = 13;</code>
     */
    public static final int ERROR_MIGRATION_CHUNK_GEO_REPLICATING_VALUE = 13;
    /**
     * <code>ERROR_MIGRATION_CHUNK_XOR_ENCODING = 14;</code>
     */
    public static final int ERROR_MIGRATION_CHUNK_XOR_ENCODING_VALUE = 14;
    /**
     * <code>ERROR_MIGRATION_CHUNK_XOR_DECODING = 15;</code>
     */
    public static final int ERROR_MIGRATION_CHUNK_XOR_DECODING_VALUE = 15;
    /**
     * <code>ERROR_MIGRATION_CHUNK_GEO_DELETING = 16;</code>
     */
    public static final int ERROR_MIGRATION_CHUNK_GEO_DELETING_VALUE = 16;
    /**
     * <code>ERROR_MIGRATION_CHUNK_UNDER_TRANSFORMATION = 17;</code>
     */
    public static final int ERROR_MIGRATION_CHUNK_UNDER_TRANSFORMATION_VALUE = 17;
    /**
     * <code>ERROR_INVALID_CHUNK_STATUS = 18;</code>
     */
    public static final int ERROR_INVALID_CHUNK_STATUS_VALUE = 18;
    /**
     * <code>ERROR_MIGRATION_CHUNK_NOT_FOUND = 19;</code>
     */
    public static final int ERROR_MIGRATION_CHUNK_NOT_FOUND_VALUE = 19;
    /**
     * <code>ERROR_MIGRATION_ALLOCATE_TIMEOUT = 20;</code>
     */
    public static final int ERROR_MIGRATION_ALLOCATE_TIMEOUT_VALUE = 20;
    /**
     * <code>ERROR_MIGRATION_SOURCE_SEGMENT_HAS_RECOVERY_STATUS = 21;</code>
     */
    public static final int ERROR_MIGRATION_SOURCE_SEGMENT_HAS_RECOVERY_STATUS_VALUE = 21;
    /**
     * <code>ERROR_MIGRATION_SOURCE_SEGMENT_NOT_VALID = 22;</code>
     */
    public static final int ERROR_MIGRATION_SOURCE_SEGMENT_NOT_VALID_VALUE = 22;
    /**
     * <code>ERROR_MIGRATION_TARGET_SEGMENT_NOT_VALID = 23;</code>
     */
    public static final int ERROR_MIGRATION_TARGET_SEGMENT_NOT_VALID_VALUE = 23;
    /**
     * <code>ERROR_MIGRATION_SOURCE_SEGMENT_NOT_FOUND = 24;</code>
     */
    public static final int ERROR_MIGRATION_SOURCE_SEGMENT_NOT_FOUND_VALUE = 24;
    /**
     * <code>ERROR_MIGRATION_TARGET_SEGMENT_NOT_FOUND = 25;</code>
     */
    public static final int ERROR_MIGRATION_TARGET_SEGMENT_NOT_FOUND_VALUE = 25;
    /**
     * <code>ERROR_MIGRATION_TASK_NOT_TRACKED = 26;</code>
     */
    public static final int ERROR_MIGRATION_TASK_NOT_TRACKED_VALUE = 26;
    /**
     * <code>ERROR_MIGRATION_UPDATE_CHUNKINFO_FAIL = 27;</code>
     */
    public static final int ERROR_MIGRATION_UPDATE_CHUNKINFO_FAIL_VALUE = 27;
    /**
     * <code>ERROR_MIGRATION_CHECKSUM_UNAVAILABLE = 28;</code>
     */
    public static final int ERROR_MIGRATION_CHECKSUM_UNAVAILABLE_VALUE = 28;
    /**
     * <code>ERROR_MIGRATION_TARGET_SEGMENT_BLACKLISTED = 29;</code>
     */
    public static final int ERROR_MIGRATION_TARGET_SEGMENT_BLACKLISTED_VALUE = 29;


    public final int getNumber() { return value; }

    public static BlockOperationStatus valueOf(int value) {
      switch (value) {
        case 0: return SUCCESS;
        case 1: return ERROR_INTERNAL;
        case 2: return ERROR_INVALID_ARGUMENT;
        case 3: return ERROR_NO_SPACE;
        case 4: return ERROR_NOT_REFERENCED;
        case 5: return ERROR_ALLOCATE_FAIL;
        case 6: return ERROR_MIGRATION_CHUNK_DELETING_OR_DELETED;
        case 7: return ERROR_MIGRATION_CHUNK_LOCAL_ACTIVE;
        case 8: return ERROR_MIGRATION_CHUNK_EC_RETIRING;
        case 9: return ERROR_MIGRATION_CHUNK_EC_NOT_COMPLETE;
        case 10: return ERROR_MIGRATION_SEGMENT_BAD;
        case 11: return ERROR_MIGRATION_CHUNK_REMOTE_ACTIVE;
        case 12: return ERROR_MIGRATION_SOURCE_SEGMENT_GEO_CACHE;
        case 13: return ERROR_MIGRATION_CHUNK_GEO_REPLICATING;
        case 14: return ERROR_MIGRATION_CHUNK_XOR_ENCODING;
        case 15: return ERROR_MIGRATION_CHUNK_XOR_DECODING;
        case 16: return ERROR_MIGRATION_CHUNK_GEO_DELETING;
        case 17: return ERROR_MIGRATION_CHUNK_UNDER_TRANSFORMATION;
        case 18: return ERROR_INVALID_CHUNK_STATUS;
        case 19: return ERROR_MIGRATION_CHUNK_NOT_FOUND;
        case 20: return ERROR_MIGRATION_ALLOCATE_TIMEOUT;
        case 21: return ERROR_MIGRATION_SOURCE_SEGMENT_HAS_RECOVERY_STATUS;
        case 22: return ERROR_MIGRATION_SOURCE_SEGMENT_NOT_VALID;
        case 23: return ERROR_MIGRATION_TARGET_SEGMENT_NOT_VALID;
        case 24: return ERROR_MIGRATION_SOURCE_SEGMENT_NOT_FOUND;
        case 25: return ERROR_MIGRATION_TARGET_SEGMENT_NOT_FOUND;
        case 26: return ERROR_MIGRATION_TASK_NOT_TRACKED;
        case 27: return ERROR_MIGRATION_UPDATE_CHUNKINFO_FAIL;
        case 28: return ERROR_MIGRATION_CHECKSUM_UNAVAILABLE;
        case 29: return ERROR_MIGRATION_TARGET_SEGMENT_BLACKLISTED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BlockOperationStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<BlockOperationStatus>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BlockOperationStatus>() {
            public BlockOperationStatus findValueByNumber(int number) {
              return BlockOperationStatus.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.getDescriptor().getEnumTypes().get(0);
    }

    private static final BlockOperationStatus[] VALUES = values();

    public static BlockOperationStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private BlockOperationStatus(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockOperationStatus)
  }

  /**
   * Protobuf enum {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.ChunkAllocateType}
   */
  public enum ChunkAllocateType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_CHUNK = 0;</code>
     */
    UNKNOWN_CHUNK(0, 0),
    /**
     * <code>REPO_CHUNK = 1;</code>
     */
    REPO_CHUNK(1, 1),
    /**
     * <code>BTREE_CHUNK = 2;</code>
     */
    BTREE_CHUNK(2, 2),
    /**
     * <code>JOURNAL_CHUNK = 3;</code>
     */
    JOURNAL_CHUNK(3, 3),
    /**
     * <code>REALLOCATE_CHUNK = 4;</code>
     */
    REALLOCATE_CHUNK(4, 4),
    ;

    /**
     * <code>UNKNOWN_CHUNK = 0;</code>
     */
    public static final int UNKNOWN_CHUNK_VALUE = 0;
    /**
     * <code>REPO_CHUNK = 1;</code>
     */
    public static final int REPO_CHUNK_VALUE = 1;
    /**
     * <code>BTREE_CHUNK = 2;</code>
     */
    public static final int BTREE_CHUNK_VALUE = 2;
    /**
     * <code>JOURNAL_CHUNK = 3;</code>
     */
    public static final int JOURNAL_CHUNK_VALUE = 3;
    /**
     * <code>REALLOCATE_CHUNK = 4;</code>
     */
    public static final int REALLOCATE_CHUNK_VALUE = 4;


    public final int getNumber() { return value; }

    public static ChunkAllocateType valueOf(int value) {
      switch (value) {
        case 0: return UNKNOWN_CHUNK;
        case 1: return REPO_CHUNK;
        case 2: return BTREE_CHUNK;
        case 3: return JOURNAL_CHUNK;
        case 4: return REALLOCATE_CHUNK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ChunkAllocateType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ChunkAllocateType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ChunkAllocateType>() {
            public ChunkAllocateType findValueByNumber(int number) {
              return ChunkAllocateType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.getDescriptor().getEnumTypes().get(1);
    }

    private static final ChunkAllocateType[] VALUES = values();

    public static ChunkAllocateType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ChunkAllocateType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.ChunkAllocateType)
  }

  /**
   * Protobuf enum {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.AllocateProcessType}
   */
  public enum AllocateProcessType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_PROCESS = 0;</code>
     */
    UNKNOWN_PROCESS(0, 0),
    /**
     * <code>BLOBSVC = 1;</code>
     */
    BLOBSVC(1, 1),
    /**
     * <code>CM = 2;</code>
     */
    CM(2, 2),
    /**
     * <code>SR = 3;</code>
     */
    SR(3, 3),
    /**
     * <code>SSM = 4;</code>
     */
    SSM(4, 4),
    /**
     * <code>RM = 5;</code>
     */
    RM(5, 5),
    /**
     * <code>RESOURCE = 6;</code>
     */
    RESOURCE(6, 6),
    /**
     * <code>DATAHEADSVC = 7;</code>
     */
    DATAHEADSVC(7, 7),
    /**
     * <code>VNEST = 8;</code>
     */
    VNEST(8, 8),
    /**
     * <code>DTQUERY = 9;</code>
     */
    DTQUERY(9, 9),
    /**
     * <code>OBJCONTROLSVC = 10;</code>
     */
    OBJCONTROLSVC(10, 10),
    /**
     * <code>GEORECEIVER = 11;</code>
     */
    GEORECEIVER(11, 11),
    /**
     * <code>EVENT = 12;</code>
     */
    EVENT(12, 12),
    /**
     * <code>METERING = 13;</code>
     */
    METERING(13, 13),
    /**
     * <code>TRANSFORM = 14;</code>
     */
    TRANSFORM(14, 14),
    /**
     * <code>SSM_REALLOCATE = 15;</code>
     */
    SSM_REALLOCATE(15, 15),
    ;

    /**
     * <code>UNKNOWN_PROCESS = 0;</code>
     */
    public static final int UNKNOWN_PROCESS_VALUE = 0;
    /**
     * <code>BLOBSVC = 1;</code>
     */
    public static final int BLOBSVC_VALUE = 1;
    /**
     * <code>CM = 2;</code>
     */
    public static final int CM_VALUE = 2;
    /**
     * <code>SR = 3;</code>
     */
    public static final int SR_VALUE = 3;
    /**
     * <code>SSM = 4;</code>
     */
    public static final int SSM_VALUE = 4;
    /**
     * <code>RM = 5;</code>
     */
    public static final int RM_VALUE = 5;
    /**
     * <code>RESOURCE = 6;</code>
     */
    public static final int RESOURCE_VALUE = 6;
    /**
     * <code>DATAHEADSVC = 7;</code>
     */
    public static final int DATAHEADSVC_VALUE = 7;
    /**
     * <code>VNEST = 8;</code>
     */
    public static final int VNEST_VALUE = 8;
    /**
     * <code>DTQUERY = 9;</code>
     */
    public static final int DTQUERY_VALUE = 9;
    /**
     * <code>OBJCONTROLSVC = 10;</code>
     */
    public static final int OBJCONTROLSVC_VALUE = 10;
    /**
     * <code>GEORECEIVER = 11;</code>
     */
    public static final int GEORECEIVER_VALUE = 11;
    /**
     * <code>EVENT = 12;</code>
     */
    public static final int EVENT_VALUE = 12;
    /**
     * <code>METERING = 13;</code>
     */
    public static final int METERING_VALUE = 13;
    /**
     * <code>TRANSFORM = 14;</code>
     */
    public static final int TRANSFORM_VALUE = 14;
    /**
     * <code>SSM_REALLOCATE = 15;</code>
     */
    public static final int SSM_REALLOCATE_VALUE = 15;


    public final int getNumber() { return value; }

    public static AllocateProcessType valueOf(int value) {
      switch (value) {
        case 0: return UNKNOWN_PROCESS;
        case 1: return BLOBSVC;
        case 2: return CM;
        case 3: return SR;
        case 4: return SSM;
        case 5: return RM;
        case 6: return RESOURCE;
        case 7: return DATAHEADSVC;
        case 8: return VNEST;
        case 9: return DTQUERY;
        case 10: return OBJCONTROLSVC;
        case 11: return GEORECEIVER;
        case 12: return EVENT;
        case 13: return METERING;
        case 14: return TRANSFORM;
        case 15: return SSM_REALLOCATE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AllocateProcessType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<AllocateProcessType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AllocateProcessType>() {
            public AllocateProcessType findValueByNumber(int number) {
              return AllocateProcessType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.getDescriptor().getEnumTypes().get(2);
    }

    private static final AllocateProcessType[] VALUES = values();

    public static AllocateProcessType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private AllocateProcessType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.AllocateProcessType)
  }

  public interface BlockSegmentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string blockBinId = 1;</code>
     */
    boolean hasBlockBinId();
    /**
     * <code>required string blockBinId = 1;</code>
     */
    java.lang.String getBlockBinId();
    /**
     * <code>required string blockBinId = 1;</code>
     */
    com.google.protobuf.ByteString
        getBlockBinIdBytes();

    /**
     * <code>required int64 offset = 2;</code>
     */
    boolean hasOffset();
    /**
     * <code>required int64 offset = 2;</code>
     */
    long getOffset();

    /**
     * <code>required int64 size = 3;</code>
     */
    boolean hasSize();
    /**
     * <code>required int64 size = 3;</code>
     */
    long getSize();

    /**
     * <code>optional int64 tag = 4;</code>
     */
    boolean hasTag();
    /**
     * <code>optional int64 tag = 4;</code>
     */
    long getTag();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment}
   */
  public static final class BlockSegment extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment)
      BlockSegmentOrBuilder {
    // Use BlockSegment.newBuilder() to construct.
    private BlockSegment(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BlockSegment(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BlockSegment defaultInstance;
    public static BlockSegment getDefaultInstance() {
      return defaultInstance;
    }

    public BlockSegment getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BlockSegment(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              blockBinId_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              offset_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              size_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              tag_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockSegment_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockSegment_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment.Builder.class);
    }

    public static com.google.protobuf.Parser<BlockSegment> PARSER =
        new com.google.protobuf.AbstractParser<BlockSegment>() {
      public BlockSegment parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlockSegment(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BlockSegment> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int BLOCKBINID_FIELD_NUMBER = 1;
    private java.lang.Object blockBinId_;
    /**
     * <code>required string blockBinId = 1;</code>
     */
    public boolean hasBlockBinId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string blockBinId = 1;</code>
     */
    public java.lang.String getBlockBinId() {
      java.lang.Object ref = blockBinId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          blockBinId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string blockBinId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getBlockBinIdBytes() {
      java.lang.Object ref = blockBinId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        blockBinId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OFFSET_FIELD_NUMBER = 2;
    private long offset_;
    /**
     * <code>required int64 offset = 2;</code>
     */
    public boolean hasOffset() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 offset = 2;</code>
     */
    public long getOffset() {
      return offset_;
    }

    public static final int SIZE_FIELD_NUMBER = 3;
    private long size_;
    /**
     * <code>required int64 size = 3;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 size = 3;</code>
     */
    public long getSize() {
      return size_;
    }

    public static final int TAG_FIELD_NUMBER = 4;
    private long tag_;
    /**
     * <code>optional int64 tag = 4;</code>
     */
    public boolean hasTag() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 tag = 4;</code>
     */
    public long getTag() {
      return tag_;
    }

    private void initFields() {
      blockBinId_ = "";
      offset_ = 0L;
      size_ = 0L;
      tag_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasBlockBinId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getBlockBinIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, offset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, size_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, tag_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getBlockBinIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, offset_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, size_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, tag_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegmentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockSegment_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockSegment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        blockBinId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        offset_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        size_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        tag_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockSegment_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.blockBinId_ = blockBinId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.offset_ = offset_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.tag_ = tag_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment.getDefaultInstance()) return this;
        if (other.hasBlockBinId()) {
          bitField0_ |= 0x00000001;
          blockBinId_ = other.blockBinId_;
          onChanged();
        }
        if (other.hasOffset()) {
          setOffset(other.getOffset());
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasTag()) {
          setTag(other.getTag());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasBlockBinId()) {
          
          return false;
        }
        if (!hasOffset()) {
          
          return false;
        }
        if (!hasSize()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object blockBinId_ = "";
      /**
       * <code>required string blockBinId = 1;</code>
       */
      public boolean hasBlockBinId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string blockBinId = 1;</code>
       */
      public java.lang.String getBlockBinId() {
        java.lang.Object ref = blockBinId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            blockBinId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string blockBinId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getBlockBinIdBytes() {
        java.lang.Object ref = blockBinId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          blockBinId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string blockBinId = 1;</code>
       */
      public Builder setBlockBinId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        blockBinId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string blockBinId = 1;</code>
       */
      public Builder clearBlockBinId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        blockBinId_ = getDefaultInstance().getBlockBinId();
        onChanged();
        return this;
      }
      /**
       * <code>required string blockBinId = 1;</code>
       */
      public Builder setBlockBinIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        blockBinId_ = value;
        onChanged();
        return this;
      }

      private long offset_ ;
      /**
       * <code>required int64 offset = 2;</code>
       */
      public boolean hasOffset() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public long getOffset() {
        return offset_;
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public Builder setOffset(long value) {
        bitField0_ |= 0x00000002;
        offset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 offset = 2;</code>
       */
      public Builder clearOffset() {
        bitField0_ = (bitField0_ & ~0x00000002);
        offset_ = 0L;
        onChanged();
        return this;
      }

      private long size_ ;
      /**
       * <code>required int64 size = 3;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int64 size = 3;</code>
       */
      public long getSize() {
        return size_;
      }
      /**
       * <code>required int64 size = 3;</code>
       */
      public Builder setSize(long value) {
        bitField0_ |= 0x00000004;
        size_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 size = 3;</code>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        size_ = 0L;
        onChanged();
        return this;
      }

      private long tag_ ;
      /**
       * <code>optional int64 tag = 4;</code>
       */
      public boolean hasTag() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 tag = 4;</code>
       */
      public long getTag() {
        return tag_;
      }
      /**
       * <code>optional int64 tag = 4;</code>
       */
      public Builder setTag(long value) {
        bitField0_ |= 0x00000008;
        tag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 tag = 4;</code>
       */
      public Builder clearTag() {
        bitField0_ = (bitField0_ & ~0x00000008);
        tag_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment)
    }

    static {
      defaultInstance = new BlockSegment(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment)
  }

  public interface BlockAllocateRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockAllocateRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string ssId = 1;</code>
     */
    boolean hasSsId();
    /**
     * <code>required string ssId = 1;</code>
     */
    java.lang.String getSsId();
    /**
     * <code>required string ssId = 1;</code>
     */
    com.google.protobuf.ByteString
        getSsIdBytes();

    /**
     * <code>required string chunkId = 2;</code>
     */
    boolean hasChunkId();
    /**
     * <code>required string chunkId = 2;</code>
     */
    java.lang.String getChunkId();
    /**
     * <code>required string chunkId = 2;</code>
     */
    com.google.protobuf.ByteString
        getChunkIdBytes();

    /**
     * <code>optional int64 size = 3;</code>
     *
     * <pre>
     * size(in bytes) of the block to allocate
     * </pre>
     */
    boolean hasSize();
    /**
     * <code>optional int64 size = 3;</code>
     *
     * <pre>
     * size(in bytes) of the block to allocate
     * </pre>
     */
    long getSize();

    /**
     * <code>optional string hint = 4;</code>
     *
     * <pre>
     * pass partition id as optional hint to allocate on the same disk
     * </pre>
     */
    boolean hasHint();
    /**
     * <code>optional string hint = 4;</code>
     *
     * <pre>
     * pass partition id as optional hint to allocate on the same disk
     * </pre>
     */
    java.lang.String getHint();
    /**
     * <code>optional string hint = 4;</code>
     *
     * <pre>
     * pass partition id as optional hint to allocate on the same disk
     * </pre>
     */
    com.google.protobuf.ByteString
        getHintBytes();

    /**
     * <code>repeated string negativeHints = 5;</code>
     *
     * <pre>
     * a list of partition ids to avoid allocate on
     * </pre>
     */
    com.google.protobuf.ProtocolStringList
        getNegativeHintsList();
    /**
     * <code>repeated string negativeHints = 5;</code>
     *
     * <pre>
     * a list of partition ids to avoid allocate on
     * </pre>
     */
    int getNegativeHintsCount();
    /**
     * <code>repeated string negativeHints = 5;</code>
     *
     * <pre>
     * a list of partition ids to avoid allocate on
     * </pre>
     */
    java.lang.String getNegativeHints(int index);
    /**
     * <code>repeated string negativeHints = 5;</code>
     *
     * <pre>
     * a list of partition ids to avoid allocate on
     * </pre>
     */
    com.google.protobuf.ByteString
        getNegativeHintsBytes(int index);

    /**
     * <code>optional string writerId = 6;</code>
     */
    boolean hasWriterId();
    /**
     * <code>optional string writerId = 6;</code>
     */
    java.lang.String getWriterId();
    /**
     * <code>optional string writerId = 6;</code>
     */
    com.google.protobuf.ByteString
        getWriterIdBytes();

    /**
     * <code>optional bytes opaque = 7;</code>
     *
     * <pre>
     * opaque info for CM to locate the block info
     * if the block info could be stored other than chunk info
     * </pre>
     */
    boolean hasOpaque();
    /**
     * <code>optional bytes opaque = 7;</code>
     *
     * <pre>
     * opaque info for CM to locate the block info
     * if the block info could be stored other than chunk info
     * </pre>
     */
    com.google.protobuf.ByteString getOpaque();

    /**
     * <code>repeated int64 sizes = 8;</code>
     *
     * <pre>
     * Hints for SSM to allocate a series of discrete blocks
     * </pre>
     */
    java.util.List<java.lang.Long> getSizesList();
    /**
     * <code>repeated int64 sizes = 8;</code>
     *
     * <pre>
     * Hints for SSM to allocate a series of discrete blocks
     * </pre>
     */
    int getSizesCount();
    /**
     * <code>repeated int64 sizes = 8;</code>
     *
     * <pre>
     * Hints for SSM to allocate a series of discrete blocks
     * </pre>
     */
    long getSizes(int index);

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.ChunkAllocateType chunkAllocateType = 9;</code>
     */
    boolean hasChunkAllocateType();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.ChunkAllocateType chunkAllocateType = 9;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.ChunkAllocateType getChunkAllocateType();

    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.AllocateProcessType allocateProcessType = 10;</code>
     */
    boolean hasAllocateProcessType();
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.AllocateProcessType allocateProcessType = 10;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.AllocateProcessType getAllocateProcessType();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockAllocateRequest}
   */
  public static final class BlockAllocateRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockAllocateRequest)
      BlockAllocateRequestOrBuilder {
    // Use BlockAllocateRequest.newBuilder() to construct.
    private BlockAllocateRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BlockAllocateRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BlockAllocateRequest defaultInstance;
    public static BlockAllocateRequest getDefaultInstance() {
      return defaultInstance;
    }

    public BlockAllocateRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BlockAllocateRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              ssId_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              chunkId_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              size_ = input.readInt64();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              hint_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                negativeHints_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000010;
              }
              negativeHints_.add(bs);
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              writerId_ = bs;
              break;
            }
            case 58: {
              bitField0_ |= 0x00000020;
              opaque_ = input.readBytes();
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                sizes_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000080;
              }
              sizes_.add(input.readInt64());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                sizes_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                sizes_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.ChunkAllocateType value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.ChunkAllocateType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(9, rawValue);
              } else {
                bitField0_ |= 0x00000040;
                chunkAllocateType_ = value;
              }
              break;
            }
            case 80: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.AllocateProcessType value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.AllocateProcessType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(10, rawValue);
              } else {
                bitField0_ |= 0x00000080;
                allocateProcessType_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          negativeHints_ = negativeHints_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          sizes_ = java.util.Collections.unmodifiableList(sizes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockAllocateRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockAllocateRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<BlockAllocateRequest> PARSER =
        new com.google.protobuf.AbstractParser<BlockAllocateRequest>() {
      public BlockAllocateRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlockAllocateRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BlockAllocateRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SSID_FIELD_NUMBER = 1;
    private java.lang.Object ssId_;
    /**
     * <code>required string ssId = 1;</code>
     */
    public boolean hasSsId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string ssId = 1;</code>
     */
    public java.lang.String getSsId() {
      java.lang.Object ref = ssId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ssId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string ssId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSsIdBytes() {
      java.lang.Object ref = ssId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ssId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHUNKID_FIELD_NUMBER = 2;
    private java.lang.Object chunkId_;
    /**
     * <code>required string chunkId = 2;</code>
     */
    public boolean hasChunkId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string chunkId = 2;</code>
     */
    public java.lang.String getChunkId() {
      java.lang.Object ref = chunkId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          chunkId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string chunkId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getChunkIdBytes() {
      java.lang.Object ref = chunkId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        chunkId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SIZE_FIELD_NUMBER = 3;
    private long size_;
    /**
     * <code>optional int64 size = 3;</code>
     *
     * <pre>
     * size(in bytes) of the block to allocate
     * </pre>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 size = 3;</code>
     *
     * <pre>
     * size(in bytes) of the block to allocate
     * </pre>
     */
    public long getSize() {
      return size_;
    }

    public static final int HINT_FIELD_NUMBER = 4;
    private java.lang.Object hint_;
    /**
     * <code>optional string hint = 4;</code>
     *
     * <pre>
     * pass partition id as optional hint to allocate on the same disk
     * </pre>
     */
    public boolean hasHint() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string hint = 4;</code>
     *
     * <pre>
     * pass partition id as optional hint to allocate on the same disk
     * </pre>
     */
    public java.lang.String getHint() {
      java.lang.Object ref = hint_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          hint_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string hint = 4;</code>
     *
     * <pre>
     * pass partition id as optional hint to allocate on the same disk
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHintBytes() {
      java.lang.Object ref = hint_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NEGATIVEHINTS_FIELD_NUMBER = 5;
    private com.google.protobuf.LazyStringList negativeHints_;
    /**
     * <code>repeated string negativeHints = 5;</code>
     *
     * <pre>
     * a list of partition ids to avoid allocate on
     * </pre>
     */
    public com.google.protobuf.ProtocolStringList
        getNegativeHintsList() {
      return negativeHints_;
    }
    /**
     * <code>repeated string negativeHints = 5;</code>
     *
     * <pre>
     * a list of partition ids to avoid allocate on
     * </pre>
     */
    public int getNegativeHintsCount() {
      return negativeHints_.size();
    }
    /**
     * <code>repeated string negativeHints = 5;</code>
     *
     * <pre>
     * a list of partition ids to avoid allocate on
     * </pre>
     */
    public java.lang.String getNegativeHints(int index) {
      return negativeHints_.get(index);
    }
    /**
     * <code>repeated string negativeHints = 5;</code>
     *
     * <pre>
     * a list of partition ids to avoid allocate on
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNegativeHintsBytes(int index) {
      return negativeHints_.getByteString(index);
    }

    public static final int WRITERID_FIELD_NUMBER = 6;
    private java.lang.Object writerId_;
    /**
     * <code>optional string writerId = 6;</code>
     */
    public boolean hasWriterId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string writerId = 6;</code>
     */
    public java.lang.String getWriterId() {
      java.lang.Object ref = writerId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          writerId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string writerId = 6;</code>
     */
    public com.google.protobuf.ByteString
        getWriterIdBytes() {
      java.lang.Object ref = writerId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        writerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OPAQUE_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString opaque_;
    /**
     * <code>optional bytes opaque = 7;</code>
     *
     * <pre>
     * opaque info for CM to locate the block info
     * if the block info could be stored other than chunk info
     * </pre>
     */
    public boolean hasOpaque() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bytes opaque = 7;</code>
     *
     * <pre>
     * opaque info for CM to locate the block info
     * if the block info could be stored other than chunk info
     * </pre>
     */
    public com.google.protobuf.ByteString getOpaque() {
      return opaque_;
    }

    public static final int SIZES_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Long> sizes_;
    /**
     * <code>repeated int64 sizes = 8;</code>
     *
     * <pre>
     * Hints for SSM to allocate a series of discrete blocks
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getSizesList() {
      return sizes_;
    }
    /**
     * <code>repeated int64 sizes = 8;</code>
     *
     * <pre>
     * Hints for SSM to allocate a series of discrete blocks
     * </pre>
     */
    public int getSizesCount() {
      return sizes_.size();
    }
    /**
     * <code>repeated int64 sizes = 8;</code>
     *
     * <pre>
     * Hints for SSM to allocate a series of discrete blocks
     * </pre>
     */
    public long getSizes(int index) {
      return sizes_.get(index);
    }

    public static final int CHUNKALLOCATETYPE_FIELD_NUMBER = 9;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.ChunkAllocateType chunkAllocateType_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.ChunkAllocateType chunkAllocateType = 9;</code>
     */
    public boolean hasChunkAllocateType() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.ChunkAllocateType chunkAllocateType = 9;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.ChunkAllocateType getChunkAllocateType() {
      return chunkAllocateType_;
    }

    public static final int ALLOCATEPROCESSTYPE_FIELD_NUMBER = 10;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.AllocateProcessType allocateProcessType_;
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.AllocateProcessType allocateProcessType = 10;</code>
     */
    public boolean hasAllocateProcessType() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.AllocateProcessType allocateProcessType = 10;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.AllocateProcessType getAllocateProcessType() {
      return allocateProcessType_;
    }

    private void initFields() {
      ssId_ = "";
      chunkId_ = "";
      size_ = 0L;
      hint_ = "";
      negativeHints_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      writerId_ = "";
      opaque_ = com.google.protobuf.ByteString.EMPTY;
      sizes_ = java.util.Collections.emptyList();
      chunkAllocateType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.ChunkAllocateType.UNKNOWN_CHUNK;
      allocateProcessType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.AllocateProcessType.UNKNOWN_PROCESS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSsId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChunkId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSsIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getChunkIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, size_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getHintBytes());
      }
      for (int i = 0; i < negativeHints_.size(); i++) {
        output.writeBytes(5, negativeHints_.getByteString(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(6, getWriterIdBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(7, opaque_);
      }
      for (int i = 0; i < sizes_.size(); i++) {
        output.writeInt64(8, sizes_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(9, chunkAllocateType_.getNumber());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(10, allocateProcessType_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSsIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getChunkIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, size_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getHintBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < negativeHints_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(negativeHints_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getNegativeHintsList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getWriterIdBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, opaque_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sizes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(sizes_.get(i));
        }
        size += dataSize;
        size += 1 * getSizesList().size();
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, chunkAllocateType_.getNumber());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, allocateProcessType_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockAllocateRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockAllocateRequest)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockAllocateRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockAllocateRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ssId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        chunkId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        size_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        hint_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        negativeHints_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        writerId_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        opaque_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        sizes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        chunkAllocateType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.ChunkAllocateType.UNKNOWN_CHUNK;
        bitField0_ = (bitField0_ & ~0x00000100);
        allocateProcessType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.AllocateProcessType.UNKNOWN_PROCESS;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockAllocateRequest_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ssId_ = ssId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.chunkId_ = chunkId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.hint_ = hint_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          negativeHints_ = negativeHints_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.negativeHints_ = negativeHints_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.writerId_ = writerId_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.opaque_ = opaque_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          sizes_ = java.util.Collections.unmodifiableList(sizes_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.sizes_ = sizes_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.chunkAllocateType_ = chunkAllocateType_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000080;
        }
        result.allocateProcessType_ = allocateProcessType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest.getDefaultInstance()) return this;
        if (other.hasSsId()) {
          bitField0_ |= 0x00000001;
          ssId_ = other.ssId_;
          onChanged();
        }
        if (other.hasChunkId()) {
          bitField0_ |= 0x00000002;
          chunkId_ = other.chunkId_;
          onChanged();
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasHint()) {
          bitField0_ |= 0x00000008;
          hint_ = other.hint_;
          onChanged();
        }
        if (!other.negativeHints_.isEmpty()) {
          if (negativeHints_.isEmpty()) {
            negativeHints_ = other.negativeHints_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureNegativeHintsIsMutable();
            negativeHints_.addAll(other.negativeHints_);
          }
          onChanged();
        }
        if (other.hasWriterId()) {
          bitField0_ |= 0x00000020;
          writerId_ = other.writerId_;
          onChanged();
        }
        if (other.hasOpaque()) {
          setOpaque(other.getOpaque());
        }
        if (!other.sizes_.isEmpty()) {
          if (sizes_.isEmpty()) {
            sizes_ = other.sizes_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureSizesIsMutable();
            sizes_.addAll(other.sizes_);
          }
          onChanged();
        }
        if (other.hasChunkAllocateType()) {
          setChunkAllocateType(other.getChunkAllocateType());
        }
        if (other.hasAllocateProcessType()) {
          setAllocateProcessType(other.getAllocateProcessType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSsId()) {
          
          return false;
        }
        if (!hasChunkId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object ssId_ = "";
      /**
       * <code>required string ssId = 1;</code>
       */
      public boolean hasSsId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string ssId = 1;</code>
       */
      public java.lang.String getSsId() {
        java.lang.Object ref = ssId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ssId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string ssId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSsIdBytes() {
        java.lang.Object ref = ssId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ssId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string ssId = 1;</code>
       */
      public Builder setSsId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ssId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string ssId = 1;</code>
       */
      public Builder clearSsId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ssId_ = getDefaultInstance().getSsId();
        onChanged();
        return this;
      }
      /**
       * <code>required string ssId = 1;</code>
       */
      public Builder setSsIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ssId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object chunkId_ = "";
      /**
       * <code>required string chunkId = 2;</code>
       */
      public boolean hasChunkId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string chunkId = 2;</code>
       */
      public java.lang.String getChunkId() {
        java.lang.Object ref = chunkId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            chunkId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string chunkId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getChunkIdBytes() {
        java.lang.Object ref = chunkId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          chunkId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string chunkId = 2;</code>
       */
      public Builder setChunkId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        chunkId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string chunkId = 2;</code>
       */
      public Builder clearChunkId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        chunkId_ = getDefaultInstance().getChunkId();
        onChanged();
        return this;
      }
      /**
       * <code>required string chunkId = 2;</code>
       */
      public Builder setChunkIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        chunkId_ = value;
        onChanged();
        return this;
      }

      private long size_ ;
      /**
       * <code>optional int64 size = 3;</code>
       *
       * <pre>
       * size(in bytes) of the block to allocate
       * </pre>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 size = 3;</code>
       *
       * <pre>
       * size(in bytes) of the block to allocate
       * </pre>
       */
      public long getSize() {
        return size_;
      }
      /**
       * <code>optional int64 size = 3;</code>
       *
       * <pre>
       * size(in bytes) of the block to allocate
       * </pre>
       */
      public Builder setSize(long value) {
        bitField0_ |= 0x00000004;
        size_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 size = 3;</code>
       *
       * <pre>
       * size(in bytes) of the block to allocate
       * </pre>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        size_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object hint_ = "";
      /**
       * <code>optional string hint = 4;</code>
       *
       * <pre>
       * pass partition id as optional hint to allocate on the same disk
       * </pre>
       */
      public boolean hasHint() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string hint = 4;</code>
       *
       * <pre>
       * pass partition id as optional hint to allocate on the same disk
       * </pre>
       */
      public java.lang.String getHint() {
        java.lang.Object ref = hint_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            hint_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string hint = 4;</code>
       *
       * <pre>
       * pass partition id as optional hint to allocate on the same disk
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHintBytes() {
        java.lang.Object ref = hint_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hint_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string hint = 4;</code>
       *
       * <pre>
       * pass partition id as optional hint to allocate on the same disk
       * </pre>
       */
      public Builder setHint(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        hint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string hint = 4;</code>
       *
       * <pre>
       * pass partition id as optional hint to allocate on the same disk
       * </pre>
       */
      public Builder clearHint() {
        bitField0_ = (bitField0_ & ~0x00000008);
        hint_ = getDefaultInstance().getHint();
        onChanged();
        return this;
      }
      /**
       * <code>optional string hint = 4;</code>
       *
       * <pre>
       * pass partition id as optional hint to allocate on the same disk
       * </pre>
       */
      public Builder setHintBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        hint_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList negativeHints_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureNegativeHintsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          negativeHints_ = new com.google.protobuf.LazyStringArrayList(negativeHints_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated string negativeHints = 5;</code>
       *
       * <pre>
       * a list of partition ids to avoid allocate on
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getNegativeHintsList() {
        return negativeHints_.getUnmodifiableView();
      }
      /**
       * <code>repeated string negativeHints = 5;</code>
       *
       * <pre>
       * a list of partition ids to avoid allocate on
       * </pre>
       */
      public int getNegativeHintsCount() {
        return negativeHints_.size();
      }
      /**
       * <code>repeated string negativeHints = 5;</code>
       *
       * <pre>
       * a list of partition ids to avoid allocate on
       * </pre>
       */
      public java.lang.String getNegativeHints(int index) {
        return negativeHints_.get(index);
      }
      /**
       * <code>repeated string negativeHints = 5;</code>
       *
       * <pre>
       * a list of partition ids to avoid allocate on
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNegativeHintsBytes(int index) {
        return negativeHints_.getByteString(index);
      }
      /**
       * <code>repeated string negativeHints = 5;</code>
       *
       * <pre>
       * a list of partition ids to avoid allocate on
       * </pre>
       */
      public Builder setNegativeHints(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureNegativeHintsIsMutable();
        negativeHints_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string negativeHints = 5;</code>
       *
       * <pre>
       * a list of partition ids to avoid allocate on
       * </pre>
       */
      public Builder addNegativeHints(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureNegativeHintsIsMutable();
        negativeHints_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string negativeHints = 5;</code>
       *
       * <pre>
       * a list of partition ids to avoid allocate on
       * </pre>
       */
      public Builder addAllNegativeHints(
          java.lang.Iterable<java.lang.String> values) {
        ensureNegativeHintsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, negativeHints_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string negativeHints = 5;</code>
       *
       * <pre>
       * a list of partition ids to avoid allocate on
       * </pre>
       */
      public Builder clearNegativeHints() {
        negativeHints_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string negativeHints = 5;</code>
       *
       * <pre>
       * a list of partition ids to avoid allocate on
       * </pre>
       */
      public Builder addNegativeHintsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureNegativeHintsIsMutable();
        negativeHints_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object writerId_ = "";
      /**
       * <code>optional string writerId = 6;</code>
       */
      public boolean hasWriterId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string writerId = 6;</code>
       */
      public java.lang.String getWriterId() {
        java.lang.Object ref = writerId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            writerId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string writerId = 6;</code>
       */
      public com.google.protobuf.ByteString
          getWriterIdBytes() {
        java.lang.Object ref = writerId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          writerId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string writerId = 6;</code>
       */
      public Builder setWriterId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        writerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string writerId = 6;</code>
       */
      public Builder clearWriterId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        writerId_ = getDefaultInstance().getWriterId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string writerId = 6;</code>
       */
      public Builder setWriterIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        writerId_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString opaque_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes opaque = 7;</code>
       *
       * <pre>
       * opaque info for CM to locate the block info
       * if the block info could be stored other than chunk info
       * </pre>
       */
      public boolean hasOpaque() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bytes opaque = 7;</code>
       *
       * <pre>
       * opaque info for CM to locate the block info
       * if the block info could be stored other than chunk info
       * </pre>
       */
      public com.google.protobuf.ByteString getOpaque() {
        return opaque_;
      }
      /**
       * <code>optional bytes opaque = 7;</code>
       *
       * <pre>
       * opaque info for CM to locate the block info
       * if the block info could be stored other than chunk info
       * </pre>
       */
      public Builder setOpaque(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        opaque_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes opaque = 7;</code>
       *
       * <pre>
       * opaque info for CM to locate the block info
       * if the block info could be stored other than chunk info
       * </pre>
       */
      public Builder clearOpaque() {
        bitField0_ = (bitField0_ & ~0x00000040);
        opaque_ = getDefaultInstance().getOpaque();
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> sizes_ = java.util.Collections.emptyList();
      private void ensureSizesIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          sizes_ = new java.util.ArrayList<java.lang.Long>(sizes_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int64 sizes = 8;</code>
       *
       * <pre>
       * Hints for SSM to allocate a series of discrete blocks
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getSizesList() {
        return java.util.Collections.unmodifiableList(sizes_);
      }
      /**
       * <code>repeated int64 sizes = 8;</code>
       *
       * <pre>
       * Hints for SSM to allocate a series of discrete blocks
       * </pre>
       */
      public int getSizesCount() {
        return sizes_.size();
      }
      /**
       * <code>repeated int64 sizes = 8;</code>
       *
       * <pre>
       * Hints for SSM to allocate a series of discrete blocks
       * </pre>
       */
      public long getSizes(int index) {
        return sizes_.get(index);
      }
      /**
       * <code>repeated int64 sizes = 8;</code>
       *
       * <pre>
       * Hints for SSM to allocate a series of discrete blocks
       * </pre>
       */
      public Builder setSizes(
          int index, long value) {
        ensureSizesIsMutable();
        sizes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 sizes = 8;</code>
       *
       * <pre>
       * Hints for SSM to allocate a series of discrete blocks
       * </pre>
       */
      public Builder addSizes(long value) {
        ensureSizesIsMutable();
        sizes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 sizes = 8;</code>
       *
       * <pre>
       * Hints for SSM to allocate a series of discrete blocks
       * </pre>
       */
      public Builder addAllSizes(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSizesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sizes_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 sizes = 8;</code>
       *
       * <pre>
       * Hints for SSM to allocate a series of discrete blocks
       * </pre>
       */
      public Builder clearSizes() {
        sizes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.ChunkAllocateType chunkAllocateType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.ChunkAllocateType.UNKNOWN_CHUNK;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.ChunkAllocateType chunkAllocateType = 9;</code>
       */
      public boolean hasChunkAllocateType() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.ChunkAllocateType chunkAllocateType = 9;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.ChunkAllocateType getChunkAllocateType() {
        return chunkAllocateType_;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.ChunkAllocateType chunkAllocateType = 9;</code>
       */
      public Builder setChunkAllocateType(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.ChunkAllocateType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        chunkAllocateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.ChunkAllocateType chunkAllocateType = 9;</code>
       */
      public Builder clearChunkAllocateType() {
        bitField0_ = (bitField0_ & ~0x00000100);
        chunkAllocateType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.ChunkAllocateType.UNKNOWN_CHUNK;
        onChanged();
        return this;
      }

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.AllocateProcessType allocateProcessType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.AllocateProcessType.UNKNOWN_PROCESS;
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.AllocateProcessType allocateProcessType = 10;</code>
       */
      public boolean hasAllocateProcessType() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.AllocateProcessType allocateProcessType = 10;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.AllocateProcessType getAllocateProcessType() {
        return allocateProcessType_;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.AllocateProcessType allocateProcessType = 10;</code>
       */
      public Builder setAllocateProcessType(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.AllocateProcessType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        allocateProcessType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.AllocateProcessType allocateProcessType = 10;</code>
       */
      public Builder clearAllocateProcessType() {
        bitField0_ = (bitField0_ & ~0x00000200);
        allocateProcessType_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.AllocateProcessType.UNKNOWN_PROCESS;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockAllocateRequest)
    }

    static {
      defaultInstance = new BlockAllocateRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockAllocateRequest)
  }

  public interface BlockAllocateResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockAllocateResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockOperationStatus status = 1 [default = SUCCESS];</code>
     */
    boolean hasStatus();
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockOperationStatus status = 1 [default = SUCCESS];</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockOperationStatus getStatus();

    /**
     * <code>optional string ssId = 2;</code>
     *
     * <pre>
     * redundant with that in request,
     * to make the processing of response and debug easier
     * </pre>
     */
    boolean hasSsId();
    /**
     * <code>optional string ssId = 2;</code>
     *
     * <pre>
     * redundant with that in request,
     * to make the processing of response and debug easier
     * </pre>
     */
    java.lang.String getSsId();
    /**
     * <code>optional string ssId = 2;</code>
     *
     * <pre>
     * redundant with that in request,
     * to make the processing of response and debug easier
     * </pre>
     */
    com.google.protobuf.ByteString
        getSsIdBytes();

    /**
     * <code>optional string partitionId = 3;</code>
     */
    boolean hasPartitionId();
    /**
     * <code>optional string partitionId = 3;</code>
     */
    java.lang.String getPartitionId();
    /**
     * <code>optional string partitionId = 3;</code>
     */
    com.google.protobuf.ByteString
        getPartitionIdBytes();

    /**
     * <code>optional string blockBinId = 4;</code>
     */
    boolean hasBlockBinId();
    /**
     * <code>optional string blockBinId = 4;</code>
     */
    java.lang.String getBlockBinId();
    /**
     * <code>optional string blockBinId = 4;</code>
     */
    com.google.protobuf.ByteString
        getBlockBinIdBytes();

    /**
     * <code>optional int64 offset = 5;</code>
     */
    boolean hasOffset();
    /**
     * <code>optional int64 offset = 5;</code>
     */
    long getOffset();

    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
     */
    java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment> 
        getSegmentsList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment getSegments(int index);
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
     */
    int getSegmentsCount();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
     */
    java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegmentOrBuilder> 
        getSegmentsOrBuilderList();
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
     */
    io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegmentOrBuilder getSegmentsOrBuilder(
        int index);

    /**
     * <code>optional int64 tag = 7;</code>
     */
    boolean hasTag();
    /**
     * <code>optional int64 tag = 7;</code>
     */
    long getTag();
  }
  /**
   * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockAllocateResponse}
   */
  public static final class BlockAllocateResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockAllocateResponse)
      BlockAllocateResponseOrBuilder {
    // Use BlockAllocateResponse.newBuilder() to construct.
    private BlockAllocateResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BlockAllocateResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BlockAllocateResponse defaultInstance;
    public static BlockAllocateResponse getDefaultInstance() {
      return defaultInstance;
    }

    public BlockAllocateResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BlockAllocateResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockOperationStatus value = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockOperationStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                status_ = value;
              }
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              ssId_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              partitionId_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              blockBinId_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              offset_ = input.readInt64();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                segments_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment>();
                mutable_bitField0_ |= 0x00000020;
              }
              segments_.add(input.readMessage(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment.PARSER, extensionRegistry));
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              tag_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          segments_ = java.util.Collections.unmodifiableList(segments_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockAllocateResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockAllocateResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<BlockAllocateResponse> PARSER =
        new com.google.protobuf.AbstractParser<BlockAllocateResponse>() {
      public BlockAllocateResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlockAllocateResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BlockAllocateResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int STATUS_FIELD_NUMBER = 1;
    private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockOperationStatus status_;
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockOperationStatus status = 1 [default = SUCCESS];</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockOperationStatus status = 1 [default = SUCCESS];</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockOperationStatus getStatus() {
      return status_;
    }

    public static final int SSID_FIELD_NUMBER = 2;
    private java.lang.Object ssId_;
    /**
     * <code>optional string ssId = 2;</code>
     *
     * <pre>
     * redundant with that in request,
     * to make the processing of response and debug easier
     * </pre>
     */
    public boolean hasSsId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string ssId = 2;</code>
     *
     * <pre>
     * redundant with that in request,
     * to make the processing of response and debug easier
     * </pre>
     */
    public java.lang.String getSsId() {
      java.lang.Object ref = ssId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ssId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ssId = 2;</code>
     *
     * <pre>
     * redundant with that in request,
     * to make the processing of response and debug easier
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSsIdBytes() {
      java.lang.Object ref = ssId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ssId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARTITIONID_FIELD_NUMBER = 3;
    private java.lang.Object partitionId_;
    /**
     * <code>optional string partitionId = 3;</code>
     */
    public boolean hasPartitionId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string partitionId = 3;</code>
     */
    public java.lang.String getPartitionId() {
      java.lang.Object ref = partitionId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          partitionId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string partitionId = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPartitionIdBytes() {
      java.lang.Object ref = partitionId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        partitionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BLOCKBINID_FIELD_NUMBER = 4;
    private java.lang.Object blockBinId_;
    /**
     * <code>optional string blockBinId = 4;</code>
     */
    public boolean hasBlockBinId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string blockBinId = 4;</code>
     */
    public java.lang.String getBlockBinId() {
      java.lang.Object ref = blockBinId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          blockBinId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string blockBinId = 4;</code>
     */
    public com.google.protobuf.ByteString
        getBlockBinIdBytes() {
      java.lang.Object ref = blockBinId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        blockBinId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OFFSET_FIELD_NUMBER = 5;
    private long offset_;
    /**
     * <code>optional int64 offset = 5;</code>
     */
    public boolean hasOffset() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 offset = 5;</code>
     */
    public long getOffset() {
      return offset_;
    }

    public static final int SEGMENTS_FIELD_NUMBER = 6;
    private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment> segments_;
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
     */
    public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment> getSegmentsList() {
      return segments_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
     */
    public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegmentOrBuilder> 
        getSegmentsOrBuilderList() {
      return segments_;
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
     */
    public int getSegmentsCount() {
      return segments_.size();
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment getSegments(int index) {
      return segments_.get(index);
    }
    /**
     * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
     */
    public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegmentOrBuilder getSegmentsOrBuilder(
        int index) {
      return segments_.get(index);
    }

    public static final int TAG_FIELD_NUMBER = 7;
    private long tag_;
    /**
     * <code>optional int64 tag = 7;</code>
     */
    public boolean hasTag() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 tag = 7;</code>
     */
    public long getTag() {
      return tag_;
    }

    private void initFields() {
      status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockOperationStatus.SUCCESS;
      ssId_ = "";
      partitionId_ = "";
      blockBinId_ = "";
      offset_ = 0L;
      segments_ = java.util.Collections.emptyList();
      tag_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSegmentsCount(); i++) {
        if (!getSegments(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getSsIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getPartitionIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getBlockBinIdBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, offset_);
      }
      for (int i = 0; i < segments_.size(); i++) {
        output.writeMessage(6, segments_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(7, tag_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getSsIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getPartitionIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getBlockBinIdBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, offset_);
      }
      for (int i = 0; i < segments_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, segments_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, tag_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockAllocateResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockAllocateResponse)
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockAllocateResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockAllocateResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse.class, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse.Builder.class);
      }

      // Construct using io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSegmentsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockOperationStatus.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        ssId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        partitionId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        blockBinId_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        offset_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (segmentsBuilder_ == null) {
          segments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          segmentsBuilder_.clear();
        }
        tag_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockAllocateResponse_descriptor;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse getDefaultInstanceForType() {
        return io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse.getDefaultInstance();
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse build() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse buildPartial() {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse result = new io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ssId_ = ssId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.partitionId_ = partitionId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.blockBinId_ = blockBinId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.offset_ = offset_;
        if (segmentsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            segments_ = java.util.Collections.unmodifiableList(segments_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.segments_ = segments_;
        } else {
          result.segments_ = segmentsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.tag_ = tag_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse) {
          return mergeFrom((io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse other) {
        if (other == io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasSsId()) {
          bitField0_ |= 0x00000002;
          ssId_ = other.ssId_;
          onChanged();
        }
        if (other.hasPartitionId()) {
          bitField0_ |= 0x00000004;
          partitionId_ = other.partitionId_;
          onChanged();
        }
        if (other.hasBlockBinId()) {
          bitField0_ |= 0x00000008;
          blockBinId_ = other.blockBinId_;
          onChanged();
        }
        if (other.hasOffset()) {
          setOffset(other.getOffset());
        }
        if (segmentsBuilder_ == null) {
          if (!other.segments_.isEmpty()) {
            if (segments_.isEmpty()) {
              segments_ = other.segments_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureSegmentsIsMutable();
              segments_.addAll(other.segments_);
            }
            onChanged();
          }
        } else {
          if (!other.segments_.isEmpty()) {
            if (segmentsBuilder_.isEmpty()) {
              segmentsBuilder_.dispose();
              segmentsBuilder_ = null;
              segments_ = other.segments_;
              bitField0_ = (bitField0_ & ~0x00000020);
              segmentsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSegmentsFieldBuilder() : null;
            } else {
              segmentsBuilder_.addAllMessages(other.segments_);
            }
          }
        }
        if (other.hasTag()) {
          setTag(other.getTag());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStatus()) {
          
          return false;
        }
        for (int i = 0; i < getSegmentsCount(); i++) {
          if (!getSegments(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockAllocateResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockOperationStatus status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockOperationStatus.SUCCESS;
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockOperationStatus getStatus() {
        return status_;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public Builder setStatus(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockOperationStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockOperationStatus status = 1 [default = SUCCESS];</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockOperationStatus.SUCCESS;
        onChanged();
        return this;
      }

      private java.lang.Object ssId_ = "";
      /**
       * <code>optional string ssId = 2;</code>
       *
       * <pre>
       * redundant with that in request,
       * to make the processing of response and debug easier
       * </pre>
       */
      public boolean hasSsId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string ssId = 2;</code>
       *
       * <pre>
       * redundant with that in request,
       * to make the processing of response and debug easier
       * </pre>
       */
      public java.lang.String getSsId() {
        java.lang.Object ref = ssId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ssId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ssId = 2;</code>
       *
       * <pre>
       * redundant with that in request,
       * to make the processing of response and debug easier
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSsIdBytes() {
        java.lang.Object ref = ssId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ssId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ssId = 2;</code>
       *
       * <pre>
       * redundant with that in request,
       * to make the processing of response and debug easier
       * </pre>
       */
      public Builder setSsId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        ssId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ssId = 2;</code>
       *
       * <pre>
       * redundant with that in request,
       * to make the processing of response and debug easier
       * </pre>
       */
      public Builder clearSsId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ssId_ = getDefaultInstance().getSsId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ssId = 2;</code>
       *
       * <pre>
       * redundant with that in request,
       * to make the processing of response and debug easier
       * </pre>
       */
      public Builder setSsIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        ssId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object partitionId_ = "";
      /**
       * <code>optional string partitionId = 3;</code>
       */
      public boolean hasPartitionId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string partitionId = 3;</code>
       */
      public java.lang.String getPartitionId() {
        java.lang.Object ref = partitionId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            partitionId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string partitionId = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPartitionIdBytes() {
        java.lang.Object ref = partitionId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          partitionId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string partitionId = 3;</code>
       */
      public Builder setPartitionId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        partitionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string partitionId = 3;</code>
       */
      public Builder clearPartitionId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        partitionId_ = getDefaultInstance().getPartitionId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string partitionId = 3;</code>
       */
      public Builder setPartitionIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        partitionId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object blockBinId_ = "";
      /**
       * <code>optional string blockBinId = 4;</code>
       */
      public boolean hasBlockBinId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string blockBinId = 4;</code>
       */
      public java.lang.String getBlockBinId() {
        java.lang.Object ref = blockBinId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            blockBinId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string blockBinId = 4;</code>
       */
      public com.google.protobuf.ByteString
          getBlockBinIdBytes() {
        java.lang.Object ref = blockBinId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          blockBinId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string blockBinId = 4;</code>
       */
      public Builder setBlockBinId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        blockBinId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string blockBinId = 4;</code>
       */
      public Builder clearBlockBinId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        blockBinId_ = getDefaultInstance().getBlockBinId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string blockBinId = 4;</code>
       */
      public Builder setBlockBinIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        blockBinId_ = value;
        onChanged();
        return this;
      }

      private long offset_ ;
      /**
       * <code>optional int64 offset = 5;</code>
       */
      public boolean hasOffset() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 offset = 5;</code>
       */
      public long getOffset() {
        return offset_;
      }
      /**
       * <code>optional int64 offset = 5;</code>
       */
      public Builder setOffset(long value) {
        bitField0_ |= 0x00000010;
        offset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 offset = 5;</code>
       */
      public Builder clearOffset() {
        bitField0_ = (bitField0_ & ~0x00000010);
        offset_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment> segments_ =
        java.util.Collections.emptyList();
      private void ensureSegmentsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          segments_ = new java.util.ArrayList<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment>(segments_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegmentOrBuilder> segmentsBuilder_;

      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment> getSegmentsList() {
        if (segmentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(segments_);
        } else {
          return segmentsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
       */
      public int getSegmentsCount() {
        if (segmentsBuilder_ == null) {
          return segments_.size();
        } else {
          return segmentsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment getSegments(int index) {
        if (segmentsBuilder_ == null) {
          return segments_.get(index);
        } else {
          return segmentsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
       */
      public Builder setSegments(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment value) {
        if (segmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSegmentsIsMutable();
          segments_.set(index, value);
          onChanged();
        } else {
          segmentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
       */
      public Builder setSegments(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment.Builder builderForValue) {
        if (segmentsBuilder_ == null) {
          ensureSegmentsIsMutable();
          segments_.set(index, builderForValue.build());
          onChanged();
        } else {
          segmentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
       */
      public Builder addSegments(io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment value) {
        if (segmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSegmentsIsMutable();
          segments_.add(value);
          onChanged();
        } else {
          segmentsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
       */
      public Builder addSegments(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment value) {
        if (segmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSegmentsIsMutable();
          segments_.add(index, value);
          onChanged();
        } else {
          segmentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
       */
      public Builder addSegments(
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment.Builder builderForValue) {
        if (segmentsBuilder_ == null) {
          ensureSegmentsIsMutable();
          segments_.add(builderForValue.build());
          onChanged();
        } else {
          segmentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
       */
      public Builder addSegments(
          int index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment.Builder builderForValue) {
        if (segmentsBuilder_ == null) {
          ensureSegmentsIsMutable();
          segments_.add(index, builderForValue.build());
          onChanged();
        } else {
          segmentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
       */
      public Builder addAllSegments(
          java.lang.Iterable<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment> values) {
        if (segmentsBuilder_ == null) {
          ensureSegmentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, segments_);
          onChanged();
        } else {
          segmentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
       */
      public Builder clearSegments() {
        if (segmentsBuilder_ == null) {
          segments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          segmentsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
       */
      public Builder removeSegments(int index) {
        if (segmentsBuilder_ == null) {
          ensureSegmentsIsMutable();
          segments_.remove(index);
          onChanged();
        } else {
          segmentsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment.Builder getSegmentsBuilder(
          int index) {
        return getSegmentsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegmentOrBuilder getSegmentsOrBuilder(
          int index) {
        if (segmentsBuilder_ == null) {
          return segments_.get(index);  } else {
          return segmentsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
       */
      public java.util.List<? extends io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegmentOrBuilder> 
           getSegmentsOrBuilderList() {
        if (segmentsBuilder_ != null) {
          return segmentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(segments_);
        }
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment.Builder addSegmentsBuilder() {
        return getSegmentsFieldBuilder().addBuilder(
            io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
       */
      public io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment.Builder addSegmentsBuilder(
          int index) {
        return getSegmentsFieldBuilder().addBuilder(
            index, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment.getDefaultInstance());
      }
      /**
       * <code>repeated .io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockSegment segments = 6;</code>
       */
      public java.util.List<io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment.Builder> 
           getSegmentsBuilderList() {
        return getSegmentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegmentOrBuilder> 
          getSegmentsFieldBuilder() {
        if (segmentsBuilder_ == null) {
          segmentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegment.Builder, io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.SsmMessage.BlockSegmentOrBuilder>(
                  segments_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          segments_ = null;
        }
        return segmentsBuilder_;
      }

      private long tag_ ;
      /**
       * <code>optional int64 tag = 7;</code>
       */
      public boolean hasTag() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 tag = 7;</code>
       */
      public long getTag() {
        return tag_;
      }
      /**
       * <code>optional int64 tag = 7;</code>
       */
      public Builder setTag(long value) {
        bitField0_ |= 0x00000040;
        tag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 tag = 7;</code>
       */
      public Builder clearTag() {
        bitField0_ = (bitField0_ & ~0x00000040);
        tag_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockAllocateResponse)
    }

    static {
      defaultInstance = new BlockAllocateResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:io.pravega.segmentstore.storage.impl.chunkstream.storageos.rpc.ssm.BlockAllocateResponse)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockSegment_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockSegment_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockAllocateRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockAllocateRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockAllocateResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockAllocateResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\tssm.proto\022Bio.pravega.segmentstore.sto" +
      "rage.impl.chunkstream.storageos.rpc.ssm\"" +
      "M\n\014BlockSegment\022\022\n\nblockBinId\030\001 \002(\t\022\016\n\006o" +
      "ffset\030\002 \002(\003\022\014\n\004size\030\003 \002(\003\022\013\n\003tag\030\004 \001(\003\"\201" +
      "\003\n\024BlockAllocateRequest\022\014\n\004ssId\030\001 \002(\t\022\017\n" +
      "\007chunkId\030\002 \002(\t\022\014\n\004size\030\003 \001(\003\022\014\n\004hint\030\004 \001" +
      "(\t\022\025\n\rnegativeHints\030\005 \003(\t\022\020\n\010writerId\030\006 " +
      "\001(\t\022\016\n\006opaque\030\007 \001(\014\022\r\n\005sizes\030\010 \003(\003\022p\n\021ch" +
      "unkAllocateType\030\t \001(\0162U.io.pravega.segme" +
      "ntstore.storage.impl.chunkstream.storage",
      "os.rpc.ssm.ChunkAllocateType\022t\n\023allocate" +
      "ProcessType\030\n \001(\0162W.io.pravega.segmentst" +
      "ore.storage.impl.chunkstream.storageos.r" +
      "pc.ssm.AllocateProcessType\"\302\002\n\025BlockAllo" +
      "cateResponse\022q\n\006status\030\001 \002(\0162X.io.praveg" +
      "a.segmentstore.storage.impl.chunkstream." +
      "storageos.rpc.ssm.BlockOperationStatus:\007" +
      "SUCCESS\022\014\n\004ssId\030\002 \001(\t\022\023\n\013partitionId\030\003 \001" +
      "(\t\022\022\n\nblockBinId\030\004 \001(\t\022\016\n\006offset\030\005 \001(\003\022b" +
      "\n\010segments\030\006 \003(\0132P.io.pravega.segmentsto",
      "re.storage.impl.chunkstream.storageos.rp" +
      "c.ssm.BlockSegment\022\013\n\003tag\030\007 \001(\003*\224\t\n\024Bloc" +
      "kOperationStatus\022\013\n\007SUCCESS\020\000\022\022\n\016ERROR_I" +
      "NTERNAL\020\001\022\032\n\026ERROR_INVALID_ARGUMENT\020\002\022\022\n" +
      "\016ERROR_NO_SPACE\020\003\022\030\n\024ERROR_NOT_REFERENCE" +
      "D\020\004\022\027\n\023ERROR_ALLOCATE_FAIL\020\005\022-\n)ERROR_MI" +
      "GRATION_CHUNK_DELETING_OR_DELETED\020\006\022&\n\"E" +
      "RROR_MIGRATION_CHUNK_LOCAL_ACTIVE\020\007\022%\n!E" +
      "RROR_MIGRATION_CHUNK_EC_RETIRING\020\010\022)\n%ER" +
      "ROR_MIGRATION_CHUNK_EC_NOT_COMPLETE\020\t\022\037\n",
      "\033ERROR_MIGRATION_SEGMENT_BAD\020\n\022\'\n#ERROR_" +
      "MIGRATION_CHUNK_REMOTE_ACTIVE\020\013\022,\n(ERROR" +
      "_MIGRATION_SOURCE_SEGMENT_GEO_CACHE\020\014\022)\n" +
      "%ERROR_MIGRATION_CHUNK_GEO_REPLICATING\020\r" +
      "\022&\n\"ERROR_MIGRATION_CHUNK_XOR_ENCODING\020\016" +
      "\022&\n\"ERROR_MIGRATION_CHUNK_XOR_DECODING\020\017" +
      "\022&\n\"ERROR_MIGRATION_CHUNK_GEO_DELETING\020\020" +
      "\022.\n*ERROR_MIGRATION_CHUNK_UNDER_TRANSFOR" +
      "MATION\020\021\022\036\n\032ERROR_INVALID_CHUNK_STATUS\020\022" +
      "\022#\n\037ERROR_MIGRATION_CHUNK_NOT_FOUND\020\023\022$\n",
      " ERROR_MIGRATION_ALLOCATE_TIMEOUT\020\024\0226\n2E" +
      "RROR_MIGRATION_SOURCE_SEGMENT_HAS_RECOVE" +
      "RY_STATUS\020\025\022,\n(ERROR_MIGRATION_SOURCE_SE" +
      "GMENT_NOT_VALID\020\026\022,\n(ERROR_MIGRATION_TAR" +
      "GET_SEGMENT_NOT_VALID\020\027\022,\n(ERROR_MIGRATI" +
      "ON_SOURCE_SEGMENT_NOT_FOUND\020\030\022,\n(ERROR_M" +
      "IGRATION_TARGET_SEGMENT_NOT_FOUND\020\031\022$\n E" +
      "RROR_MIGRATION_TASK_NOT_TRACKED\020\032\022)\n%ERR" +
      "OR_MIGRATION_UPDATE_CHUNKINFO_FAIL\020\033\022(\n$" +
      "ERROR_MIGRATION_CHECKSUM_UNAVAILABLE\020\034\022.",
      "\n*ERROR_MIGRATION_TARGET_SEGMENT_BLACKLI" +
      "STED\020\035*p\n\021ChunkAllocateType\022\021\n\rUNKNOWN_C" +
      "HUNK\020\000\022\016\n\nREPO_CHUNK\020\001\022\017\n\013BTREE_CHUNK\020\002\022" +
      "\021\n\rJOURNAL_CHUNK\020\003\022\024\n\020REALLOCATE_CHUNK\020\004" +
      "*\357\001\n\023AllocateProcessType\022\023\n\017UNKNOWN_PROC" +
      "ESS\020\000\022\013\n\007BLOBSVC\020\001\022\006\n\002CM\020\002\022\006\n\002SR\020\003\022\007\n\003SS" +
      "M\020\004\022\006\n\002RM\020\005\022\014\n\010RESOURCE\020\006\022\017\n\013DATAHEADSVC" +
      "\020\007\022\t\n\005VNEST\020\010\022\013\n\007DTQUERY\020\t\022\021\n\rOBJCONTROL" +
      "SVC\020\n\022\017\n\013GEORECEIVER\020\013\022\t\n\005EVENT\020\014\022\014\n\010MET" +
      "ERING\020\r\022\r\n\tTRANSFORM\020\016\022\022\n\016SSM_REALLOCATE",
      "\020\017BR\nBio.pravega.segmentstore.storage.im" +
      "pl.chunkstream.storageos.rpc.ssmB\nSsmMes" +
      "sageP\000"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockSegment_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockSegment_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockSegment_descriptor,
        new java.lang.String[] { "BlockBinId", "Offset", "Size", "Tag", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockAllocateRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockAllocateRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockAllocateRequest_descriptor,
        new java.lang.String[] { "SsId", "ChunkId", "Size", "Hint", "NegativeHints", "WriterId", "Opaque", "Sizes", "ChunkAllocateType", "AllocateProcessType", });
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockAllocateResponse_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockAllocateResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_pravega_segmentstore_storage_impl_chunkstream_storageos_rpc_ssm_BlockAllocateResponse_descriptor,
        new java.lang.String[] { "Status", "SsId", "PartitionId", "BlockBinId", "Offset", "Segments", "Tag", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
